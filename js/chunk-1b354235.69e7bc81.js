(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-1b354235"],{"218c":function(e,t,i){"use strict";i.d(t,"a",(function(){return f})),i.d(t,"b",(function(){return p})),i.d(t,"c",(function(){return d})),i.d(t,"d",(function(){return c})),i.d(t,"e",(function(){return m})),i.d(t,"f",(function(){return u})),i.d(t,"g",(function(){return h})),i.d(t,"h",(function(){return y}));i("e06a");var a=i("b2b2");class n{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const i=e+"/"+t,a=this._cachedBlocks;if(a.has(i)){const e=a.get(i);return e.refCount--,e.refCount<=0&&(a.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const i=e+"/"+t,a=this._cachedBlocks;if(a.has(i)){const e=a.get(i);return e.ts=Date.now(),e.refCount++,a.delete(i),a.set(i,e),e.block}return null}putBlock(e,t,i,a=null){const n=this._cachedBlocks,r=e+"/"+t;if(n.has(r)){const e=n.get(r);e.ts=Date.now(),e.refCount++}else n.set(r,{block:i,ts:Date.now(),refCount:1,controller:a});this._trim(),this._updateTimer()}deleteBlock(e,t){const i=this._cachedBlocks,a=e+"/"+t;i.has(a)&&i.delete(a)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const t=Array.from(e),i=Date.now();for(let a=0;a<t.length&&t[a][1].ts<=i-this._duration;a++)e.delete(t[a][0]);0===e.size&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}}var r=i("b4e0"),s=i("4ae5");const o=new Map,l=new n;function c(e,t){return null==t?e:`${e}?sliceId=${t}`}function u(e,t){const i={extent:null,rasterInfo:t,cache:new Map};if(o.has(e)){const t=o.get(e);return t.push(i),t.length-1}return o.set(e,[i]),0}function h(e,t){if(o.has(e)){const i=o.get(e);i[t]=null,i.some(e=>null!=e)||o.delete(e)}}function f(e,t,i){if(!o.has(e))return null==t?l.decreaseRefCount(e,i):0;const a=o.get(e);if(null==a[t])return l.decreaseRefCount(e,i);const n=a[t].cache;if(n.has(i)){const e=n.get(i);if(e.refCount--,0===e.refCount){n.delete(i);for(let e=0;e<a.length;e++)a[e]&&a[e].cache.has(i)&&a[e].cache.delete(i);e.controller&&e.controller.abort()}return e.refCount}return 0}function d(e,t,i){if(!o.has(e))return null==t?l.getBlock(e,i):null;const a=o.get(e);if(null==a[t]){for(let e=0;e<a.length;e++)if(a[e]&&a[e].cache.has(i)){const t=a[e].cache.get(i);return t.refCount++,t.block}return l.getBlock(e,i)}const n=a[t].cache;if(n.has(i)){const e=n.get(i);return e.refCount++,e.block}for(let r=0;r<a.length;r++)if(r!==t&&a[r]&&a[r]&&a[r].cache.has(i)){const e=a[r].cache.get(i);return e.refCount++,n.set(i,e),e.block}return null}function m(e,t,i,a,n=null){if(!o.has(e))return void(null==t&&l.putBlock(e,i,a,n));const r=o.get(e);if(null==r[t])return void l.putBlock(e,i,a,n);const s={refCount:1,block:a,isResolved:!1,isRejected:!1,controller:n};a.then(()=>s.isResolved=!0).catch(()=>s.isRejected=!0),r[t].cache.set(i,s)}function p(e,t,i){if(!o.has(e))return void(null==t&&l.deleteBlock(e,i));const a=o.get(e);null!=a[t]?a[t].cache.delete(i):l.deleteBlock(e,i)}function b(e,t){if(!o.has(e))return null;const i=o.get(e);return null==i[t]?null:i[t]}function y(e,t,i,n,o,l,c=null){const u=b(e,t),h=u.extent,{cache:f,rasterInfo:d}=u;if(h&&h.xmin===i.xmin&&h.xmax===i.xmax&&h.ymin===i.ymin&&h.ymax===i.ymax)return;const m=i.clone().normalize(),{spatialReference:p,transform:y}=d,g=new Set;for(let b=0;b<m.length;b++){const e=m[b];if(e.xmax-e.xmin<=n||e.ymax-e.ymin<=n)continue;let t=Object(r["h"])(e,p,c);Object(a["k"])(y)&&(t=y.inverseTransform(t));const i=new s["a"]({x:n,y:n,spatialReference:e.spatialReference});if(null==o&&!(o=Object(r["j"])(i,p,e,c)))return;const{pyramidLevel:u,pyramidResolution:h,excessiveReading:f}=Object(r["m"])(o,d,l||"closest");if(f)return;const{storageInfo:x}=d,{origin:v}=x,O={x:Math.max(0,Math.floor((t.xmin-v.x)/h.x)),y:Math.max(0,Math.floor((v.y-t.ymax)/h.y))},w=Math.ceil((t.xmax-t.xmin)/h.x-.1),I=Math.ceil((t.ymax-t.ymin)/h.y-.1),j=u>0?x.pyramidBlockWidth:x.blockWidth,S=u>0?x.pyramidBlockHeight:x.blockHeight,_=1,T=Math.max(0,Math.floor(O.x/j)-_),R=Math.max(0,Math.floor(O.y/S)-_),k=Math.floor((O.x+w-1)/j)+_,C=Math.floor((O.y+I-1)/S)+_;for(let a=R;a<=C;a++)for(let e=T;e<=k;e++)g.add(`${u}/${a}/${e}`)}f.forEach((e,t)=>{if(!g.has(t)){const e=f.get(t);(null==e||e.isResolved||e.isRejected)&&f.delete(t)}}),u.extent={xmin:i.xmin,ymin:i.ymin,xmax:i.xmax,ymax:i.ymax}}},9651:function(e,t,i){"use strict";i.d(t,"a",(function(){return _}));var a,n=i("a4ee"),r=i("2eab"),s=i("fc29"),o=i("f0b9"),l=i("ce50"),c=i("9096"),u=i("e92d"),h=i("c24e"),f=i("8a44"),d=i("f4cc"),m=i("477c"),p=i("5815"),b=i("e041"),y=i("59b2"),g=i("b50f"),x=(i("c120"),i("1a3e")),v=i("d386"),O=i("7ffa");class w{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),a=i%8,n=i>>3,r=this._tileAvailabilityBitSet;return n<0||n>r.length?"unknown":r[n]&1<<a?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let a=!0,n=!0;const r=Math.ceil(t*i/8),s=new Uint8Array(r);let o=0;for(let l=0;l<e.length;l++){const t=l%8;e[l]?(n=!1,s[o]|=1<<t):a=!1,7===t&&++o}n?this._allAvailability="unavailable":a?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=s,this.byteSize+=s.length)}static fromDefinition(e,t){const i=e.service.request||r["default"],{row:a,col:n,width:s,height:o}=e,c={query:{f:"json"}};return t=t?{...c,...t}:c,i(j(e),t).then(e=>e.data).catch(e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:a,left:n,width:s,height:o},valid:!0,data:Object(g["b"])(s*o,0)};throw e}).then(e=>{if(e.location&&(e.location.top!==a||e.location.left!==n||e.location.width!==s||e.location.height!==o))throw new l["a"]("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:a,left:n,width:s,height:o}});return w.fromJSON(e)})}static fromJSON(e){w._validateJSON(e);const t=new w;return t.location=Object.freeze(Object(O["a"])(e.location)),t._updateFromData(e.data),Object.freeze(t)}static _validateJSON(e){if(!e||!e.location)throw new l["a"]("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new l["a"]("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new l["a"]("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new l["a"]("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new l["a"]("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function I(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}function j(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}const S=u["a"].getLogger("esri.layers.support.TilemapCache");let _=a=class extends(Object(c["b"])(s["a"])){constructor(e){super(e),this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2*o["a"].MEGABYTES,this.request=r["default"],this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new h["a"](this.cacheByteSize),this.own([Object(m["f"])(()=>{const{layer:e}=this;return[null==e?void 0:e.parsedUrl,null==e?void 0:e.tileServers,null==e?void 0:e.apiKey,null==e?void 0:e.customParameters]},()=>this._initializeTilemapDefinition()),Object(m["f"])(()=>{var e,t;return null==(e=this.layer)||null==(t=e.tileInfo)?void 0:t.lods},e=>this._initializeAvailableLevels(e),m["e"])]),this._initializeTilemapDefinition()}castLevels(e){return e<=2?(S.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,a){if(!this._availableLevels[e])return Promise.reject(new l["a"]("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const n=this._tmpTilemapDefinition,r=this._tilemapFromCache(e,t,i,n);if(r)return Promise.resolve(r);const s=a&&a.signal;return a={...a,signal:null},new Promise((e,t)=>{Object(d["m"])(s,()=>t(Object(d["b"])()));const i=I(n);let r=this._pendingTilemapRequests[i];if(!r){r=w.fromDefinition(n,a).then(e=>(this._tilemapCache.put(i,e,e.byteSize),e));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=r,r.then(e,e)}r.then(e,t)})}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const a=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return a?a.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,a){return this._availableLevels[e]?this.fetchTilemap(e,t,i,a).catch(e=>e).then(a=>{if(a instanceof w){const n=a.getAvailability(t,i);if("unavailable"===n)throw new l["a"]("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i});return n}if(Object(d["j"])(a))throw a;return"unknown"}):Promise.reject(new l["a"]("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,a,n){a.level=e,a.row=t,a.col=i;const r=this.layer.tileInfo;r.updateTileInfo(a);const s=this.fetchAvailability(e,t,i,n).catch(e=>{if(Object(d["j"])(e))throw e;if(r.upsampleTile(a))return this.fetchAvailabilityUpsample(a.level,a.row,a.col,a);throw e});return this._fetchAvailabilityUpsamplePrefetch(a.id,e,t,i,n,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,i,n,r,s){if(!this._prefetchingEnabled)return;const o="prefetch-"+e;if(this.handles.has(o))return;const l=new AbortController;s.then(()=>l.abort(),()=>l.abort());let c=!1;const u={remove(){c||(c=!0,l.abort())}};if(this.handles.add(u,o),await Object(p["c"])(10,l.signal).catch(()=>{}),c||(c=!0,this.handles.remove(o)),Object(d["k"])(l))return;const h={id:e,level:t,row:i,col:n},f={...r,signal:l.signal},m=this.layer.tileInfo;for(let d=0;a._prefetches.length<a._maxPrefetch&&m.upsampleTile(h);++d){const e=this.fetchAvailability(h.level,h.row,h.col,f);a._prefetches.push(e);const t=()=>{a._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){var e;if(!this.layer.parsedUrl)return;const{parsedUrl:t,apiKey:i,customParameters:a}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:t.path,query:Object(b["G"])({...t.query,...a,token:null!=i?i:null==(e=t.query)?void 0:e.token}),tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,a){a.level=e,a.row=t-t%this.size,a.col=i-i%this.size;const n=I(a);return this._tilemapCache.get(n)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach(e=>this._availableLevels[e.level]=!0)}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,a)=>!!e._tilemapFromCache(t,i,a,e._tmpTilemapDefinition)}}};_._maxPrefetch=4,_._prefetches=new f["a"]({initialSize:a._maxPrefetch}),Object(n["a"])([Object(y["b"])({constructOnly:!0,type:Number})],_.prototype,"levels",void 0),Object(n["a"])([Object(x["a"])("levels")],_.prototype,"castLevels",null),Object(n["a"])([Object(y["b"])({readOnly:!0,type:Number})],_.prototype,"size",null),Object(n["a"])([Object(y["b"])({constructOnly:!0,type:Number})],_.prototype,"cacheByteSize",void 0),Object(n["a"])([Object(y["b"])({constructOnly:!0})],_.prototype,"layer",void 0),Object(n["a"])([Object(y["b"])({constructOnly:!0})],_.prototype,"request",void 0),_=a=Object(n["a"])([Object(v["a"])("esri.layers.support.TilemapCache")],_)},9917:function(e,t,i){"use strict";i.r(t),i.d(t,"default",(function(){return et}));var a=i("a4ee"),n=i("4856"),r=i("ba40"),s=i("ce50"),o=i("b2b2"),l=i("e694"),c=i("f4cc"),u=i("477c"),h=i("59b2"),f=(i("b50f"),i("c120")),d=i("cea0"),m=i("448d"),p=i("afcf"),b=i("d386"),y=i("a6a3"),g=i("997b"),x=i("8b28"),v=(i("e06a"),i("2eab")),O=i("e92d"),w=i("4adc"),I=i("7f83"),j=i("54b4"),S=i("22f4"),_=i("b627"),T=i("da6b"),R=i("dff3"),k=i("c75d"),C=i("19db"),P=i("1ccd"),M=i("7220"),F=i("2616"),B=i("3af1"),D=i("5996");const z=O["a"].getLogger("esri.layers.mixins.ImageryTileMixin"),A=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set url(e){this._set("url",Object(j["g"])(e,z))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async convertVectorFieldData(e,t){if(Object(o["j"])(e))return null;const i=this._rasterJobHandler.instance,a=this.rasterInfo.dataType;return i?i.convertVectorFieldData({pixelBlock:e,dataType:a},t):Object(C["b"])(e,a)}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):Object(F["a"])(e.meshType,e.simulationSettings,e.flowData,Object(o["k"])(t.signal)?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:t}=this.rasterInfo;if(Object(o["j"])(t))return e;let i=e.multidimensionalDefinition||this.multidimensionalDefinition;!Object(o["j"])(i)&&i.length||(i=Object(k["b"])(this.raster.rasterInfo));const a=e.timeExtent||this.timeExtent;if(Object(o["k"])(i)&&Object(o["k"])(a)&&(Object(o["k"])(a.start)||Object(o["k"])(a.end))){var n,r;i=i.map(e=>e.clone());const s=null==(n=t.variables.find(({name:e})=>e===i[0].variableName))||null==(r=n.dimensions)?void 0:r.find(({name:e})=>"StdTime"===e),l=i.find(({dimensionName:e})=>"StdTime"===e);if(!s||!l)return{...e,multidimensionalDefinition:null};const{start:c,end:u}=a,h=Object(o["j"])(c)?null:c.getTime(),f=Object(o["j"])(u)?null:u.getTime(),d=null!=h?h:f,m=null!=f?f:h;if(Object(o["k"])(s.values)){const e=s.values.filter(e=>{if(Array.isArray(e)){if(d===m)return e[0]<=d&&e[1]>=d;const t=e[0]<=d&&e[1]>d||e[0]<m&&e[1]>=m,i=e[0]>=d&&e[1]<=m||e[0]<d&&e[1]>m;return t||i}return d===m?e===d:e>=d&&e<=m});if(e.length){const t=e.sort((e,t)=>{var i,a,n,r;return d===m?(null!=(i=e[0])?i:e)-(null!=(a=t[0])?a:t):Math.abs((null!=(n=e[1])?n:e)-m)-Math.abs((null!=(r=t[1])?r:t)-m)})[0];l.values=[t]}else i=null}else if(s.hasRegularIntervals&&s.extent){const[e,t]=s.extent;d>t||m<e?i=null:l.values=d===m?[d]:[Math.max(e,d),Math.min(t,m)]}}return{...e,multidimensionalDefinition:i}}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=Object(P["e"])(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!(Object(o["k"])(i)&&i.pixels&&i.pixels.length>0))return null;let a;await this.updateRenderer();const n=this._rasterJobHandler.instance,{bandIds:r}=this;return a=n?await n.symbolize({...e,simpleStretchParams:t,bandIds:r}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:r}),a}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t,i=!1){if(!this.loaded||Object(o["j"])(t))return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const a=Object(I["e"])(e);return R["a"].create({size:256,spatialReference:e,origin:a?{x:a.origin[0],y:a.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,a={}){if(a.requestAsImageElement){const n=this.getTileUrl(e,t,i);return Object(v["default"])(n,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:a.signal}).then(e=>e.data)}if(Object(o["k"])(this.rasterInfo.multidimensionalInfo)&&(a=this.normalizeRasterFetchOptions(a),Object(o["j"])(a.multidimensionalDefinition))){const n=a.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,i,n),pixelBlock:null}}return await this._initJobHandler(),"raster-shaded-relief"===this.renderer.type&&(a={...a,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,i,a)}async fetchPixels(e,t,i,a={}){return Object(o["k"])(this.rasterInfo.multidimensionalInfo)&&(a=this.normalizeRasterFetchOptions(a),Object(o["j"])(a.multidimensionalDefinition))?{extent:e,pixelBlock:null}:(await this._initJobHandler(),this.raster.fetchPixels(e,t,i,a))}async identify(e,t={}){return!Object(o["k"])(this.rasterInfo.multidimensionalInfo)||this.rasterInfo.hasMultidimensionalTranspose&&(Object(k["e"])(t.multidimensionalDefinition)||t.transposedVariableName||t.timeExtent)||(t=this.normalizeRasterFetchOptions(t),!Object(o["j"])(t.multidimensionalDefinition))?this.raster.identify(e,t):{location:e,value:null}}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var e;const t=this.rasterInfo.multidimensionalInfo;if(Object(o["j"])(t)||"standard-time"!==this.rasterInfo.dataType)return!1;const i=null==(e=this.multidimensionalDefinition[0])?void 0:e.variableName;return t.variables.some(e=>e.name===i&&e.dimensions.some(e=>"StdTime"===e.name))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=Object(k["b"])(this.raster.rasterInfo)),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new T["a"];return this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()}).catch(()=>null),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null,this._cachedRendererJson=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=Object(P["c"])(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;if(this.bandIds||(this.bandIds=Object(P["b"])(e)),!this.renderer){var t,i,a;const n=Object(P["a"])(e,{bandIds:this.bandIds,variableName:Object(o["k"])(this.multidimensionalDefinition)?null==(t=this.multidimensionalDefinition[0])?void 0:t.variableName:null});"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===n.type&&((null==(i=e.statistics)?void 0:i[0].max)>1e24||(null==(a=e.statistics)?void 0:a[0].min)<-1e24)&&(n.dynamicRangeAdjustment=!0,n.statistics=null,"none"===n.stretchType&&(n.stretchType="min-max")),this.renderer=n}this.symbolizer?(this.symbolizer.rendererJSON=Object(P["e"])(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new M["a"]({rendererJSON:this.renderer.toJSON(),rasterInfo:e});const n=this.symbolizer.bind();n.success||z.warn("imagery-tile-mixin",n.error||"The given renderer is not supported by the layer.")}};return Object(a["a"])([Object(h["b"])()],t.prototype,"_cachedRendererJson",void 0),Object(a["a"])([Object(h["b"])()],t.prototype,"_compatibleFullExtent",void 0),Object(a["a"])([Object(h["b"])()],t.prototype,"_rasterJobHandler",void 0),Object(a["a"])([Object(h["b"])()],t.prototype,"bandIds",void 0),Object(a["a"])([Object(h["b"])({json:{origins:{service:{read:{source:"copyrightText"}}}}})],t.prototype,"copyright",void 0),Object(a["a"])([Object(h["b"])({type:B["a"],json:{read:!1}}),Object(w["a"])("rasterInfo.extent")],t.prototype,"fullExtent",void 0),Object(a["a"])([Object(h["b"])()],t.prototype,"interpolation",void 0),Object(a["a"])([Object(h["b"])()],t.prototype,"ioConfig",void 0),Object(a["a"])([Object(h["b"])({type:[_["a"]]})],t.prototype,"multidimensionalDefinition",void 0),Object(a["a"])([Object(h["b"])()],t.prototype,"raster",void 0),Object(a["a"])([Object(h["b"])({readOnly:!0}),Object(w["a"])("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),Object(a["a"])([Object(h["b"])()],t.prototype,"sourceJSON",void 0),Object(a["a"])([Object(h["b"])({type:D["a"],json:{read:!1}}),Object(w["a"])("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),Object(a["a"])([Object(h["b"])({type:R["a"],json:{read:!1}}),Object(w["a"])("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),Object(a["a"])([Object(h["b"])(S["o"])],t.prototype,"url",null),Object(a["a"])([Object(h["b"])({types:r["a"]})],t.prototype,"renderer",null),Object(a["a"])([Object(h["b"])()],t.prototype,"symbolizer",void 0),t=Object(a["a"])([Object(b["a"])("esri.layers.ImageryTileMixin")],t),t};var E=i("b911"),L=i("0db5"),N=i("8e17"),H=i("5a62"),J=i("601a"),W=i("a1f3"),q=i("4607"),$=i("a4f3"),G=i("53d3"),U=i("6a0e"),V=i("fab3"),Y=i("218c"),X=i("1451"),K=i("9dee"),Z=i("b4e0"),Q=i("4ae5");const ee=8;let te=class extends(Object(V["b"])(U["a"])){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=Object(Z["g"])();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:R["a"].create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=Object(Z["e"])(e.spatialReference);return Object(o["k"])(t)&&e.extent.width>=t/2}set url(e){this._set("url",Object(j["g"])(e,O["a"].getLogger(this.declaredClass)))}async open(e){throw new s["a"]("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,a={}){const n=a.tileInfo||this.rasterInfo.storageInfo.tileInfo,r=this.getTileExtentFromTileInfo(e,t,i,n);return this.fetchPixels(r,n.size[0],n.size[1],a)}async identify(e,t={}){var i,a;const{multidimensionalDefinition:n,timeExtent:r}=t,{hasMultidimensionalTranspose:s,multidimensionalInfo:l}=this.rasterInfo;let{transposedVariableName:c}=t;const u=Object(o["k"])(l)&&s&&(null!=r||Object(k["e"])(n));u&&!c&&(c=Object(o["k"])(n)&&n.length>0?n[0].variableName:l.variables[0].name,t={...t,transposedVariableName:c}),t=this._getRequestOptionsWithSliceId(t);const{spatialReference:h,extent:f}=this.rasterInfo,{datumTransformation:d}=t;let m=Object(Z["i"])(e,h,d);if(!f.intersects(m))return{location:m,value:null};if(Object(o["k"])(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(m);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};m=e}let p=0;const b=c&&Object(o["k"])(l)&&this.rasterInfo.hasMultidimensionalTranspose;if(!b)if(t.srcResolution)p=Object(Z["m"])(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(p=await this.computeBestPyramidLevelForLocation(e,t),null==p)return{location:m,value:null};const y=this.identifyPixelLocation(m,p,null,b);if(null===y)return{location:m,value:null};const{row:g,col:x,rowOffset:v,colOffset:O,blockWidth:w}=y,I=null!=(i=c)?i:Object(o["r"])(t.sliceId),j=Object(Y["d"])(this.url,I),S=`${p}/${g}/${x}`;let _=Object(Y["c"])(j,null,S);Object(o["j"])(_)&&(_=this.fetchRawTile(p,g,x,t),Object(Y["e"])(j,null,S,_));const T=await _;if(Object(o["j"])(T)||null==(a=T.pixels)||!a.length)return{location:m,value:null};const R=v*w+O;return this._processIdentifyResult(T,{srcLocation:m,position:R,pyramidLevel:p,useTransposedTile:b,requestSomeSlices:u,identifyOptions:t})}async fetchPixels(e,t,i,a={}){if(e=Object(Z["l"])(e),(a=this._getRequestOptionsWithSliceId(a)).requestRawData)return this._fetchPixels(e,t,i,a);const n=Object(Z["e"])(e.spatialReference),r=Object(Z["f"])(e);if(Object(o["j"])(n)||0===r||1===r&&this._isGlobalWrappableSource)return this._fetchPixels(e,t,i,a);if(r>=3)return{extent:e,pixelBlock:null};const s=[],{xmin:l,xmax:c}=e,u=Math.round(n/(c-l)*t),h=u-Math.round((n/2-l)/(c-l)*t);let f=0;const d=[];for(let o=0;o<=r;o++){const m=new B["a"]({xmin:0===o?l:-n/2,xmax:o===r?c-n*o:n/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),p=0===o?u-h:o===r?t-f:u;f+=p,d.push(p);const b=a.disableWrapAround&&o>0?null:this._fetchPixels(m,p,i,a);s.push(b)}const m=(await Promise.all(s)).map(e=>null==e?void 0:e.pixelBlock);let p=null;const b={width:t,height:i};return p=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:m,srcMosaicSize:b,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:d},a)).pixelBlock:Object(K["h"])(m,b,{blockWidths:d}),{extent:e,srcExtent:Object(Z["h"])(e,this.rasterInfo.spatialReference,a.datumTransformation),pixelBlock:p}}async fetchRawPixels(e,t,i,a={}){t={x:Math.floor(t.x),y:Math.floor(t.y)};const n=await this._fetchRawTiles(e,t,i,a),{nativeExtent:r,nativePixelSize:s,storageInfo:l}=this.rasterInfo,c=2**e,u=s.x*c,h=s.y*c,f=new B["a"]({xmin:r.xmin+u*t.x,xmax:r.xmin+u*(t.x+i.width-1),ymin:r.ymax-h*(t.y+i.height-1),ymax:r.ymax-h*t.y,spatialReference:r.spatialReference});if(!n)return{extent:f,srcExtent:f,pixelBlock:null};const{pixelBlocks:d,mosaicSize:m}=n;if(1===d.length&&Object(o["k"])(d[0])&&d[0].width===i.width&&d[0].height===i.height)return{extent:f,srcExtent:f,pixelBlock:n.pixelBlocks[0]};const p=e>0?l.pyramidBlockWidth:l.blockWidth,b=e>0?l.pyramidBlockHeight:l.blockHeight,y={x:t.x%p,y:t.y%b};let g;return g=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:d,srcMosaicSize:m,destDimension:i,clipOffset:y,clipSize:i,coefs:null,sampleSpacing:null,interpolation:a.interpolation,alignmentInfo:null,blockWidths:null},a)).pixelBlock:Object(K["h"])(d,m,{clipOffset:y,clipSize:i}),{extent:f,srcExtent:f,pixelBlock:g}}fetchRawTile(e,t,i,a){throw new s["a"]("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return Object(Z["h"])(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?Object(X["a"])(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var a,n;const{customFetchParameters:r}=this.ioConfig,{range:s,query:o,headers:l}=t;i=null!=(a=null!=(n=i)?n:t.retryCount)?a:this.ioConfig.retryCount;const c=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await Object(v["default"])(e,{...t,query:{...o,...r},headers:{...l,...c}})}catch(u){if(i>0)return i--,this.request(e,t,i);throw u}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;return Object(o["j"])(t)||Object(o["j"])(e)||0===e.length?null:Object(k["d"])(e,t)}getTileExtentFromTileInfo(e,t,i,a){const n=a.lodAt(e);return this.getTileExtent({x:n.resolution,y:n.resolution},t,i,a.origin,a.spatialReference,a.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:a}=this.rasterInfo;if(!e.tileInfo){const n=[],r=e.maximumPyramidLevel||0;let s=Math.max(a.x,a.y),o=1/.0254*96*s;for(let e=0;e<=r;e++)n.push({level:r-e,resolution:s,scale:o}),s*=2,o*=2;const l=new Q["a"]({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new R["a"]({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:n}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,a){const{width:n,height:r,nativeExtent:s,pixelSize:o,spatialReference:l}=e,c=new Q["a"]({x:s.xmin,y:s.ymax,spatialReference:l});null==a&&(a=Math.max(0,Math.round(Math.log(Math.max(n,r))/Math.LN2-8)));const u=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[o],a);e.storageInfo=new G["a"]({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:a,blockBoundary:u})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,a,n,r=0,s=2){if(1===n.length&&r>0){n=[...n];let{x:e,y:t}=n[0];for(let i=0;i<r;i++)e*=s,t*=s,n.push({x:e,y:t})}const o=[],{x:l,y:c}=a;for(let u=0;u<n.length;u++){const{x:a,y:r}=n[u];o.push({minCol:Math.floor((e.xmin-l+.1*a)/t/a),maxCol:Math.floor((e.xmax-l-.1*a)/t/a),minRow:Math.floor((c-e.ymax+.1*r)/i/r),maxRow:Math.floor((c-e.ymin-.1*r)/i/r)})}return o}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:a}=this.rasterInfo.storageInfo;if(0===e)return t;if(Object(o["k"])(i)&&i.length)return i[e-1];const n=a**e;return{x:t.x*n,y:t.y*n}}identifyPixelLocation(e,t,i,a){const{spatialReference:n,nativeExtent:r,storageInfo:s}=this.rasterInfo,{maximumPyramidLevel:l,origin:c,transposeInfo:u}=s,h=a&&Object(o["k"])(u)?u.tileSize[0]:s.blockWidth,f=a&&Object(o["k"])(u)?u.tileSize[1]:s.blockHeight,d=Object(Z["i"])(e,n,i);if(!r.intersects(d))return null;if(t<0||t>l)return null;const m=this.getPyramidPixelSize(t),{x:p,y:b}=m,y=(c.y-d.y)/b/f,g=(d.x-c.x)/p/h,x=Math.min(f-1,Math.floor((y-Math.floor(y))*f)),v=Math.min(h-1,Math.floor((g-Math.floor(g))*h));return{pyramidLevel:t,row:Math.floor(y),col:Math.floor(g),rowOffset:x,colOffset:v,blockWidth:h,srcLocation:d}}getTileExtent(e,t,i,a,n,r){const[s,o]=r,l=a.x+i*s*e.x,c=l+s*e.x,u=a.y-t*o*e.y,h=u-o*e.y;return new B["a"]({xmin:l,xmax:c,ymin:h,ymax:u,spatialReference:n})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const a=this.rasterInfo.storageInfo.blockBoundary[e];return!a||a.maxRow<t||a.maxCol<i||a.minRow>t||a.minCol>i}async _fetchPixels(e,t,i,a={}){let n=Object(Z["f"])(e);if(n>=2)return{extent:e,pixelBlock:null};const r=this._getSourceDataInfo(e,t,i,a),{pyramidLevel:s,pyramidResolution:l,srcResolution:c,srcExtent:u,srcWidth:h,srcHeight:f}=r;if(0===h||0===f)return{extent:e,srcExtent:u,pixelBlock:null};const d=Object(o["r"])(this.rasterInfo.transform),m="gcs-shift"===(null==d?void 0:d.type),p=Object(o["k"])(Object(Z["e"])(e.spatialReference));!m&&p||(n=Object(Z["f"])(r.srcExtent,m));const b=this.rasterInfo.storageInfo,y={x:Math.floor((u.xmin-b.origin.x)/l.x+.1),y:Math.floor((b.origin.y-u.ymax)/l.y+.1)},g=await this._fetchRawTiles(s,y,{width:h,height:f,wrapCount:n},a);if(!g)return{extent:e,srcExtent:u,pixelBlock:null};const x=s>0?b.pyramidBlockWidth:b.blockWidth,v=s>0?b.pyramidBlockHeight:b.blockHeight,O=x===h&&v===f&&y.x%x==0&&y.y%v==0,w=new Q["a"]({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),I=!e.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:j}=a;if(!I&&O&&1===g.pixelBlocks.length&&x===t&&v===i&&c.x===w.x&&c.y===w.y)return{extent:e,srcExtent:u,pixelBlock:g.pixelBlocks[0]};const S=p&&Object(o["k"])(Object(Z["e"])(u.spatialReference)),_=a.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");_&&!this.rasterJobHandler&&await Object(Z["g"])();const T=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:g.extent,pixelSize:w.toJSON(),datumTransformation:j,rasterTransform:d,hasWrapAround:n>0||S,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:_},a):Object(Z["c"])({projectedExtent:e,srcBufferExtent:g.extent,pixelSize:w,datumTransformation:j,rasterTransform:d,hasWrapAround:n>0||S,isAdaptive:!1,includeGCSGrid:_});let R;const k=!a.requestRawData,P={rows:T.spacing[0],cols:T.spacing[1]},M=Object(o["r"])(this._getRasterTileAlignmentInfo(s,g.extent.xmin)),{pixelBlocks:F,mosaicSize:B,isPartiallyFilled:D}=g;let z=null;if(this.rasterJobHandler){const e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:F,srcMosaicSize:B,destDimension:k?{width:t,height:i}:null,coefs:k?T.coefficients:null,sampleSpacing:k?P:null,projectDirections:_,gcsGrid:_?T.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:a.interpolation,alignmentInfo:M,blockWidths:null},a);({pixelBlock:R,localNorthDirections:z}=e)}else{const e=Object(K["h"])(F,B,{alignmentInfo:M});R=k?Object(K["a"])(e,{width:t,height:i},T.coefficients,P,a.interpolation):e,_&&T.gcsGrid&&(z=Object(K["e"])({width:t,height:i},T.gcsGrid),R=Object(C["a"])(R,this.rasterInfo.dataType,z))}return a.requestRawData||_?{srcExtent:u,pixelBlock:R,transformGrid:T,localNorthDirections:z,extent:e,isPartiallyFilled:D}:{srcExtent:u,extent:e,pixelBlock:R}}async _fetchRawTiles(e,t,i,a){const{origin:n,blockBoundary:r}=this.rasterInfo.storageInfo,{blockWidth:s,blockHeight:l}=this.getBlockWidthHeight(e);let{x:c,y:u}=t,{width:h,height:f,wrapCount:d}=i;const m=this._getRasterTileAlignmentInfo(e,0);a.buffer&&(c-=a.buffer.cols,u-=a.buffer.rows,h+=2*a.buffer.cols,f+=2*a.buffer.rows);let p=0,b=0,y=0;d&&Object(o["k"])(m)&&(({worldColumnCountFromOrigin:b,originColumnOffset:y,rightPadding:p}=m),b*m.blockWidth-p>=c+h&&(p=0));const g=Math.floor(c/s),x=Math.floor(u/l),v=Math.floor((c+h+p-1)/s),O=Math.floor((u+f+p-1)/l),w=r[e];if(!w)return null;const{minRow:I,minCol:j,maxCol:S,maxRow:_}=w;if(0===d&&(O<I||v<j||x>_||g>S))return null;const T=new Array;let R=!1;const k=null==this.ioConfig.allowPartialFill?a.allowPartialFill:this.ioConfig.allowPartialFill;for(let B=x;B<=O;B++)for(let t=g;t<=v;t++){let i=t;if(!a.disableWrapAround&&d&&Object(o["k"])(m)&&b<=t&&(i=t-b-y),B>=I&&i>=j&&_>=B&&S>=i){const t=this._fetchRawTile(e,B,i,a);k?T.push(new Promise(e=>{t.then(t=>e(t)).catch(()=>{R=!0,e(null)})})):T.push(t)}else T.push(null)}if(0===T.length)return null;const C=await Promise.all(T),P={height:(O-x+1)*l,width:(v-g+1)*s},{spatialReference:M}=this.rasterInfo,F=this.getPyramidPixelSize(e),{x:D,y:z}=F;return{extent:new B["a"]({xmin:n.x+g*s*D,xmax:n.x+(v+1)*s*D,ymin:n.y-(O+1)*l*z,ymax:n.y-x*l*z,spatialReference:M}),pixelBlocks:C,mosaicSize:P,isPartiallyFilled:R}}_fetchRawTile(e,t,i,a){const n=this.rasterInfo.storageInfo.blockBoundary[e];if(!n)return Promise.resolve(null);const{minRow:r,minCol:s,maxCol:l,maxRow:u}=n;if(t<r||i<s||t>u||i>l)return Promise.resolve(null);const h=Object(Y["d"])(this.url,a.sliceId),f=`${e}/${t}/${i}`;let d=Object(Y["c"])(h,a.registryId,f);if(Object(o["j"])(d)){const n=new AbortController;d=this.fetchRawTile(e,t,i,{...a,signal:n.signal}),Object(Y["e"])(h,a.registryId,f,d,n),d.catch(()=>Object(Y["b"])(h,a.registryId,f))}return a.signal&&Object(c["m"])(a,()=>{Object(Y["a"])(h,a.registryId,f)}),d}_computeMagDirValues(e){var t;const{bandCount:i,dataType:a}=this.rasterInfo;if((2!==i||"vector-magdir"!==a)&&"vector-uv"!==a||2!==(null==e?void 0:e.length)||null==(t=e[0])||!t.length)return null;const n=e[0].length;if("vector-magdir"===a){const t=e[1].map(e=>(e+360)%360);return[e[0],t]}const[r,s]=e,o=[],l=[];for(let c=0;c<n;c++){const[e,t]=Object(C["j"])([r[c],s[c]]);o.push(e),l.push(t)}return[o,l]}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=Object(Z["d"])(this.rasterInfo)),Object(o["j"])(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}}_getSourceDataInfo(e,t,i,a={}){const n={datumTransformation:a.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};a.srcResolution&&(n.srcResolution=a.srcResolution,this._updateSourceDataInfo(e,n));const r=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:o,pyramidLevel:l}=n,c=s/t,u=o/i,h=l<r&&c*u>=16;if(h||l===r&&(c>ee||u>ee)||0===s||0===o){const s=new Q["a"]({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let o=Object(Z["j"])(s,this.rasterInfo.spatialReference,e,n.datumTransformation);const f=!o||a.srcResolution&&o.x+o.y<a.srcResolution.x+a.srcResolution.y;if(h&&a.srcResolution&&f){const e=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(r-l+3>=e){const t=2**e;o={x:a.srcResolution.x*t,y:a.srcResolution.y*t}}}o&&(n.srcResolution=o,this._updateSourceDataInfo(e,n))}return(n.srcWidth/t>ee||n.srcHeight/i>ee)&&(n.srcWidth=0,n.srcHeight=0),n}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:a,datumTransformation:n}=t,{pyramidLevel:r,pyramidResolution:s,excessiveReading:l}=Object(Z["m"])(a,this.rasterInfo,this.ioConfig.sampling);if(l)return;let c=t.srcExtent||Object(Z["h"])(e,i,n);if(null==c)return;const u=Object(o["r"])(this.rasterInfo.transform);u&&(c=u.inverseTransform(c)),t.srcExtent=c;const h=Math.ceil((c.xmax-c.xmin)/s.x-.1),f=Math.ceil((c.ymax-c.ymin)/s.y-.1);t.pyramidLevel=r,t.pyramidResolution=s,t.srcWidth=h,t.srcHeight=f}_getRequestOptionsWithSliceId(e){return Object(o["k"])(this.rasterInfo.multidimensionalInfo)&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}_processIdentifyResult(e,t){const{srcLocation:i,position:a,pyramidLevel:n,useTransposedTile:r}=t,s=e.pixels[0].length/e.width/e.height;if(e.mask&&!e.mask[a])return{location:i,value:null};const{multidimensionalInfo:l}=this.rasterInfo;if(Object(o["j"])(l)||!r){const t=e.pixels.map(e=>e[a]),r={location:i,value:t,pyramidLevel:n},s=this._computeMagDirValues(t.map(e=>[e]));return null!=s&&s.length&&(r.magdirValue=s.map(e=>e[0])),r}let c=e.pixels.map(e=>Array.prototype.slice.call(e,a*s,a*s+s)),u=this._computeMagDirValues(c);const{requestSomeSlices:h,identifyOptions:f}=t;let d=Object(k["a"])(l,f.transposedVariableName);if(h){var m;const e=Object(k["c"])(d,Object(o["r"])(f.multidimensionalDefinition),Object(o["r"])(f.timeExtent));c=c.map(t=>e.map(e=>t[e])),u=null==(m=u)?void 0:m.map(t=>e.map(e=>t[e])),d=e.map(e=>d[e])}return{location:i,value:null,dataSeries:d.map((e,t)=>{var i;const a={value:c.map(e=>e[t]),multidimensionalDefinition:e.multidimensionalDefinition,variableName:e.multidimensionalDefinition[0].variableName,dimensionValues:{}};return null!=(i=u)&&i.length&&(a.magdirValue=[u[0][t],u[1][t]]),e.multidimensionalDefinition.forEach(e=>a.dimensionValues[e.dimensionName]=e.values[0]),a}),pyramidLevel:n}}};Object(a["a"])([Object(h["b"])()],te.prototype,"_rasterTileAlighmentInfo",void 0),Object(a["a"])([Object(h["b"])({readOnly:!0})],te.prototype,"_isGlobalWrappableSource",null),Object(a["a"])([Object(h["b"])(S["o"])],te.prototype,"url",null),Object(a["a"])([Object(h["b"])({type:String,json:{write:!0}})],te.prototype,"datasetName",void 0),Object(a["a"])([Object(h["b"])({type:String,json:{write:!0}})],te.prototype,"datasetFormat",void 0),Object(a["a"])([Object(h["b"])()],te.prototype,"rasterInfo",void 0),Object(a["a"])([Object(h["b"])()],te.prototype,"ioConfig",void 0),Object(a["a"])([Object(h["b"])()],te.prototype,"sourceJSON",void 0),te=Object(a["a"])([Object(b["a"])("esri.layers.support.rasterDatasets.BaseRaster")],te);const ie=te;var ae=i("742a");function ne(e){const t=e.fields,i=e.records,a=t.some(e=>"oid"===e.name.toLowerCase())?"OBJECTID":"OID",n=[{name:a,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map(e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name}))),r=n.map(e=>e.name),s=[];let o=0,l=0;return i.forEach(e=>{const t={};for(t[a]=o++,l=1;l<r.length;l++)t[r[l]]=e[l-1];s.push({attributes:t})}),{displayFieldName:"",fields:n,features:s}}class re{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const a=t.getUint32(4,!0),n=t.getUint16(8,!0),r=t.getUint16(10,!0),s={version:i,recordCount:a,headerByteCount:n,recordByteCount:r};let o=32;const l=[],c=[];let u;if(3===i){for(;13!==t.getUint8(o);)u=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:Object(ae["a"])(new Uint8Array(e,o,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<a&&e.byteLength-o>r;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach(t=>{if("C"===t.type)i.push(Object(ae["a"])(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const a=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(a.substring(0,4),10),parseInt(a.substring(4,6),10)-1,parseInt(a.substring(6,8),10)))}o+=t.length}),c.push(i)):o+=r}}return{header:s,fields:l,records:c,recordSet:ne({fields:l,records:c})}}}var se=i("8c6a"),oe=i("2edc");const le=new Map;le.set("int16","esriFieldTypeSmallInteger"),le.set("int32","esriFieldTypeInteger"),le.set("int64","esriFieldTypeInteger"),le.set("float32","esriFieldTypeSingle"),le.set("float64","esriFieldTypeDouble"),le.set("text","esriFieldTypeString");const ce=8;let ue=class extends ie{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new s["a"]("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:a}=this._parseHeader(t);if("thematic"===a.dataType){const e=await this._fetchAuxiliaryInformation();a.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",a),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,a={}){const{transposeInfo:n}=this.rasterInfo.storageInfo,{transposedVariableName:r}=a,s=!(!n||!r),o=s?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(o<0)return null;const l=this._buildCacheFilePath(o,t,i,a.multidimensionalDefinition,r),c=this._getIndexRecordFromBundle(t,i,s),u=await this.request(l,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:a.signal});if(!u)return null;const h=new Uint8Array(u.data),f=this._getTileEndAndContentType(h,c);if(0===f.recordSize)return null;const d=await this.request(l,{range:{from:f.position,to:f.position+f.recordSize},responseType:"array-buffer",signal:a.signal});if(!d)return null;const[m,p]=this._getTileSize(s);return this.decodePixelBlock(d.data,{width:m,height:p,planes:null,pixelType:null,returnPixelInterleavedDims:s})}_validateHeader(e){const t=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return e&&"RasterInfo"===e.type&&!t.some(t=>!e[t])}_parseHeader(e){var t,i;const a=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:n,histograms:r,colormap:s,blockWidth:o,blockHeight:l,firstPyramidLevel:c,maximumPyramidLevel:u}=e,h=e.statistics&&e.statistics.map(e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode})),f=e.extent.spatialReference,d=null==(t=e.geodataXform)?void 0:t.spatialReference,m=new D["a"](null!=f&&f.wkid||null!=f&&f.wkt?f:d);let p=new B["a"]({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:m});const b=new Q["a"]({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:m}),y=Math.round((p.xmax-p.xmin)/b.x),g=Math.round((p.ymax-p.ymin)/b.y),x=this._parseTransform(e.geodataXform),v=x?p:null;x&&(p=x.forwardTransform(p),b.x=(p.xmax-p.xmin)/y,b.y=(p.ymax-p.ymin)/g);const O=null!=(i=e.properties)?i:{},w=e.format.toLowerCase().replace("cache/",""),I=new Q["a"](e.origin.x,e.origin.y,m);let j,S,_,T;if(s&&s.colors)for(j=[],S=0;S<s.colors.length;S++)_=s.colors[S],T=s.values?s.values[S]:S,j.push([T,255&_,_<<16>>>24,_<<8>>>24,_>>>24]);const k=e.LODInfos,C=[];for(S=0;S<k.levels.length;S++)C.push({level:k.levels[S],resolution:k.resolutions[S],scale:96/.0254*k.resolutions[S]});const P=new R["a"]({dpi:96,lods:C,format:w,origin:I,size:[o,l],spatialReference:m}),M={recordSize:ce,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*ce+64},F=[{maxCol:Math.ceil(y/o)-1,maxRow:Math.ceil(g/l)-1,minCol:0,minRow:0}];let z=2;if(u>0)for(S=0;S<u;S++)F.push({maxCol:Math.ceil(y/z/o)-1,maxRow:Math.ceil(g/z/l)-1,minCol:0,minRow:0}),z*=2;const A=e.mdInfo;let E=null;if(A&&O._yxs){const e=O._yxs;E={packetSize:e.PacketSize,tileSize:[e.TileXSize,e.TileYSize]}}return{storageInfo:M,rasterInfo:new $["a"]({width:y,height:g,pixelType:a,bandCount:n,extent:p,nativeExtent:v,transform:x,spatialReference:m,pixelSize:b,keyProperties:O,statistics:h,histograms:r,multidimensionalInfo:A,colormap:j,storageInfo:new G["a"]({blockWidth:o,blockHeight:l,pyramidBlockWidth:o,pyramidBlockHeight:l,origin:I,tileInfo:P,transposeInfo:E,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:F})})}}_parseTransform(e){var t,i;if(!Object(se["a"])(e))throw new s["a"]("cloudraster:open","the data contains unsupported geodata transform types");const a=Object(se["b"])(e);if("identity"===a.type)return null;if("polynomial"!==a.type||null==(t=a.forwardCoefficients)||!t.length||null==(i=a.inverseCoefficients)||!i.length)throw new s["a"]("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return a}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then(e=>e.data).catch(()=>null),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then(e=>e.data).catch(()=>null),a=await Promise.all([t,i]);let n;if(a[0]){let e=a[0].fields;const t=a[0].values;if(e&&t){e=e.map(e=>({type:"OID"===e.name?"esriFieldTypeOID":le.get(e.type),name:e.name,alias:e.alias||e.name}));const i=t.map(e=>({attributes:e}));e&&t&&(n={fields:e,features:i})}}return!n&&a[1]&&(n=re.parse(a[1]).recordSet),oe["default"].fromJSON(n)}_buildCacheFilePath(e,t,i,a,n){const r=this._getPackageSize(!!n),s=Math.floor(t/r)*r,l=Math.floor(i/r)*r,c="R"+this._toHexString4(s)+"C"+this._toHexString4(l);let u="L";u+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:h}=this.rasterInfo,f=null==a?void 0:a[0];if(Object(o["j"])(h)||!f)return`${this.url}/_alllayers/${u}/${c}.bundle`;let d="_yxs";if(!n){d=h.variables.find(e=>e.name===f.variableName).dimensions[0].values.indexOf(f.values[0]).toString(16);const e=4-d.length;for(let t=0;t<e;t++)d="0"+d;d="S"+d}const m=this._getVariableFolderName(n||f.variableName);return`${this.url}/_alllayers/${m}/${d}/${u}/${c}.bundle`}_getPackageSize(e=!1){const{transposeInfo:t}=this.rasterInfo.storageInfo;return e&&Object(o["k"])(t)?t.packetSize:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:t}=this.rasterInfo,{transposeInfo:i}=t;return e&&Object(o["k"])(i)?i.tileSize:t.tileInfo.size}_getVariableFolderName(e){return""===(e=e.trim())?"_v":e.replace(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,t,i=!1){const a=this._getPackageSize(i),n=a*(e%a)+t%a;if(n<0)throw"Invalid level / row / col";return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let a,n=0;for(a=0;a<5;a++)n|=(255&i[a])<<8*a;const r=0xffffffffff&n;for(n=0,a=5;a<8;a++)n|=(255&i[a])<<8*(a-5);return{position:r,recordSize:0xffffffffff&n}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};Object(a["a"])([Object(h["b"])({readOnly:!0})],ue.prototype,"storageInfo",void 0),Object(a["a"])([Object(h["b"])({type:String,json:{write:!0}})],ue.prototype,"datasetFormat",void 0),ue=Object(a["a"])([Object(b["a"])("esri.layers.support.rasterDatasets.CloudRaster")],ue);const he=ue;var fe=i("9b2b");let de=class extends ie{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:i,statistics:a,histograms:n,name:r,keyProperties:s,nativeExtent:o,transform:l}=this.data,{width:c,height:u,pixelType:h}=i,f=this.data.extent||new B["a"]({xmin:-.5,ymin:.5,xmax:c-.5,ymax:u-.5,spatialReference:new D["a"]({wkid:3857})}),d=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,m={x:f.width/c,y:f.height/u},p=new $["a"]({width:c,height:u,pixelType:h,extent:f,nativeExtent:o,transform:l,pixelSize:m,spatialReference:f.spatialReference,bandCount:3,keyProperties:s||{},statistics:a,isPseudoSpatialReference:d,histograms:n});this.createRemoteDatasetStorageInfo(p,512,512),this._set("rasterInfo",p),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=r,this.url="/InMemory/"+r}fetchRawTile(e,t,i,a={}){const n=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(n)}async _buildInMemoryRaster(e,t,i){var a,n;const r=this.rasterInfo.storageInfo.maximumPyramidLevel,l=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:r},i):Promise.resolve(Object(K["l"])(e,t,r)),u=Object(o["k"])(this.rasterInfo.statistics),h=Object(o["k"])(this.rasterInfo.histograms),f=u?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve(Object(fe["e"])(e)),d=await Object(c["g"])([l,f]);if(!d[0].value&&d[1].value)throw new s["a"]("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=d[0].value,u||(this.rasterInfo.statistics=null==(a=d[1].value)?void 0:a.statistics),h||(this.rasterInfo.histograms=null==(n=d[1].value)?void 0:n.histograms)}};Object(a["a"])([Object(h["b"])({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),Object(a["a"])([Object(h["b"])()],de.prototype,"data",void 0),de=Object(a["a"])([Object(b["a"])("esri.layers.support.rasterDatasets.InMemoryRaster")],de);const me=de;function pe(e,t){if(!e||!t)return[];let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const a=[];if(t){const n=pe(e,i);for(let e=0;e<n.length;e++)pe(n[e],t).forEach(e=>a.push(e));return a}const n=e.getElementsByTagNameNS("*",i);if(!n||0===n.length)return[];for(let r=0;r<n.length;r++)a.push(n[r]||n.item[r]);return a}function be(e,t){if(!e||!t)return null;let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const a=pe(e,i);return a.length>0?t?be(a[0],t):a[0]:null}function ye(e,t=null){const i=t?be(e,t):e;let a;return i?(a=i.textContent||i.nodeValue,a?a.trim():null):null}function ge(e,t){const i=pe(e,t),a=[];let n;for(let r=0;r<i.length;r++)n=i[r].textContent||i[r].nodeValue,n&&(n=n.trim(),""!==n&&a.push(n));return a}function xe(e,t){return ge(e,t).map(e=>Number(e))}function ve(e,t){const i=ye(e,t);return Number(i)}function Oe(e,t){var i;const a=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),n=t.toLowerCase();return a.slice(a.lastIndexOf(":")+1)===n}var we=i("7fb1");function Ie(e,t){if(!e||!t)return null;const i=[];for(let a=0;a<e.length;a++)i.push(e[a]),i.push(t[a]);return i}function je(e){var t;const i=be(e,"GeodataXform"),a=_e(ve(i,"SpatialReference/WKID")||ye(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:a,transform:null};const n=null!=(t=ve(i,"PolynomialOrder"))?t:1,r=xe(i,"CoeffX/Double"),s=xe(i,"CoeffY/Double"),o=xe(i,"InverseCoeffX/Double"),l=xe(i,"InverseCoeffY/Double"),c=Ie(r,s),u=Ie(o,l);return{spatialReference:a,transform:new we["a"]({spatialReference:a,polynomialOrder:n,forwardCoefficients:c,inverseCoefficients:u})}}function Se(e){var t;const i=ve(e,"NoDataValue"),a=be(e,"Histograms/HistItem"),n=ve(a,"HistMin"),r=ve(a,"HistMax"),s=ve(a,"BucketCount"),o=null==(t=ye(a,"HistCounts"))?void 0:t.split("|").map(e=>Number(e));let l,c,u,h;pe(e,"Metadata/MDI").forEach(e=>{var t;const i=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":c=i;break;case"STATISTICS_MEAN":u=i;break;case"STATISTICS_STDDEV":h=i}});const f=ve(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!=o&&o.length&&null!=l&&null!=c?{min:n,max:r,size:s||o.length,counts:o}:null,sourceBandIndex:f,statistics:null!=l&&null!=c?{min:l,max:c,avg:u,stddev:h}:null}}function _e(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new D["a"]({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.indexOf("VERTCS"),a=e.indexOf("PROJCS"),n=a>-1?a:e.indexOf("GEOGCS");if(-1===n)return null;const r=e.slice(n,e.lastIndexOf("]",i)+1).trim(),s=e.slice(i,e.lastIndexOf("]")).trim();t=Te(r);const o=new D["a"](t?{wkid:t}:{wkt:r}),l=Te(s);return l&&(o.vcsWkid=l),o}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=Te(e),new D["a"](0!==t?{wkid:t}:{wkt:e})):null}function Te(e){var t;const i=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(e=>e.trim()).filter(e=>""!==e),a=i[i.length-1].split(","),n=null==(t=a[0])?void 0:t.toLowerCase();if(("epsg"===n||"esri"===n)&&e.endsWith('"]]')){const e=Number(a[1]);if(!isNaN(e)&&0!==e)return e}return 0}function Re(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach(e=>{if(1===e.nodeType)if(Oe(e,"SRS")){if(!i.spatialReference){const t=ye(e);i.spatialReference=_e(t)}}else if(Oe(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:a}=je(e);i.transform=a,i.spatialReference||(i.spatialReference=t)}else pe(e,"MDI").forEach(e=>i.metadata[e.getAttribute("key")]=ye(e));else if(Oe(e,"PAMRasterBand")){const t=Se(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}});const a=i.rasterBands;if(a){const e=!!a[0].statistics;i.statistics=e?a.map(e=>e.statistics):null;const t=!!a[0].histogram;i.histograms=t?a.map(e=>e.histogram):null}return i}let ke=class extends ie{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:a,histograms:n,transform:r}=await this._fetchAuxiliaryData(e);const s=!i;s&&(i=new D["a"]({wkid:3857})),(null==n?void 0:n.length)&&null==a&&(a=Object(fe["d"])(n));const{width:o,height:l}=t;let c=new B["a"]({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const u=r?r.forwardTransform(c):c;let h=!0;if(r){const e=r.forwardCoefficients;h=e&&0===e[1]&&0===e[2],h&&(r=null,c=u)}const f=new me({data:{extent:u,nativeExtent:c,transform:r,pixelBlock:t,statistics:a,histograms:n,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:s}});await f.open(),f.data=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(e,t,i,a={}){return this._inMemoryRaster.fetchRawTile(e,t,i,a)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),i=Object(X["b"])(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new s["a"]("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);const a=i.toLowerCase(),n="gif"===a||"bmp"===a||!Object(f["a"])("ios");return await this.decodePixelBlock(t,{format:a,useCanvas:n,hasNoZlibMask:!0})}async _fetchAuxiliaryData(e){var t,i;const a=Object(o["r"])(null==e?void 0:e.signal),n=null!=(t=this.ioConfig.skipExtensions)?t:[],r=n.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:a}),s=this.datasetFormat,l="JPG"===s?"jgw":"PNG"===s?"pgw":"BMP"===s?"bpw":null,u=n.includes(l)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+l,{responseType:"text",signal:a}),h=await Object(c["g"])([r,u]);if(null!=a&&a.aborted)throw Object(c["b"])();const f=Re(null==(i=h[0].value)?void 0:i.data);if(!f.transform){const e=h[1].value?h[1].value.data.split("\n").slice(0,6).map(e=>Number(e)):null;f.transform=6===(null==e?void 0:e.length)?new we["a"]({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return f}};Object(a["a"])([Object(h["b"])({type:String,json:{write:!0}})],ke.prototype,"datasetFormat",void 0),ke=Object(a["a"])([Object(b["a"])("esri.layers.support.rasterDatasets.ImageAuxRaster")],ke);const Ce=ke;var Pe=i("e041"),Me=i("ab68"),Fe=i("9651"),Be=i("773d"),De=i("bee3");let ze=class extends ie{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const a=i.data;if(this.sourceJSON=a,!a)throw new s["a"]("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!a.tileInfo)throw new s["a"]("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const n=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=a.cacheType,null==this.tileType&&(n.includes(a.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===a.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=a.name.slice(a.name.indexOf("/")+1);const r=await this._fetchRasterInfo({signal:t});if(!Object(o["k"])(r))throw new s["a"]("image-server-raster:open","cannot initialize image service");{var l,c;const e="Map"===this.tileType?Object(Me["a"])(a.tileInfo,a):R["a"].fromJSON(a.tileInfo),{extent:t,pixelSize:i}=r,n=.5/r.width*i.x;let s,o;const u=e.lodAt(Math.max.apply(null,e.lods.map(e=>e.level)));"Map"!==this.tileType&&0!==a.maxScale&&("Raster"===this.tileType?(s=e.lods.find(e=>e.resolution===i.x),s||(s=e.lods[e.lods.length-1])):(s=e.lods.find(e=>Math.abs(e.scale-a.maxScale)<n),s||(s=e.lods.filter(e=>e.scale>a.maxScale).sort((e,t)=>e.scale>t.scale?1:-1)[0])),i.x=i.y=s.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),s||(s=u);const h=e.lodAt(Math.min.apply(null,e.lods.map(e=>e.level)));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==a.minScale&&"Elevation"===this.tileType&&(o=e.lods.find(e=>Math.abs(e.scale-a.minScale)<n),this._levelOffset=o.level-h.level),o||(o=h);const f=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>n||!e.lods.some(e=>Math.abs(e.resolution-f)<n))&&(i.x=i.y=s.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const d=s.level-o.level,[m,p]=e.size,b=[];e.lods.forEach(e=>{e.level>=o.level&&e.level<=s.level&&b.push({x:e.resolution,y:e.resolution})}),b.sort((e,t)=>e.x-t.x);const y=this.computeBlockBoundary(t,m,p,e.origin,b,d),g=b.length>1?b.slice(1):null;let x;a.transposeInfo&&(x={tileSize:[a.transposeInfo.rows,a.transposeInfo.cols],packetSize:null!=(l=null==(c=r.keyProperties)?void 0:c._yxs.PacketSize)?l:0}),r.storageInfo=new G["a"]({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],pyramidResolutions:g,compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:d,tileInfo:e,transposeInfo:x,blockBoundary:y}),this._fixGCSShift(r),this._set("rasterInfo",r)}if(a.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:r.storageInfo.tileInfo,parsedUrl:Object(Pe["M"])(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Fe["a"]({layer:e})}}async fetchRawTile(e,t,i,a={}){const{storageInfo:n,extent:r}=this.rasterInfo,{transposeInfo:s}=n,l=Object(o["k"])(s)&&!!a.transposedVariableName;if(this._slices&&!l&&null==a.sliceId)return null;const c=l?0:n.maximumPyramidLevel-e+this._levelOffset,u=`${this.url}/tile/${c}/${t}/${i}`,h=this._slices?l?{variable:a.transposedVariableName}:{sliceId:a.sliceId||0}:null,{data:f}=await this.request(u,{query:h,responseType:"array-buffer",signal:a.signal});if(!f)return null;const d=l?s.tileSize:n.tileInfo.size,m=await this.decodePixelBlock(f,{width:d[0],height:d[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnPixelInterleavedDims:l}),p=n.blockBoundary[e];if("jpg"!==n.compression||i>p.minCol&&i<p.maxCol&&t>p.minRow&&t<p.maxRow)return m;const{origin:b,blockWidth:y,blockHeight:g}=n,{x:x,y:v}=this.getPyramidPixelSize(e),O=Math.round((r.xmin-b.x)/x)%y,w=Math.round((r.xmax-b.x)/x)%y||y,I=Math.round((b.y-r.ymax)/v)%g,j=Math.round((b.y-r.ymin)/v)%g||g,S=i===p.minCol?O:0,_=t===p.minRow?I:0,T=i===p.maxCol?w:y,R=t===p.maxRow?j:g;return Object(K["k"])(m,{x:S,y:_},{width:T-S,height:R-_}),m}getSliceIndex(e){if(!this._slices||Object(o["j"])(e)||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some(e=>{const i=t.find(t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName);return!i||(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])}))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.statistics}),a=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),n=await Promise.all([i,a]);return n[0]&&n[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,Object(o["r"])(t.datumTransformation));if(null===i)return null;let a=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let r=n-a+this._levelOffset;const s=i.srcLocation;for(;r>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(r,i.row,i.col,t))break}catch{}if(r--,a++,i=this.identifyPixelLocation(s,a,Object(o["r"])(t.datumTransformation)),null===i)return null}return-1===r||null==i?null:a}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),i=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),a=D["a"].fromJSON(t.spatialReference||t.extent.spatialReference),n=new Q["a"]({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a});return new $["a"]({width:e,height:i,bandCount:3,extent:B["a"].fromJSON(t.extent),spatialReference:a,pixelSize:n,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,a=Object(De["a"])(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),n=t.hasMultidimensions?this.request(this.url+"/slices",{query:{f:"json"},signal:i}).then(e=>e.data&&e.data.slices).catch(()=>null):null,r=await Promise.all([a,n]);return this._slices=r[1],r[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;0===t.xmin&&360===t.xmax&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new Be["a"],e.extent=e.transform.forwardTransform(t))}};Object(a["a"])([Object(h["b"])({type:String,json:{write:!0}})],ze.prototype,"datasetFormat",void 0),Object(a["a"])([Object(h["b"])()],ze.prototype,"tileType",void 0),ze=Object(a["a"])([Object(b["a"])("esri.layers.support.rasterDatasets.ImageServerRaster")],ze);const Ae=ze;var Ee=i("3e27"),Le=i("e55a");const Ne=new Map;Ne.set("Int8","s8"),Ne.set("UInt8","u8"),Ne.set("Int16","s16"),Ne.set("UInt16","u16"),Ne.set("Int32","s32"),Ne.set("UInt32","u32"),Ne.set("Float32","f32"),Ne.set("Float64","f32"),Ne.set("Double64","f32");const He=new Map;He.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),He.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),He.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),He.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let Je=class extends ie{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?Object(o["r"])(e.signal):null,a=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:n,files:r}=this._parseHeader(a.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){var s;const t=await this._fetchAuxiliaryData(e);null!=t&&(n.statistics=null!=(s=t.statistics)?s:n.statistics,n.histograms=t.histograms,t.histograms&&Object(o["j"])(n.statistics)&&(n.statistics=Object(fe["d"])(t.histograms)))}this._set("rasterInfo",n),this._files=r;const l=await this.request(r.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(l.data);const{blockWidth:c,blockHeight:u}=this.rasterInfo.storageInfo,h=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:f,height:d}=this.rasterInfo,m=[],p=this._getBandSegmentCount();let b=0,y=-1;for(;b<this._storageIndex.length;){y++;const e=Math.ceil(f/c/h**y)-1,t=Math.ceil(d/u/h**y)-1;b+=(e+1)*(t+1)*p*4,m.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=m,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo()}async fetchRawTile(e,t,i,a={}){const{blockWidth:n,blockHeight:r,blockBoundary:s}=this.rasterInfo.storageInfo,l=s[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:c,pixelType:u}=this.rasterInfo,{ranges:h,actualTileWidth:f,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){const e=new Uint8Array(n*r);return new Ee["a"]({width:n,height:r,pixels:null,mask:e,validPixelCount:0})}const{bandIds:m}=this.ioConfig,p=this._getBandSegmentCount(),b=[];let y=0;for(y=0;y<p;y++)(!m||m.indexOf[y]>-1)&&b.push(this.request(this._files.data,{range:{from:h[y].from,to:h[y].to},responseType:"array-buffer",signal:a.signal}));const g=await Promise.all(b),x=g.map(e=>e.data.byteLength).reduce((e,t)=>e+t),v=new Uint8Array(x);let O=0;for(y=0;y<p;y++)v.set(new Uint8Array(g[y].data),O),O+=g[y].data.byteLength;const w=He.get(this.rasterInfo.storageInfo.compression).decoderFormat,I=await this.decodePixelBlock(v.buffer,{width:n,height:r,format:w,planes:(null==m?void 0:m.length)||c,pixelType:u});if(Object(o["k"])(this.rasterInfo.noDataValue)&&"lerc"!==w&&!I.mask){const e=this.rasterInfo.noDataValue[0];if(null!=e){const t=I.width*I.height,i=new Uint8Array(t);if(Math.abs(e)>1e24)for(y=0;y<t;y++)Math.abs((I.pixels[0][y]-e)/e)>1e-6&&(i[y]=1);else for(y=0;y<t;y++)I.pixels[0][y]!==e&&(i[y]=1);I.mask=i}}let j=0,S=0;if(f!==n||d!==r){let e=I.mask;if(e)for(y=0;y<r;y++)if(S=y*n,y<d)for(j=f;j<n;j++)e[S+j]=0;else for(j=0;j<n;j++)e[S+j]=0;else for(e=new Uint8Array(n*r),I.mask=e,y=0;y<d;y++)for(S=y*n,j=0;j<f;j++)e[S+j]=1}return I}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,a,n,r,s;if(Le["a"]){for(i=new Uint8Array(e),n=new ArrayBuffer(e.byteLength),a=new Uint8Array(n),r=0;r<e.byteLength/4;r++)for(s=0;s<4;s++)a[4*r+s]=i[4*r+3-s];t=new Uint32Array(n)}else t=new Uint32Array(e);return t}_getBandSegmentCount(){return He.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:a,blockHeight:n,pyramidScalingFactor:r}=this.rasterInfo.storageInfo,{width:s,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,h,f=0,d=0;for(h=0;h<e;h++)d=r**h,c=Math.ceil(s/a/d),u=Math.ceil(o/n/d),f+=c*u;d=r**e,c=Math.ceil(s/a/d),u=Math.ceil(o/n/d),f+=t*c+i,f*=4*l;const m=this._storageIndex.subarray(f,f+4*l);let p=0,b=0;const y=[];for(let g=0;g<l;g++)p=m[4*g+0]*2**32+m[4*g+1],b=p+m[4*g+2]*2**32+m[4*g+3],y.push({from:p,to:b});return{ranges:y,actualTileWidth:i<c-1?a:Math.ceil(s/d)-a*(c-1),actualTileHeight:t<u-1?n:Math.ceil(o/d)-n*(u-1)}}_parseHeader(e){const t=be(e,"MRF_META/Raster");if(!t)throw new s["a"]("mrf:open","not a valid MRF format");const i=be(t,"Size"),a=parseInt(i.getAttribute("x"),10),n=parseInt(i.getAttribute("y"),10),r=parseInt(i.getAttribute("c"),10),o=(ye(t,"Compression")||"none").toLowerCase();if(!He.has(o))throw new s["a"]("mrf:open","currently does not support compression "+o);const l=ye(t,"DataType")||"UInt8",c=Ne.get(l);if(null==c)throw new s["a"]("mrf:open","currently does not support pixel type "+l);const u=be(t,"PageSize"),h=parseInt(u.getAttribute("x"),10),f=parseInt(u.getAttribute("y"),10),d=be(t,"DataValues");let m,p;if(d&&(p=d.getAttribute("NoData"),null!=p&&(m=p.trim().split(" ").map(e=>parseFloat(e)))),be(e,"MRF_META/CachedSource"))throw new s["a"]("mrf:open","currently does not support MRF referencing other data files");const b=be(e,"MRF_META/GeoTags"),y=be(b,"BoundingBox");let g,x=!1;if(null!=y){const e=parseFloat(y.getAttribute("minx")),t=parseFloat(y.getAttribute("miny")),i=parseFloat(y.getAttribute("maxx")),a=parseFloat(y.getAttribute("maxy")),n=ye(b,"Projection")||"";let r;if("LOCAL_CS[]"!==n)if(n.toLowerCase().startsWith("epsg:")){const e=Number(n.slice(5));isNaN(e)||0===e||(r=new D["a"]({wkid:e}))}else r=_e(n);else x=!0,r=new D["a"]({wkid:3857});g=new B["a"](e,t,i,a),g.spatialReference=r}else x=!0,g=new B["a"]({xmin:-.5,ymin:.5-n,xmax:a-.5,ymax:.5,spatialReference:new D["a"]({wkid:3857})});const v=be(e,"MRF_META/Rsets"),O=parseInt(v&&v.getAttribute("scale")||"2",10),w=g.spatialReference,I=new G["a"]({origin:new Q["a"]({x:g.xmin,y:g.ymax,spatialReference:w}),blockWidth:h,blockHeight:f,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:o,pyramidScalingFactor:O}),j=new Q["a"]({x:g.width/a,y:g.height/n,spatialReference:w}),S=new $["a"]({width:a,height:n,extent:g,isPseudoSpatialReference:x,spatialReference:w,bandCount:r,pixelType:c,pixelSize:j,noDataValue:m,storageInfo:I}),_=ye(e,"datafile"),T=ye(e,"IndexFile");return{rasterInfo:S,files:{mrf:this.url,index:T||this.url.replace(".mrf",".idx"),data:_||this.url.replace(".mrf",He.get(o).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Re(t)}catch{return null}}};Object(a["a"])([Object(h["b"])()],Je.prototype,"_files",void 0),Object(a["a"])([Object(h["b"])()],Je.prototype,"_storageIndex",void 0),Object(a["a"])([Object(h["b"])({type:String,json:{write:!0}})],Je.prototype,"datasetFormat",void 0),Je=Object(a["a"])([Object(b["a"])("esri.layers.support.rasterIO.MRFRaster")],Je);const We=Je;var qe=i("6d3d0"),$e=i("0ffd");const Ge=(e,t)=>{const i=e.get(t);return i&&i.values},Ue=(e,t)=>{const i=e.get(t);return i&&i.values[0]};let Ve=class extends ie{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t,i,a;await this.init();const n=e?Object(o["r"])(e.signal):null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:n});if(!r)throw new s["a"]("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:l,firstIFD:c,isBigTiff:u}=Object(qe["g"])(r),h=[];await this._readIFDs(h,r,l,c,0,u?8:4,n);const f=Object(qe["c"])(h),{width:d,height:m,tileWidth:p,tileHeight:b,planes:y,pixelType:g,compression:x,firstPyramidLevel:v,maximumPyramidLevel:O,pyramidBlockWidth:w,pyramidBlockHeight:I,tileBoundary:j,affine:S,metadata:_}=f,T=(null==(t=f.extent.spatialReference)?void 0:t.wkt)||(null==(i=f.extent.spatialReference)?void 0:i.wkid);let R=_e(T),k=!1;null==R&&(k=!0,R=new D["a"]({wkid:3857}));const C=new B["a"]({...f.extent,spatialReference:R}),P=new Q["a"](C?{x:C.xmin,y:C.ymax,spatialReference:R}:{x:0,y:0}),M=new G["a"]({blockWidth:p,blockHeight:b,pyramidBlockWidth:w,pyramidBlockHeight:I,compression:x,origin:P,firstPyramidLevel:v,maximumPyramidLevel:O,blockBoundary:j}),F=new Q["a"]({x:(C.xmax-C.xmin)/d,y:(C.ymax-C.ymin)/m,spatialReference:R}),z=_?{BandProperties:_.bandProperties,DataType:_.dataType}:{},A=new $["a"]({width:d,height:m,bandCount:y,pixelType:g,compression:x,pixelSize:F,storageInfo:M,spatialReference:R,isPseudoSpatialReference:k,keyProperties:z,extent:C,statistics:_?_.statistics:null});if(null!=S&&S.length&&(A.nativeExtent=new B["a"]({xmin:-.5,ymin:.5-m,xmax:d-.5,ymax:.5,spatialReference:R}),A.transform=new we["a"]({polynomialOrder:1,forwardCoefficients:[S[2]+S[0]/2,S[5]-S[3]/2,S[0],S[3],-S[1],-S[4]]}),A.extent=A.transform.forwardTransform(A.nativeExtent),A.pixelSize=new Q["a"]({x:(C.xmax-C.xmin)/d,y:(C.ymax-C.ymin)/m,spatialReference:R}),M.origin.x=-.5,M.origin.y=.5),null==(a=this.ioConfig.skipExtensions)||!a.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var E;if(A.statistics=null!=(E=t.statistics)?E:A.statistics,A.histograms=t.histograms,t.histograms&&Object(o["j"])(A.statistics)&&(A.statistics=Object(fe["d"])(t.histograms)),t.transform&&!S){A.transform=t.transform,A.nativeExtent=A.extent;const e=A.transform.forwardTransform(A.nativeExtent);A.pixelSize=new Q["a"]({x:(e.xmax-e.xmin)/d,y:(e.ymax-e.ymin)/m,spatialReference:R}),A.extent=e}A.spatialReference||(A.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",A),this._headerInfo={littleEndian:l,isBigTiff:u,ifds:h,...f},!this._headerInfo.isSupported)throw new s["a"]("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,a={}){var n;if(null==(n=this._headerInfo)||!n.isSupported||this.isBlockOutside(e,t,i))return null;const r=this._getTileLocation(e,t,i);if(!r)return null;const{ranges:s,actualTileWidth:o,actualTileHeight:l,ifd:c}=r,u=s.map(e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:a.signal})),h=await Promise.all(u),f=h.map(e=>e.data.byteLength).reduce((e,t)=>e+t),d=1===h.length?h[0].data:new ArrayBuffer(f),m=[0],p=[0];if(h.length>1){const e=new Uint8Array(d);for(let t=0,i=0;t<h.length;t++){const a=h[t].data;e.set(new Uint8Array(a),i),m[t]=i,i+=a.byteLength,p[t]=a.byteLength}}const{blockWidth:b,blockHeight:y}=this.getBlockWidthHeight(e),g=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:m,sizes:p},width:b,height:y,planes:null,pixelType:null});let x,v,O;if(o!==b||l!==y){let e=g.mask;if(e)for(x=0;x<y;x++)if(O=x*b,x<l)for(v=o;v<b;v++)e[O+v]=0;else for(v=0;v<b;v++)e[O+v]=0;else for(e=new Uint8Array(b*y),g.mask=e,x=0;x<l;x++)for(O=x*b,v=0;v<o;v++)e[O+v]=1}return g}async _readIFDs(e,t,i,a,n,r=4,s){if(!a)return null;(a>=t.byteLength||a<0)&&(t=(await this.request(this.url,{range:{from:a+n,to:a+n+this._bufferSize},responseType:"array-buffer",signal:s})).data,n=a+n,a=0);const o=await this._readIFD(t,i,a,n,$e["a"].TIFF_TAGS,r,s);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,i,o.nextIFD-n,n,r,s)}async _readIFD(e,t,i,a,n=$e["a"].TIFF_TAGS,r=4,s){if(!e)return null;const o=Object(qe["f"])(e,t,i,a,n,r);if(o.success){const i=[];if(o.ifd.forEach(e=>{e.values||i.push(e)}),i.length>0){const n=i.map(e=>e.offlineOffsetSize),r=Math.min.apply(null,n.map(e=>e[0]));if(Math.min.apply(null,n.map(e=>e[0]+e[1]))-r<=this._bufferSize){const{data:n}=await this.request(this.url,{range:{from:r,to:r+this._bufferSize},responseType:"array-buffer",signal:s});e=n,a=r,i.forEach(i=>Object(qe["e"])(e,t,i,a))}}if(o.ifd.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),n=i.values;if(n&&n.length>4){const r=n[0]+"."+n[1]+"."+n[2],o=await this._readIFD(e,t,i.valueOffset+6-a,a,$e["a"].GEO_KEYS,2,s);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[r]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:a,to:a+o.requiredBufferSize+4},responseType:"array-buffer",signal:s});return(e=i.data).byteLength<o.requiredBufferSize?null:this._readIFD(e,t,0,a,$e["a"].TIFF_TAGS,4,s)}}_getTileLocation(e,t,i){const{firstPyramidLevel:a,blockBoundary:n}=this.rasterInfo.storageInfo,r=0===e?0:e-(a-1),s=this._headerInfo.ifds[r];if(!s)return null;const o=Object(qe["d"])(s,this._headerInfo),l=Ge(s,"TILEOFFSETS");if(void 0===l)return null;const c=Ge(s,"TILEBYTECOUNTS"),{minRow:u,minCol:h,maxRow:f,maxCol:d}=n[r];if(t>f||i>d||t<u||i<h)return null;const m=Ue(s,"IMAGEWIDTH"),p=Ue(s,"IMAGELENGTH"),b=Ue(s,"TILEWIDTH"),y=Ue(s,"TILELENGTH"),g=o?this.rasterInfo.bandCount:1,x=g*t*(d+1)+i,v=[{from:l[x],to:l[x+g-1]+c[x+g-1]-1}];if(o){let e=!0;for(let t=0;t<g;t++)if(l[x+t]+c[x+t]!==l[x+t+1]){e=!1;break}if(!e)for(let t=0;t<g;t++)v[t]={from:l[x+t],to:l[x+t]+c[x+t]-1}}const O=l[x],w=c[x];return null==O||null==w?null:{ranges:v,ifd:s,actualTileWidth:i===d?m%b:b,actualTileHeight:t===f?p%y:y}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Re(t)}catch{return null}}};Object(a["a"])([Object(h["b"])()],Ve.prototype,"_files",void 0),Object(a["a"])([Object(h["b"])()],Ve.prototype,"_headerInfo",void 0),Object(a["a"])([Object(h["b"])()],Ve.prototype,"_bufferSize",void 0),Object(a["a"])([Object(h["b"])({type:String,json:{write:!0}})],Ve.prototype,"datasetFormat",void 0),Ve=Object(a["a"])([Object(b["a"])("esri.layers.support.rasterDatasets.TIFFRaster")],Ve);const Ye=Ve,Xe=new Map;Xe.set("CRF",{desc:"Cloud Raster Format",constructor:he}),Xe.set("MRF",{desc:"Meta Raster Format",constructor:We}),Xe.set("TIFF",{desc:"GeoTIFF",constructor:Ye}),Xe.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Ae}),Xe.set("JPG",{desc:"JPG Raster Format",constructor:Ce}),Xe.set("PNG",{desc:"PNG Raster Format",constructor:Ce}),Xe.set("GIF",{desc:"GIF Raster Format",constructor:Ce}),Xe.set("BMP",{desc:"BMP Raster Format",constructor:Ce});class Ke{static get supportedFormats(){const e=new Set;return Xe.forEach((t,i)=>e.add(i)),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:a}=e;let n=e.datasetFormat;null==n&&t.lastIndexOf(".")&&(n=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===n||"TIF"===n?n="TIFF":"JPG"!==n&&"JPEG"!==n&&"JFIF"!==n||(n="JPG"),t.toLowerCase().includes("/imageserver")&&!t.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");const r={url:t,sourceJSON:a,datasetFormat:n,ioConfig:i||{bandIds:null,sampling:null}};let o,l;if(this.supportedFormats.has(n)){if("CRF"===n&&!i.enableCRF)throw new s["a"]("rasterfactory:open","cannot open raster: "+t);return o=Xe.get(n).constructor,l=new o(r),await l.open({signal:e.signal}),l}if(n)throw new s["a"]("rasterfactory:open","not a supported format "+n);const c=Array.from(Xe.keys());let u=0;const h=()=>(n=c[u++],n&&("CRF"!==n||i.enableCRF)?(o=Xe.get(n).constructor,l=new o(r),l.open({signal:e.signal}).then(()=>l).catch(()=>h())):null);return h()}static register(e,t,i){Xe.has(e.toUpperCase())||Xe.set(e.toUpperCase(),{desc:t,constructor:i})}}var Ze=i("f51b");let Qe=class extends(Object(g["a"])(Object(H["a"])(Object(E["a"])(Object(L["a"])(Object(x["a"])(A(Object(J["a"])(Object(N["a"])(Object(l["a"])(y["a"])))))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(o["k"])(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(c["o"]).then(()=>this._openRaster(t))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,t;let i=[new W["a"]({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const a=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields,n="Raster.";if(a){const e=a.filter(e=>"oid"!==e.type&&"value"!==e.name.toLowerCase()).map(e=>{const t=e.clone();return t.name=n+e.name,t});i=i.concat(e)}const r=this.rasterInfo.dataType;if(("vector-magdir"===r||"vector-uv"===r)&&Object(o["k"])(this.rasterInfo.multidimensionalInfo)){var s;const e=null==(s=this.rasterInfo.multidimensionalInfo.variables[0].unit)?void 0:s.trim(),t="Magnitude"+(e?` (${e})`:"");i.push(new W["a"]({name:"Raster.Magnitude",alias:t,domain:null,editable:!1,type:"double"})),i.push(new W["a"]({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return i}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const a=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,n=Object(r["b"])(a,i)||void 0;if(null!=n)return n}createPopupTemplate(e){return Object(Ze["a"])({fields:this.rasterFields,title:this.title},e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new s["a"]("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await Ke.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new s["a"]("imagery-tile-layer:load","cannot load resources on "+this.url);if(this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.own(Object(u["f"])(()=>this.customParameters,e=>{this.raster.ioConfig.customFetchParameters=e}))}};Object(a["a"])([Object(h["b"])({type:[d["a"]],json:{write:{overridePolicy(){var e;return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==(null==(e=this.bandIds)?void 0:e.join(","))}}}}})],Qe.prototype,"bandIds",void 0),Object(a["a"])([Object(h["b"])({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),Object(m["a"])(q["a"])],Qe.prototype,"interpolation",void 0),Object(a["a"])([Object(h["b"])({json:{write:!0}})],Qe.prototype,"multidimensionalDefinition",void 0),Object(a["a"])([Object(h["b"])(S["e"])],Qe.prototype,"legendEnabled",void 0),Object(a["a"])([Object(h["b"])({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Qe.prototype,"isReference",void 0),Object(a["a"])([Object(h["b"])({type:["show","hide"]})],Qe.prototype,"listMode",void 0),Object(a["a"])([Object(h["b"])({json:{read:!0,write:!0}})],Qe.prototype,"blendMode",void 0),Object(a["a"])([Object(h["b"])()],Qe.prototype,"sourceJSON",void 0),Object(a["a"])([Object(h["b"])({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],Qe.prototype,"version",void 0),Object(a["a"])([Object(h["b"])()],Qe.prototype,"title",void 0),Object(a["a"])([Object(h["b"])({readOnly:!0,json:{read:!1}})],Qe.prototype,"type",void 0),Object(a["a"])([Object(h["b"])({type:["ArcGISTiledImageServiceLayer"]})],Qe.prototype,"operationalLayerType",void 0),Object(a["a"])([Object(h["b"])({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],Qe.prototype,"popupEnabled",void 0),Object(a["a"])([Object(h["b"])({type:n["a"],json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],Qe.prototype,"popupTemplate",void 0),Object(a["a"])([Object(h["b"])({readOnly:!0})],Qe.prototype,"defaultPopupTemplate",null),Object(a["a"])([Object(h["b"])({readOnly:!0,type:[W["a"]]})],Qe.prototype,"fields",void 0),Object(a["a"])([Object(h["b"])({readOnly:!0,type:[W["a"]]})],Qe.prototype,"rasterFields",null),Object(a["a"])([Object(h["b"])({types:r["a"],json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var e;const t="raster-stretch"===(null==(e=this.renderer)?void 0:e.type)&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!t}}},origins:{"web-scene":{types:r["c"],name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],Qe.prototype,"renderer",null),Object(a["a"])([Object(p["a"])("renderer")],Qe.prototype,"readRenderer",null),Qe=Object(a["a"])([Object(b["a"])("esri.layers.ImageryTileLayer")],Qe);const et=Qe},ab68:function(e,t,i){"use strict";i.d(t,"a",(function(){return r})),i.d(t,"b",(function(){return n}));var a=i("dff3");const n={type:a["a"],json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:r}}}}};function r(e,t,i,n){if(!e)return null;const{minScale:r,maxScale:s,minLOD:o,maxLOD:l}=t;if(null!=o&&null!=l)return n&&n.ignoreMinMaxLOD?a["a"].fromJSON(e):a["a"].fromJSON({...e,lods:e.lods.filter(({level:e})=>null!=e&&e>=o&&e<=l)});if(0!==r&&0!==s){const t=e=>Math.round(1e4*e)/1e4,i=r?t(r):1/0,n=s?t(s):-1/0;return a["a"].fromJSON({...e,lods:e.lods.filter(e=>{const a=t(e.scale);return a<=i&&a>=n})})}return a["a"].fromJSON(e)}}}]);
//# sourceMappingURL=chunk-1b354235.69e7bc81.js.map