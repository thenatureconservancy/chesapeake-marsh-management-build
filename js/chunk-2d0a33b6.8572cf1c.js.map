{"version":3,"sources":["webpack:///./node_modules/@arcgis/core/layers/GeoRSSLayer.js"],"names":["L","R","base","v","key","typeMap","x","errorContext","k","C","P","_","G","w","u","h","d","f","S","s","c","constructor","e","super","this","description","fullExtent","legendEnabled","lineSymbol","pointSymbol","polygonSymbol","operationalLayerType","url","type","normalizeCtorArgs","o","readFeatureCollections","featureCollection","layers","forEach","layerDefinition","drawingInfo","renderer","symbol","outline","style","includes","_hasGeometry","_get","originOf","l","_set","load","t","signal","addResolvingPromise","loadFromPortal","supportedTypes","catch","i","then","_fetchService","read","origin","Promise","resolve","ignoreDefaults","spatialReference","data","r","geoRSSServiceUrl","query","refresh","loaded","outSR","y","wkid","JSON","stringify","featureCollections","some","featureSet","geometryType","features","length","p","prototype","n","m","json","name","g","j","types","write","b","origins","service","source","reader","readOnly","value","a","F"],"mappings":"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","file":"js/chunk-2d0a33b6.8572cf1c.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../chunks/tslib.es6.js\";import o from\"../config.js\";import r from\"../request.js\";import\"../symbols.js\";import{isSome as t}from\"../core/maybe.js\";import{MultiOriginJSONMixin as s}from\"../core/MultiOriginJSONSupport.js\";import{throwIfAbortError as i}from\"../core/promiseUtils.js\";import{getFilename as l}from\"../core/urlUtils.js\";import{property as p}from\"../core/accessorSupport/decorators/property.js\";import\"../core/arrayUtils.js\";import\"../core/has.js\";import\"../core/accessorSupport/ensureType.js\";import{reader as n}from\"../core/accessorSupport/decorators/reader.js\";import{subclass as a}from\"../core/accessorSupport/decorators/subclass.js\";import m from\"../geometry/Extent.js\";import{isWGS84 as y}from\"../geometry/support/spatialReferenceUtils.js\";import c from\"./Layer.js\";import{BlendLayer as u}from\"./mixins/BlendLayer.js\";import{OperationalLayer as d}from\"./mixins/OperationalLayer.js\";import{PortalLayer as f}from\"./mixins/PortalLayer.js\";import{RefreshableLayer as h}from\"./mixins/RefreshableLayer.js\";import{ScaleRangeLayer as S}from\"./mixins/ScaleRangeLayer.js\";import{id as g,legendEnabled as j,url as b}from\"./support/commonProperties.js\";import v from\"../symbols/Symbol.js\";import x from\"../symbols/SimpleLineSymbol.js\";import C from\"../symbols/PictureMarkerSymbol.js\";import P from\"../symbols/SimpleMarkerSymbol.js\";import G from\"../symbols/SimpleFillSymbol.js\";const L=[\"atom\",\"xml\"],R={base:v,key:\"type\",typeMap:{\"simple-line\":x},errorContext:\"symbol\"},k={base:v,key:\"type\",typeMap:{\"picture-marker\":C,\"simple-marker\":P},errorContext:\"symbol\"},_={base:v,key:\"type\",typeMap:{\"simple-fill\":G},errorContext:\"symbol\"};let w=class extends(u(h(d(f(S(s(c))))))){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType=\"GeoRSS\",this.url=null,this.type=\"geo-rss\"}normalizeCtorArgs(e,o){return\"string\"==typeof e?{url:e,...o}:e}readFeatureCollections(e,o){return o.featureCollection.layers.forEach((e=>{const o=e.layerDefinition.drawingInfo.renderer.symbol;o&&\"esriSFS\"===o.type&&o.outline?.style.includes(\"esriSFS\")&&(o.outline.style=\"esriSLSSolid\")})),o.featureCollection.layers}get hasPoints(){return this._hasGeometry(\"esriGeometryPoint\")}get hasPolylines(){return this._hasGeometry(\"esriGeometryPolyline\")}get hasPolygons(){return this._hasGeometry(\"esriGeometryPolygon\")}get title(){const e=this._get(\"title\");return e&&\"defaults\"!==this.originOf(\"title\")?e:this.url?l(this.url,L)||\"GeoRSS\":e||\"\"}set title(e){this._set(\"title\",e)}load(e){const o=t(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:[\"Map Service\",\"Feature Service\",\"Feature Collection\",\"Scene Service\"]},e).catch(i).then((()=>this._fetchService(o))).then((e=>{this.read(e,{origin:\"service\"})}))),Promise.resolve(this)}async hasDataChanged(){const e=await this._fetchService();return this.read(e,{origin:\"service\",ignoreDefaults:!0}),!0}async _fetchService(e){const t=this.spatialReference,{data:s}=await r(o.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:y(t)?void 0:t.wkid??JSON.stringify(t)},signal:e});return s}_hasGeometry(e){return this.featureCollections?.some((o=>o.featureSet?.geometryType===e&&o.featureSet.features?.length>0))??!1}};e([p()],w.prototype,\"description\",void 0),e([p()],w.prototype,\"featureCollections\",void 0),e([n(\"service\",\"featureCollections\",[\"featureCollection.layers\"])],w.prototype,\"readFeatureCollections\",null),e([p({type:m,json:{name:\"lookAtExtent\"}})],w.prototype,\"fullExtent\",void 0),e([p(g)],w.prototype,\"id\",void 0),e([p(j)],w.prototype,\"legendEnabled\",void 0),e([p({types:R,json:{write:!0}})],w.prototype,\"lineSymbol\",void 0),e([p({type:[\"show\",\"hide\"]})],w.prototype,\"listMode\",void 0),e([p({types:k,json:{write:!0}})],w.prototype,\"pointSymbol\",void 0),e([p({types:_,json:{write:!0}})],w.prototype,\"polygonSymbol\",void 0),e([p({type:[\"GeoRSS\"]})],w.prototype,\"operationalLayerType\",void 0),e([p(b)],w.prototype,\"url\",void 0),e([p({json:{origins:{service:{read:{source:\"name\",reader:e=>e||void 0}}}}})],w.prototype,\"title\",null),e([p({readOnly:!0,json:{read:!1},value:\"geo-rss\"})],w.prototype,\"type\",void 0),w=e([a(\"esri.layers.GeoRSSLayer\")],w);const F=w;export{F as default};\n"],"sourceRoot":""}