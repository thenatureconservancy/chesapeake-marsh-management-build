(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-91c026ee"],{b745:function(e,t,i){"use strict";i.d(t,"a",(function(){return s}));var r=i("bb72"),a=i("e9fc"),n=i("69dd");async function s(e,t,i){const s=Object(r["c"])(e);return Object(a["executeQueryForIds"])(s,n["a"].from(t),{...i}).then(e=>e.data.objectIds)}},c89c:function(e,t,i){"use strict";i.d(t,"a",(function(){return s}));var r=i("bb72"),a=i("e9fc"),n=i("69dd");async function s(e,t,i){const s=Object(r["c"])(e);return Object(a["executeQueryForCount"])(s,n["a"].from(t),{...i}).then(e=>e.data.count)}},fc65:function(e,t,i){"use strict";i.r(t),i.d(t,"default",(function(){return Ut}));var r,a=i("a4ee"),n=i("4856"),s=i("b2b2"),o=i("e694"),l=i("f4cc"),c=i("59b2"),u=(i("b50f"),i("c120"),i("cea0")),p=i("d386"),m=i("09db"),d=i("a6a3"),b=i("e06a"),h=i("8d60"),y=i("ba40"),f=i("2eab"),g=i("ce50"),O=i("fa8a"),j=i("7ffa"),v=i("e92d"),R=i("477c"),w=i("e041"),S=i("4adc"),x=i("afcf"),F=i("22f4"),I=i("b627"),N=i("6a0e"),T=i("448d");const D=new Set(["raster","raster2","dem","fillraster"]),P=new Set(["rasters"]),C=e=>e&&e.rasterFunction?J.fromJSON(e):e,_=e=>e&&e instanceof J?e.toJSON():e,V=e=>(null==e?void 0:e.functionName)&&!e.declaredClass,M=e=>V(e)?new J(e):e,A=e=>{if(null==e)return null;e=Object(j["a"])(e);const t={};for(const i of Object.keys(e))D.has(i.toLowerCase())?t[i]=C(e[i]):P.has(i.toLowerCase())&&Array.isArray(e[i])?t[i]=e[i].map(C):t[i]=e[i];return t};let J=r=class extends N["a"]{constructor(e){super(e),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.rasterFunctionDefinition=null}set functionArguments(e){if(e){const t=Object.keys(e);if(t.some(t=>D.has(t.toLowerCase())&&V(e[t]))||t.some(t=>P.has(t.toLowerCase())&&Array.isArray(e[t])&&e[t].some(e=>V(e)))){e=Object(j["a"])(e);for(const i of t)D.has(i.toLowerCase())?e[i]=M(e[i]):P.has(i.toLowerCase())&&Array.isArray(e[i])&&(e[i]=e[i].map(e=>M(e)))}}this._set("functionArguments",e)}readFunctionArguments(e){return A(e)}writeFunctionArguments(e,t,i){const r={};for(const a of Object.keys(e))D.has(a.toLowerCase())?r[a]=_(e[a]):P.has(a.toLowerCase())&&Array.isArray(e[a])?r[a]=e[a].map(_):r[a]=_(e[a]);t[i]=r}readFunctionName(e,t){const i=t.rasterFunctionInfos,r=t.name;return r||(i&&i.length&&"None"!==i[0].name?i[0].name:t.rasterFunctionDefinition?t.rasterFunctionDefinition.name:t.rasterFunction)}clone(){return new r({functionName:this.functionName,functionArguments:Object(j["a"])(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:Object(j["a"])(this.rasterFunctionDefinition)})}};Object(a["a"])([Object(c["b"])({json:{type:Object,name:"rasterFunctionArguments"}})],J.prototype,"functionArguments",null),Object(a["a"])([Object(x["a"])("functionArguments")],J.prototype,"readFunctionArguments",null),Object(a["a"])([Object(m["a"])("functionArguments")],J.prototype,"writeFunctionArguments",null),Object(a["a"])([Object(c["b"])({json:{type:String,write:{target:"rasterFunction"}}})],J.prototype,"functionName",void 0),Object(a["a"])([Object(x["a"])("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],J.prototype,"readFunctionName",null),Object(a["a"])([Object(T["a"])({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),Object(c["b"])({json:{default:"unknown"}})],J.prototype,"outputPixelType",void 0),Object(a["a"])([Object(c["b"])({type:String,json:{read:!0,write:!0}})],J.prototype,"variableName",void 0),Object(a["a"])([Object(c["b"])({type:Object,json:{name:"rasterFunctionDefinition"}})],J.prototype,"rasterFunctionDefinition",void 0),J=r=Object(a["a"])([Object(p["a"])("esri.layers.support.RasterFunction")],J);const E=J,k={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var z=i("7c6e"),L=i("6557"),q=i("c3fc");const H={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},U={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},Q=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function G(e){return Q.has(e.type)}function B(e,t){if(!e||!t)return Object(j["a"])(e||t);const i=Object(j["a"])(e);if(t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=null),W(i.rasterFunctionDefinition.arguments,t)}else"none"!==t.functionName.toLowerCase()&&(X(i.functionArguments).Raster=t);return i}function W(e,t){for(const i in e)"raster"===i.toLowerCase()&&("RasterFunctionVariable"===e[i].type?(e[i]=t.rasterFunctionDefinition,e[i].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[i].type&&W(e[i].arguments,t))}function K(e){const t=Object(j["a"])(k[e.functionName+"Function"]),i=e.functionArguments;for(const r in i)"raster"===r.toLowerCase()?(t.arguments[r]=K(i[r]),t.arguments[r].type="RasterFunctionTemplate"):"colormap"===r.toLowerCase()?(t.arguments[r].value=le(i[r]),t.arguments.ColorSchemeType.value=0):t.arguments[r].value=i[r];return t}function Z(e,t){switch(t=t||{},e.type){case"raster-stretch":return te(e,t);case"class-breaks":return ie(e,t);case"unique-value":return ne(e,t);case"raster-colormap":return se(e,t);case"vector-field":return Y(e,t);case"raster-shaded-relief":return ee(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function X(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?X(t.functionArguments):e}const $={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function Y(e,t){const i=new E;i.functionName="VectorFieldRenderer";const{dataType:r,bandProperties:a}=t,n="vector-uv"===r;let s,o;a&&2===a.length&&(s=a.map(e=>e.BandName.toLowerCase()).indexOf("magnitude"),o=a.map(e=>e.BandName.toLowerCase()).indexOf("direction")),-1!==s&&null!==s||(s=0,o=1);const l="arithmetic"===e.rotationType?1:2,c="flow-from"===e.flowRepresentation?0:1,u=e.visualVariables?e.visualVariables.find(e=>"Magnitude"===e.field):new q["a"],p={magnitudeBandID:s,directionBandID:o,isUVComponents:n,referenceSystem:l,massFlowAngleRepresentation:c,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:U[e.style.toLowerCase().replace("-","_")],minimumMagnitude:u.minDataValue,maximumMagnitude:u.maxDataValue,minimumSymbolSize:u.minSize,maximumSymbolSize:u.maxSize};return i.functionArguments=p,t.convertToRFT?new E({rasterFunctionDefinition:K(i)}):i}function ee(e,t){const i=t.convertToRFT;if("elevation"!==t.dataType)return new E;const r=new E;r.functionName="Hillshade";const a="traditional"===e.hillshadeType?0:1,n="none"===e.scalingType?1:3,s={HillshadeType:a,SlopeType:n,ZFactor:e.zFactor};return 0===a&&(s.Azimuth=e.azimuth,s.Altitude=e.altitude),3===n&&(s.PSPower=e.pixelSizePower,s.PSZFactor=e.pixelSizeFactor),r.functionArguments=s,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",i?s.ColorRamp=Object(z["d"])(e.colorRamp):s.Colormap=Object(z["b"])(e.colorRamp,256)),i?new E({rasterFunctionDefinition:K(r)}):r}function te(e,t){const i=t.convertToRFT,r=new E;r.functionName="Stretch";const a=$[L["b"].toJSON(e.stretchType)],n="u8",s={StretchType:a,Statistics:oe(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(s.Min=e.outputMin),null!=e.outputMax&&(s.Max=e.outputMax),a===$.standardDeviation?(s.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType=n):a===$.percentClip?(s.MinPercent=e.minPercent,s.MaxPercent=e.maxPercent,r.outputPixelType=n):a===$.minMax?r.outputPixelType=n:a===$.sigmoid&&(s.SigmoidStrengthLevel=e.sigmoidStrengthLevel),r.functionArguments=s,r.variableName="Raster",e.colorRamp){const a=e.colorRamp,n=new E;if(i)n.functionArguments={ColorRamp:Object(z["d"])(a)};else{const i=Object(z["c"])(a);if(i)n.functionArguments={colorRamp:i};else if(!t.convertColorRampToColormap||"algorithmic"!==a.type&&"multipart"!==a.type){var o;const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&(null==(o=t.colorRamps)?void 0:o.length)&&t.colorRamps.forEach(e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm"),n.functionArguments={colorRamp:t}}else n.functionArguments={Colormap:Object(z["b"])(a,256)}}return n.variableName="Raster",n.functionName="Colormap",n.functionArguments.Raster=r,i?new E({rasterFunctionDefinition:K(n)}):n}return i?new E({rasterFunctionDefinition:K(r)}):r}function ie(e,t){const i=[],r=[],a=[],n=[],s=1e-6,{pixelType:o,rasterAttributeTable:l}=t,c=l&&l.features,u=ae(l);if(c&&Array.isArray(c)&&e.classBreakInfos){e.classBreakInfos.forEach((t,i)=>{const r=t.symbol.color;let a;r.a&&c.forEach(s=>{a=s.attributes[e.field],(a>=t.minValue&&a<t.maxValue||i===e.classBreakInfos.length-1&&a>=t.minValue)&&n.push([s.attributes[u],r.r,r.g,r.b])})});const i=o?re(n,o):n,r=new E;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=i,r.variableName="Raster",t.convertToRFT?new E({rasterFunctionDefinition:K(r)}):r}e.classBreakInfos.forEach((e,t)=>{const o=e.symbol&&e.symbol.color;o.a?(0===t?i.push(e.minValue,e.maxValue+s):i.push(e.minValue+s,e.maxValue+s),r.push(t),n.push([t,o.r,o.g,o.b])):a.push(e.minValue,e.maxValue)});const p=o?re(n,o):n,m=new E;m.functionName="Remap",m.functionArguments={InputRanges:i,OutputValues:r,NoDataRanges:a},m.variableName="Raster";const d=new E;return d.functionName="Colormap",d.functionArguments={Colormap:p,Raster:m},t.convertToRFT?new E({rasterFunctionDefinition:K(d)}):d}function re(e,t){const i=H[String(t).toLowerCase()];return i&&e.push([Math.floor(i[0]-1),0,0,0],[Math.ceil(i[1]+1),0,0,0]),e}function ae(e){if(!e)return;const{fields:t}=e,i=t&&t.find(e=>e&&e.name&&"value"===e.name.toLowerCase());return i&&i.name}function ne(e,t){var i,r;const a=[],{pixelType:n,rasterAttributeTable:s}=t,o=s&&s.features,l=ae(s),c=null==(i=e.defaultSymbol)||null==(r=i.color)?void 0:r.toRgb(),u=e.uniqueValueInfos;if(u)if(o){const t=new Map;u.forEach(e=>{var i;const r=e.value,a=null==(i=e.symbol.color)?void 0:i.toRgb();null!=r&&a&&t.set(String(r),a)});const i=e.field;o.forEach(({attributes:e})=>{const r=String(e[i]),n=e[l];if(t.has(r)){const e=t.get(r);a.push([n,...e])}else c&&a.push([n,...c])})}else for(let d=0;d<u.length;d++){const e=u[d],t=e.symbol.color,i=+e.value;if(null!=t&&t.a){if(isNaN(i))return null;a.push([i,t.r,t.g,t.b])}}const p=n&&a.length>0?re(a,n):a,m=new E;return m.functionName="Colormap",m.functionArguments={},m.functionArguments.Colormap=p,m.variableName="Raster",t.convertToRFT?new E({rasterFunctionDefinition:K(m)}):m}function se(e,t){const i=e.extractColormap();if(!i||0===i.length)return;const{pixelType:r}=t,a=r?re(i,r):i,n=new E;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=a,t.convertToRFT?new E({rasterFunctionDefinition:K(n)}):n}function oe(e){const t=[];return e.forEach(e=>{const i=e;if(Array.isArray(i))t.push(i);else{if(null==i.min||null==i.max)return;const e=[i.min,i.max,i.avg||0,i.stddev||0];t.push(e)}}),t}function le(e){const t=[],i=[];return e.forEach(e=>{t.push(e[0]),i.push(Object(z["e"])([...e.slice(1),255]))}),{type:"RasterColormap",values:t,colors:i}}var ce,ue=i("1a3e"),pe=i("4ae5");const me=Object(O["b"])()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),de=Object(O["b"])()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function be(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;default:t="esriMosaicNone"}return de.fromJSON(t)}let he=ce=class extends N["a"]{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return be(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const i=t.mosaicOperation,r=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),a=i||(r?me.toJSON(r):null);return me.fromJSON(a)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:""+e}clone(){return new ce({ascending:this.ascending,itemRenderingRule:Object(j["a"])(this.itemRenderingRule),lockRasterIds:Object(j["a"])(this.lockRasterIds),method:this.method,multidimensionalDefinition:Object(j["a"])(this.multidimensionalDefinition),objectIds:Object(j["a"])(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:Object(j["a"])(this.viewpoint),where:this.where})}};Object(a["a"])([Object(c["b"])({type:Boolean,json:{write:!0}})],he.prototype,"ascending",void 0),Object(a["a"])([Object(x["a"])("ascending",["ascending","sortAscending"])],he.prototype,"readAscending",null),Object(a["a"])([Object(c["b"])({type:E,json:{write:!0}})],he.prototype,"itemRenderingRule",void 0),Object(a["a"])([Object(c["b"])({type:[u["a"]],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],he.prototype,"lockRasterIds",void 0),Object(a["a"])([Object(c["b"])({type:String,json:{type:de.jsonValues,write:{target:"mosaicMethod",writer:de.write}}})],he.prototype,"method",void 0),Object(a["a"])([Object(x["a"])("method",["mosaicMethod","defaultMosaicMethod"])],he.prototype,"readMethod",null),Object(a["a"])([Object(c["b"])({type:[I["a"]],json:{write:!0}})],he.prototype,"multidimensionalDefinition",void 0),Object(a["a"])([Object(c["b"])({type:[u["a"]],json:{name:"fids",write:!0}})],he.prototype,"objectIds",void 0),Object(a["a"])([Object(c["b"])({json:{type:me.jsonValues,read:{reader:me.read},write:{target:"mosaicOperation",writer:me.write}}})],he.prototype,"operation",void 0),Object(a["a"])([Object(x["a"])("operation",["mosaicOperation","mosaicOperator"])],he.prototype,"readOperation",null),Object(a["a"])([Object(c["b"])({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],he.prototype,"sortField",void 0),Object(a["a"])([Object(c["b"])({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],he.prototype,"sortValue",void 0),Object(a["a"])([Object(ue["a"])("sortValue")],he.prototype,"castSortValue",null),Object(a["a"])([Object(c["b"])({type:pe["a"],json:{write:!0}})],he.prototype,"viewpoint",void 0),Object(a["a"])([Object(c["b"])({type:String,json:{write:!0}})],he.prototype,"where",void 0),he=ce=Object(a["a"])([Object(p["a"])("esri.layers.support.MosaicRule")],he);const ye=he;var fe=i("4607");let ge=class extends N["a"]{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,t,i){this.layer.version<10.3||(t[i]=e)}writeCompressionQuality(e,t,i){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}get format(){var e;return"vector-field"===(null==(e=this.layer.renderer)?void 0:e.type)?"lerc":this.layer.format}writeLercVersion(e,t,i){"lerc"===this.format&&this.layer.version>=10.5&&(t[i]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("renderer"),e.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const i=e.definitionExpression;return t?i&&i!==t.where&&(t=t.clone(),t.where=i):i&&(t=new ye({where:i})),t}get renderingRule(){var e;const t=this.layer;let i=t.renderingRule;const r=t.pixelFilter,a=!t.format||t.format.includes("jpg")||t.format.includes("png");return i=this._addResampleRasterFunction(i),a&&!r&&"vector-field"!==(null==(e=t.renderer)?void 0:e.type)&&(i=this.combineRendererWithRenderingRule()),i}combineRendererWithRenderingRule(){var e;const t=this.layer,{rasterInfo:i,renderingRule:r,renderer:a}=t;return a&&G(a)?B(Z(a,{rasterAttributeTable:i.attributeTable,pixelType:i.pixelType,dataType:i.dataType,bandProperties:null==(e=i.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:t.version<10.6,convertToRFT:!(null==r||!r.rasterFunctionDefinition)}),r):r}_addResampleRasterFunction(e){var t;if("vector-field"!==(null==(t=this.layer.renderer)?void 0:t.type)||"Resample"===(null==e?void 0:e.functionName))return e;const i="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10;let r=new E({functionName:"Resample",functionArguments:{ResamplingType:i,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}});return r=null!=e&&e.rasterFunctionDefinition?new E({rasterFunctionDefinition:K(r)}):r,B(r,e)}};Object(a["a"])([Object(c["b"])()],ge.prototype,"layer",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],ge.prototype,"adjustAspectRatio",void 0),Object(a["a"])([Object(m["a"])("adjustAspectRatio")],ge.prototype,"writeAdjustAspectRatio",null),Object(a["a"])([Object(c["b"])({json:{write:!0}}),Object(S["a"])("layer.bandIds")],ge.prototype,"bandIds",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],ge.prototype,"compression",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}}),Object(S["a"])("layer.compressionQuality")],ge.prototype,"compressionQuality",void 0),Object(a["a"])([Object(m["a"])("compressionQuality")],ge.prototype,"writeCompressionQuality",null),Object(a["a"])([Object(c["b"])({json:{write:!0}}),Object(S["a"])("layer.compressionTolerance")],ge.prototype,"compressionTolerance",void 0),Object(a["a"])([Object(m["a"])("compressionTolerance")],ge.prototype,"writeCompressionTolerance",null),Object(a["a"])([Object(c["b"])({json:{write:!0}})],ge.prototype,"format",null),Object(a["a"])([Object(c["b"])({type:String,json:{read:{reader:fe["a"].read},write:{writer:fe["a"].write}}}),Object(S["a"])("layer.interpolation")],ge.prototype,"interpolation",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}}),Object(S["a"])("layer.noData")],ge.prototype,"noData",void 0),Object(a["a"])([Object(c["b"])({type:String,json:{read:{reader:fe["b"].read},write:{writer:fe["b"].write}}}),Object(S["a"])("layer.noDataInterpretation")],ge.prototype,"noDataInterpretation",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],ge.prototype,"pixelType",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],ge.prototype,"lercVersion",void 0),Object(a["a"])([Object(m["a"])("lercVersion")],ge.prototype,"writeLercVersion",null),Object(a["a"])([Object(c["b"])({type:Number})],ge.prototype,"version",null),Object(a["a"])([Object(c["b"])({json:{write:!0}})],ge.prototype,"mosaicRule",null),Object(a["a"])([Object(c["b"])({json:{write:!0}})],ge.prototype,"renderingRule",null),ge=Object(a["a"])([Object(p["a"])("esri.layers.mixins.ExportImageServiceParameters")],ge);var Oe=i("a1f3"),je=i("80b7"),ve=i("3e27"),Re=i("a4f3"),we=i("da6b"),Se=i("c75d"),xe=i("1451"),Fe=i("19db"),Ie=i("1ccd"),Ne=i("7220"),Te=i("a8d5"),De=i("bb72"),Pe=i("5996");let Ce=class extends N["a"]{constructor(){super(...arguments),this.north=null,this.up=null,this.spatialReference=null}};Object(a["a"])([Object(c["b"])({type:Number,json:{write:!0}})],Ce.prototype,"north",void 0),Object(a["a"])([Object(c["b"])({type:Number,json:{write:!0}})],Ce.prototype,"up",void 0),Object(a["a"])([Object(c["b"])({type:Pe["a"],json:{write:!0}})],Ce.prototype,"spatialReference",void 0),Ce=Object(a["a"])([Object(p["a"])("esri.rest.support.ImageAngleResult")],Ce);const _e=Ce;var Ve=i("2edc");let Me=class extends N["a"]{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};Object(a["a"])([Object(c["b"])({json:{write:!0}})],Me.prototype,"catalogItemVisibilities",void 0),Object(a["a"])([Object(c["b"])({type:Ve["default"],json:{write:!0}})],Me.prototype,"catalogItems",void 0),Object(a["a"])([Object(c["b"])({type:pe["a"],json:{write:!0}})],Me.prototype,"location",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],Me.prototype,"name",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],Me.prototype,"objectId",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],Me.prototype,"processedValues",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],Me.prototype,"properties",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],Me.prototype,"value",void 0),Me=Object(a["a"])([Object(p["a"])("esri.rest.support.ImageIdentifyResult")],Me);const Ae=Me;let Je=class extends N["a"]{constructor(){super(...arguments),this.geometries=null}};Object(a["a"])([Object(c["b"])({json:{write:!0}})],Je.prototype,"geometries",void 0),Je=Object(a["a"])([Object(p["a"])("esri.rest.support.ImagePixelLocationResult")],Je);const Ee=Je;let ke=class extends N["a"]{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};Object(a["a"])([Object(c["b"])({json:{write:!0}})],ke.prototype,"attributes",void 0),Object(a["a"])([Object(c["b"])({type:pe["a"],json:{write:!0}})],ke.prototype,"location",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],ke.prototype,"locationId",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],ke.prototype,"rasterId",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],ke.prototype,"resolution",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],ke.prototype,"pixelValue",void 0),ke=Object(a["a"])([Object(p["a"])("esri.rest.support.ImageSample")],ke);const ze=ke;let Le=class extends N["a"]{constructor(){super(...arguments),this.samples=null}};Object(a["a"])([Object(c["b"])({type:[ze],json:{write:!0}})],Le.prototype,"samples",void 0),Le=Object(a["a"])([Object(p["a"])("esri.rest.support.ImageSampleResult")],Le);const qe=Le;function He(e){const t=null==e?void 0:e.time;if(t&&(null!=t.start||null!=t.end)){const i=[];null!=t.start&&i.push(t.start),null==t.end||i.includes(t.end)||i.push(t.end),e.time=i.join(",")}}async function Ue(e,t,i){const r=Object(De["c"])(e),a=t.geometry?[t.geometry]:[],n=await Object(Te["a"])(a),o=t.toJSON();He(o);const l=n&&n[0];Object(s["k"])(l)&&(o.geometry=l.toJSON());const c=Object(De["b"])({...r.query,f:"json",...o});return Object(De["a"])(c,i)}async function Qe(e,t,i){var r;const a=t.toJSON();Object(s["k"])(a.angleName)&&(a.angleName=a.angleName.join(",")),Object(s["k"])(t.point)&&null!=(r=t.point.spatialReference)&&r.imageCoordinateSystem&&(a.point.spatialReference=Xe(t.point.spatialReference)),Object(s["k"])(t.spatialReference)&&t.spatialReference.imageCoordinateSystem&&(a.spatialReference=$e(t.spatialReference));const n=Object(De["c"])(e),o=Object(De["b"])({...n.query,f:"json",...a}),l=Object(De["a"])(o,i),{data:c}=await Object(f["default"])(n.path+"/computeAngles",l);return c.spatialReference=c.spatialReference?null!=c.spatialReference.geodataXform?new Pe["a"]({wkid:0,imageCoordinateSystem:c.spatialReference}):Pe["a"].fromJSON(c.spatialReference):null,"NaN"===c.north&&(c.north=null),"NaN"===c.up&&(c.up=null),new _e(c)}async function Ge(e,t,i){const r=t.toJSON(),{geometries:a}=t;for(let u=0;u<a.length;u++){var n;(null==(n=a[u].spatialReference)?void 0:n.imageCoordinateSystem)&&(r.geometries.geometries[u].spatialReference=Xe(a[u].spatialReference))}const s=Object(De["c"])(e),o=Object(De["b"])({...s.query,f:"json",...r}),l=Object(De["a"])(o,i),{data:c}=await Object(f["default"])(s.path+"/computePixelLocation",l);return Ee.fromJSON(c)}async function Be(e,t,i){const r=await Ue(e,t,i),a=Object(De["c"])(e),{data:n}=await Object(f["default"])(a.path+"/computeStatisticsHistograms",r),{statistics:s}=n;return null!=s&&s.length&&s.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:s,histograms:n.histograms}}async function We(e,t,i){const r=await Ue(e,t,i),a=Object(De["c"])(e),{data:n}=await Object(f["default"])(a.path+"/computeHistograms",r);return{histograms:n.histograms}}async function Ke(e,t,i){var r,a,n;const o=t.toJSON();He(o),(null==(r=o.outFields)?void 0:r.length)&&(o.outFields=o.outFields.join(","));const l=null==(a=await Object(Te["a"])(t.geometry))?void 0:a[0];Object(s["k"])(l)&&(o.geometry=l.toJSON());const c=Object(De["c"])(e),u=Object(De["b"])({...c.query,f:"json",...o}),p=Object(De["a"])(u,i),{data:m}=await Object(f["default"])(c.path+"/getSamples",p),d=null==m||null==(n=m.samples)?void 0:n.map(e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map(e=>Number(e));return{...e,pixelValue:t}});return qe.fromJSON({samples:d})}async function Ze(e,t,i){const r=Object(De["c"])(e),a=t.geometry?[t.geometry]:[];return Object(Te["a"])(a).then(e=>{const a=t.toJSON(),n=e&&e[0];Object(s["k"])(n)&&(a.geometry=JSON.stringify(n.toJSON()));const o=Object(De["b"])({...r.query,f:"json",...a}),l=Object(De["a"])(o,i);return Object(f["default"])(r.path+"/identify",l)}).then(e=>Ae.fromJSON(e.data))}function Xe(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:i}=t;return null!=e?i?{icsid:e,icsns:i}:{icsid:e}:{ics:t}}return e.toJSON()}function $e(e,t){const i=Xe(e),{icsid:r,icsns:a,wkid:n}=i;return null!=r?null==a||null!=t&&t.toLowerCase().includes("/"+a.toLowerCase()+"/")?"0:"+r:JSON.stringify(i):n?n.toString():JSON.stringify(i)}i("624c");var Ye,et=i("a1d1"),tt=(i("8048"),i("7f83"),i("6655"),i("3af1")),it=(i("3760"),i("57dc")),rt=i("1219"),at=(i("521c"),i("013b"),i("69dd")),nt=(i("f7be"),i("c8d6"),i("ebb2"),i("c89c")),st=i("b745"),ot=(i("b742"),i("7949"),i("bee3")),lt=i("53d3");async function ct(e,t,i){var r,a;const n=Object(De["c"])(e),s=Object(De["b"])({...n.query,f:"json"}),o=Object(De["a"])(s,i),l=`${n.path}/${t}/info`,c=Object(f["default"])(""+l,o),u=Object(f["default"])(l+"/keyProperties",o),p=await Promise.allSettled([c,u]),m="fulfilled"===p[0].status?p[0].value.data:null,d="fulfilled"===p[1].status?p[1].value.data:null;let b=null;(null==(r=m.statistics)?void 0:r.length)&&(b=m.statistics.map(e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]})));const h=tt["a"].fromJSON(m.extent),y=Math.ceil(h.width/m.pixelSizeX-.1),g=Math.ceil(h.height/m.pixelSizeY-.1),O=h.spatialReference,j=new pe["a"]({x:m.pixelSizeX,y:m.pixelSizeY,spatialReference:O}),v=null!=(a=m.histograms)&&a.length?m.histograms:null,R=new lt["a"]({origin:m.origin,blockWidth:m.blockWidth,blockHeight:m.blockHeight,firstPyramidLevel:m.firstPyramidLevel,maximumPyramidLevel:m.maxPyramidLevel});return new Re["a"]({width:y,height:g,bandCount:m.bandCount,extent:h,spatialReference:O,pixelSize:j,pixelType:m.pixelType.toLowerCase(),statistics:b,histograms:v,keyProperties:d,storageInfo:R})}let ut=Ye=class extends N["a"]{constructor(){super(...arguments),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new Ye(Object(j["a"])({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};Object(a["a"])([Object(c["b"])({type:[String],json:{name:"angleName",write:!0}})],ut.prototype,"angleNames",void 0),Object(a["a"])([Object(c["b"])({type:pe["a"],json:{write:!0}})],ut.prototype,"point",void 0),Object(a["a"])([Object(c["b"])({type:Pe["a"],json:{write:!0}})],ut.prototype,"spatialReference",void 0),Object(a["a"])([Object(c["b"])({type:u["a"],json:{write:!0}})],ut.prototype,"rasterId",void 0),ut=Ye=Object(a["a"])([Object(p["a"])("esri.rest.support.ImageAngleParameters")],ut);const pt=ut;var mt,dt=i("658b"),bt=i("a9ab");let ht=mt=class extends N["a"]{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=Object(bt["c"])(e),t[i]=e.toJSON())}clone(){return new mt(Object(j["a"])({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};Object(a["a"])([Object(c["b"])({types:b["a"],json:{read:bt["a"]}})],ht.prototype,"geometry",void 0),Object(a["a"])([Object(m["a"])("geometry")],ht.prototype,"writeGeometry",null),Object(a["a"])([Object(c["b"])({type:ye,json:{write:!0}})],ht.prototype,"mosaicRule",void 0),Object(a["a"])([Object(c["b"])({type:E,json:{write:!0}})],ht.prototype,"renderingRule",void 0),Object(a["a"])([Object(c["b"])({type:pe["a"],json:{write:!0}})],ht.prototype,"pixelSize",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],ht.prototype,"raster",void 0),Object(a["a"])([Object(c["b"])({type:dt["a"],json:{read:{source:"time"},write:{target:"time"}}})],ht.prototype,"timeExtent",void 0),ht=mt=Object(a["a"])([Object(p["a"])("esri.rest.support.ImageHistogramParameters")],ht);const yt=ht;var ft;let gt=ft=class extends N["a"]{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=Object(bt["c"])(e),t[i]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=ye.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON()))}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=E.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}writeRenderingRule(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[i]=JSON.stringify(e.rasterFunctionDefinition))}writeRenderingRules(e,t,i){null!=e&&(t[i]=JSON.stringify(e.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(e,t,i){null!=e&&(t[i]=JSON.stringify(e))}writeTimeExtent(e,t,i){if(null!=e){const r=Object(s["k"])(e.start)?e.start.getTime():null,a=Object(s["k"])(e.end)?e.end.getTime():null;t[i]=null!=r?null!=a?`${r},${a}`:""+r:null}}clone(){return new ft(Object(j["a"])({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};Object(a["a"])([Object(c["b"])({json:{write:!0}})],gt.prototype,"geometry",void 0),Object(a["a"])([Object(m["a"])("geometry")],gt.prototype,"writeGeometry",null),Object(a["a"])([Object(c["b"])({type:ye,json:{write:!0}})],gt.prototype,"mosaicRule",null),Object(a["a"])([Object(m["a"])("mosaicRule")],gt.prototype,"writeMosaicRule",null),Object(a["a"])([Object(c["b"])({type:E,json:{write:!0}})],gt.prototype,"renderingRule",null),Object(a["a"])([Object(m["a"])("renderingRule")],gt.prototype,"writeRenderingRule",null),Object(a["a"])([Object(c["b"])({type:[E],json:{write:!0}})],gt.prototype,"renderingRules",void 0),Object(a["a"])([Object(m["a"])("renderingRules")],gt.prototype,"writeRenderingRules",null),Object(a["a"])([Object(c["b"])({type:pe["a"],json:{write:!0}})],gt.prototype,"pixelSize",void 0),Object(a["a"])([Object(m["a"])("pixelSize")],gt.prototype,"writePixelSize",null),Object(a["a"])([Object(c["b"])({type:Boolean,json:{write:!0}})],gt.prototype,"returnGeometry",void 0),Object(a["a"])([Object(c["b"])({type:Boolean,json:{write:!0}})],gt.prototype,"returnCatalogItems",void 0),Object(a["a"])([Object(c["b"])({type:Boolean,json:{write:!0}})],gt.prototype,"returnPixelValues",void 0),Object(a["a"])([Object(c["b"])({type:Number,json:{write:!0}})],gt.prototype,"maxItemCount",void 0),Object(a["a"])([Object(c["b"])({type:dt["a"],json:{write:{target:"time"}}})],gt.prototype,"timeExtent",void 0),Object(a["a"])([Object(m["a"])("timeExtent")],gt.prototype,"writeTimeExtent",null),Object(a["a"])([Object(c["b"])({json:{write:!0}})],gt.prototype,"raster",void 0),Object(a["a"])([Object(c["b"])({json:{write:!0}})],gt.prototype,"viewId",void 0),Object(a["a"])([Object(c["b"])({type:Boolean,json:{write:!0}})],gt.prototype,"processAsMultidimensional",void 0),gt=ft=Object(a["a"])([Object(p["a"])("esri.rest.support.ImageIdentifyParameters")],gt);const Ot=gt;var jt;let vt=jt=class extends N["a"]{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(e,t,i){t.geometries={geometryType:"esriGeometryPoint",geometries:e.map(e=>e.toJSON())}}clone(){return new jt({geometries:this.geometries.map(e=>e.clone()),rasterId:this.rasterId})}};Object(a["a"])([Object(c["b"])({type:[pe["a"]],json:{write:!0}})],vt.prototype,"geometries",void 0),Object(a["a"])([Object(m["a"])("geometries")],vt.prototype,"writeGeometry",null),Object(a["a"])([Object(c["b"])({type:u["a"],json:{write:!0}})],vt.prototype,"rasterId",void 0),vt=jt=Object(a["a"])([Object(p["a"])("esri.rest.support.ImagePixelLocationParameters")],vt);const Rt=vt;var wt;let St=wt=class extends N["a"]{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=Object(bt["c"])(e),t[i]=e.toJSON())}set locations(e){if(null!=e&&e.length){const t=new it["a"]({spatialReference:e[0].spatialReference});t.points=e.map(e=>[e.x,e.y]),this._set("locations",e),this.geometry=t}}clone(){return new wt(Object(j["a"])({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};Object(a["a"])([Object(c["b"])({types:b["a"],json:{read:bt["a"]}})],St.prototype,"geometry",void 0),Object(a["a"])([Object(m["a"])("geometry")],St.prototype,"writeGeometry",null),Object(a["a"])([Object(c["b"])()],St.prototype,"locations",null),Object(a["a"])([Object(c["b"])({type:String,json:{type:fe["a"].jsonValues,read:fe["a"].read,write:fe["a"].write}})],St.prototype,"interpolation",void 0),Object(a["a"])([Object(c["b"])({type:ye,json:{write:!0}})],St.prototype,"mosaicRule",void 0),Object(a["a"])([Object(c["b"])({type:[String],json:{write:!0}})],St.prototype,"outFields",void 0),Object(a["a"])([Object(c["b"])({type:pe["a"],json:{write:!0}})],St.prototype,"pixelSize",void 0),Object(a["a"])([Object(c["b"])({type:String,json:{write:!0}})],St.prototype,"raster",void 0),Object(a["a"])([Object(c["b"])({type:Boolean,json:{write:!0}})],St.prototype,"returnFirstValueOnly",void 0),Object(a["a"])([Object(c["b"])({type:Number,json:{write:!0}})],St.prototype,"sampleDistance",void 0),Object(a["a"])([Object(c["b"])({type:Number,json:{write:!0}})],St.prototype,"sampleCount",void 0),Object(a["a"])([Object(c["b"])({type:Number,json:{write:!0}})],St.prototype,"sliceId",void 0),Object(a["a"])([Object(c["b"])({type:dt["a"],json:{read:{source:"time"},write:{target:"time"}}})],St.prototype,"timeExtent",void 0),St=wt=Object(a["a"])([Object(p["a"])("esri.rest.support.ImageSampleParameters")],St);const xt=St;var Ft=i("2616");const It=v["a"].getLogger("esri.layers.mixins.ArcGISImageService"),Nt=Object(O["b"])()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Tt=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Dt=Object(c["a"])(u["i"],{min:0,max:255});function Pt(e){var t;if(!e)return null;const i=null==(t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi))?void 0:t.map(e=>e.replace('"rasterFunction":"',"").replace('"',""));return i?i.join("/"):null}const Ct=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._defaultServiceMosaicRule=null,this._serviceSourceType=null,this._serviceSupportsMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.symbolizer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new ge({layer:this}))}readDefaultServiceMosaicRule(e,t){return this._serviceSupportsMosaicRule?ye.fromJSON(t):null}readServiceSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||Object(s["k"])(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||Object(s["k"])(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(e=>"number"==typeof e))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){null!=e&&"lerc"!==this.format&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}get fieldsIndex(){return this.fields?new je["a"](this.fields):null}set format(e){e&&Tt.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=ye.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const i=e||t.mosaicRule;return i?ye.fromJSON(i):this._isMosaicRuleSupported(t)?ye.fromJSON(t):null}writeMosaicRule(e,t,i){let r=this.mosaicRule;const a=this.definitionExpression;r?a&&a!==r.where&&(r=r.clone(),r.where=a):a&&(r=new ye({where:a})),this._isValidCustomizedMosaicRule(r)&&(t[i]=r.toJSON())}writeNoData(e,t,i){null!=e&&"number"==typeof e&&(t[i]=Dt(e))}readObjectIdField(e,t){if(!e){const i=t.fields.filter(e=>"esriFieldTypeOID"===e.type||"oid"===e.type);e=i&&i[0]&&i[0].name}return e}get parsedUrl(){return this.url?Object(w["M"])(this.url):null}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,i){var r,a;const n=null==t||null==(r=t.layerDefinition)||null==(a=r.drawingInfo)?void 0:a.renderer,s=Object(y["b"])(n,i);return null==s?null:("vector-field"===s.type&&t.symbolTileSize&&!n.symbolTileSize&&(s.symbolTileSize=t.symbolTileSize),G(s)||It.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),s)}writeRenderer(e,t,i){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new Oe["a"]({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new Oe["a"]({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new Oe["a"]({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let a=this.fields?Object(j["a"])(this.fields):[];a.push(i),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&a.push(t),this.version>=10.4&&Object(s["k"])(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some(e=>"none"===e.name.toLowerCase())&&a.push(r),Object(s["k"])(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter(e=>"none"!==e.name.toLowerCase()).forEach(e=>{a.push(new Oe["a"]({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))}),this._isVectorDataSet()&&(a.push(new Oe["a"]({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),a.push(new Oe["a"]({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const n=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(n&&n.length>0){const t=n.filter(e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase()).map(t=>{const i=Object(j["a"])(t);return i.name=e+t.name,i});a=a.concat(t)}return a}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=E.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const i=t.rasterFunctionInfos;return t.renderingRule||i&&i.length&&"None"!==i[0].name?this._isRFTJson(t.renderingRule)?E.fromJSON({rasterFunctionDefinition:t.renderingRule}):E.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,i){const r=e.toJSON();r.rasterFunctionDefinition?t[i]=r.rasterFunctionDefinition:t[i]=r}readSpatialReference(e,t){const i=e||t.extent.spatialReference;return i?Pe["a"].fromJSON(i):null}readPixelType(e){return Nt.fromJSON(e)||e}writePixelType(e,t,i){(Object(s["j"])(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[i]=Nt.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let i=e;if(!this._isPicture()&&this.renderer&&this.symbolizer&&!this.pixelFilter){const r=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),a=this._rasterJobHandler.instance,{bandIds:n}=this;if(a){r&&(this.symbolizer.bind(),await a.updateSymbolizer(this.symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const s=await a.symbolize({bandIds:n,...e},t);i={extent:e.extent,pixelBlock:s}}else i={extent:e.extent,pixelBlock:this.symbolizer.symbolize({bandIds:n,...e})}}return i}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeAngles)throw new g["a"]("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=Object(u["d"])(pt,e).clone(),Qe(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputePixelLocation)throw new g["a"]("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=Object(u["d"])(Rt,e).clone(),Ge(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeHistograms)throw new g["a"]("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=Object(u["d"])(yt,e).clone();const{raster:i,mosaicRule:r,renderingRule:a}=this;return a&&null==e.renderingRule&&(e.renderingRule=a),r&&null==e.mosaicRule&&(e.mosaicRule=r),i&&null==e.raster&&(e.raster=i),We(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new g["a"]("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=Object(u["d"])(yt,e).clone();const{raster:i,mosaicRule:r,renderingRule:a}=this;return a&&null==e.renderingRule&&(e.renderingRule=a),r&&null==e.mosaicRule&&(e.mosaicRule=r),i&&null==e.raster&&(e.raster=i),Be(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return Object(s["k"])(t)?t.get(e):void 0}getFieldDomain(e,t){const i=this.getField(e);return i?i.domain:null}fetchImage(e,t,i,r={}){if(null==e||null==t||null==i)return Promise.reject(new g["a"]("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const a=this.renderer||this.symbolizer?this.generateRasterInfo(this.renderingRule,{signal:r.signal}):null;return Object(l["s"])(a).then(a=>{a&&(this.rasterInfo=a);const n={imageServiceParameters:this.getExportImageServiceParameters(e,t,i,r.timeExtent),imageProps:{extent:e,width:t,height:i,format:this.format},requestAsImageElement:r.requestAsImageElement&&!this.pixelFilter||!1,signal:r.signal};return this._requestArrayBuffer(n)})}fetchKeyProperties(e){return Object(f["default"])(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?null==e?void 0:e.renderingRule:null})}).then(e=>e.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new g["a"]("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):Object(f["default"])(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?null==e?void 0:e.renderingRule:null})}).then(e=>Ve["default"].fromJSON(e.data))}getCatalogItemRasterInfo(e,t){const i={...t,query:this._getQueryParams()};return ct(this.parsedUrl.path,e,i)}async getCatalogItemICSInfo(e,t){const{data:i}=await Object(f["default"])(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),r=i&&i.ics;if(!r)return;let a=null;try{a=(await Object(f["default"])(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!a||!a.spatialReference)return{ics:r,icsToPixelTransform:null,icsExtent:null,northDirection:null};const n=this.version>=10.7?Object(f["default"])(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(e=>e.data).catch(()=>({})):{},s=a.spatialReference,o={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[a]}),inSR:s.wkid||JSON.stringify(s),outSR:"0:"+e},l=Object(f["default"])(this.parsedUrl.path+"/project",{query:this._getQueryParams(o),...t}).then(e=>e.data).catch(()=>({})),c=5,u=(a.xmin+a.xmax)/2,p=(a.ymax-a.ymin)/(c+1),m=a.ymin+p,d=[];for(let f=0;f<c;f++)d.push({x:u,y:m+p*f});const b={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:d}),inSR:s.wkid||JSON.stringify(s),outSR:"0:"+e},h=Object(f["default"])(this.parsedUrl.path+"/project",{query:this._getQueryParams(b),...t}).then(e=>e.data).catch(()=>({})),y=await Promise.all([n,l,h]);let g=y[0].ipxf;if(null==g){var O,j,v;const e=null==(O=r.geodataXform)?void 0:O.xf_0;"topup"===(null==e||null==(j=e.name)?void 0:j.toLowerCase())&&6===(null==e||null==(v=e.coefficients)?void 0:v.length)&&(g={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const R=tt["a"].fromJSON(y[1]&&y[1].geometries&&y[1].geometries[0]);R&&(R.spatialReference=new Pe["a"]({wkid:0,imageCoordinateSystem:r}));const w=y[2].geometries?y[2].geometries.filter(e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y):[],S=w.length;if(S<3)return{ics:r,icsToPixelTransform:g,icsExtent:R,northDirection:null};let x=0,F=0,I=0,N=0;for(let f=0;f<S;f++)x+=w[f].x,F+=w[f].y,I+=w[f].x*w[f].x,N+=w[f].x*w[f].y;const T=(S*N-x*F)/(S*I-x*x);let D=0;const P=w[c-1].x>w[0].x,C=w[c-1].y>w[0].y;return T===1/0?D=C?90:270:0===T?D=P?0:180:T>0?D=P?180*Math.atan(T)/Math.PI:180*Math.atan(T)/Math.PI+180:T<0&&(D=C?180+180*Math.atan(T)/Math.PI:360+180*Math.atan(T)/Math.PI),{ics:r,icsToPixelTransform:g,icsExtent:R,northDirection:D}}async generateRasterInfo(e,t){var i;if((!e||"none"===(null==e||null==(i=e.functionName)?void 0:i.toLowerCase())||this._isVectorFieldResampleFunction(e))&&Object(s["k"])(this.serviceRasterInfo))return this.serviceRasterInfo;const r=Pt(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const a=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=a;try{return await a}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,i,r){var a;e=e.clone().shiftCentralMeridian();const n=$e(e.spatialReference,this.parsedUrl.path);Object(s["k"])(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const o=this.exportImageServiceParameters.toJSON(),{bandIds:l,noData:c}=o;let{renderingRule:u}=o;const p=null==(a=this.renderingRule)?void 0:a.rasterFunctionDefinition,m=!this.renderer||"raster-stretch"===this.renderer.type;if(null!=l&&l.length&&this._hasRenderingRule(this.renderingRule)&&!p&&m){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:l}};if("Stretch"===u.rasterFunction)e.rasterFunctionArguments.Raster=u.rasterFunctionArguments.Raster,u.rasterFunctionArguments.Raster=e;else if("Colormap"===u.rasterFunction){const t=u.rasterFunctionArguments.Raster;"Stretch"===(null==t?void 0:t.rasterFunction)?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,u.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=u,u=e;o.bandIds=void 0}else o.bandIds=null==l?void 0:l.join(",");c instanceof Array&&c.length>0&&(o.noData=c.join(","));const d=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,r):null;o.mosaicRule=d&&JSON.stringify(d),o.renderingRule=this._getRenderingRuleString(E.fromJSON(u));const b={};if(r){const{start:e,end:t}=r.toJSON();e&&t&&e===t?b.time=""+e:null==e&&null==t||(b.time=`${null==e?"null":e},${null==t?"null":t}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:n,imageSR:n,size:t+","+i,...o,...b}}async getSamples(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsGetSamples)throw new g["a"]("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=Object(u["d"])(xt,e).clone();const{raster:i}=this;return i&&null==e.raster&&(e.raster=i),Ke(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new g["a"]("imagery-layer:query-rasters","query operation is not supported on the input image service");e=Object(u["d"])(Ot,e).clone();const{raster:i,mosaicRule:r,renderingRule:a}=this;if(a&&null==e.renderingRule&&(e.renderingRule=a),r&&null==e.mosaicRule){const t=this._combineMosaicRuleWithTimeExtent(r,e.timeExtent);e.mosaicRule=Object(s["r"])(t)}return i&&null==e.raster&&(e.raster=i),Ze(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new at["a"];return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),Object(et["a"])(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),Object(st["a"])(this.url,e,t)}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),Object(nt["a"])(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new g["a"]("imagery-layer: query-visible-rasters","missing query parameter");const{pixelSize:i,returnDomainValues:r,returnTopmostRaster:a,showNoDataRecords:n}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,c=null;const u="raster.servicepixelvalue",p=this.rasterFunctionNamesIndex;if(Object(s["k"])(e.outFields)&&(o=e.outFields.some(e=>!e.toLowerCase().includes(u)),this.version>=10.4)){const t=e.outFields.filter(e=>e.toLowerCase().includes(u)&&e.length>u.length).map(e=>{const t=e.slice(u.length+1);return[this._updateRenderingRulesFunctionName(t,p),t]});l=t.map(e=>new E({functionName:e[0]})),c=t.map(e=>e[1]),0===l.length?this.renderingRule?(l.push(this.renderingRule),c.push(this.renderingRule.functionName)):l=null:this.renderingRule&&!l.some(e=>e.functionName===this.renderingRule.functionName)&&(l.push(this.renderingRule),c.push(this.renderingRule.functionName))}const m=Object(s["j"])(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),d=e.timeExtent||this.timeExtent,b=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,d),h=this._getQueryParams({geometry:e.geometry,timeExtent:d,mosaicRule:b,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:i,returnCatalogItems:o,returnGeometry:m,raster:this.raster,maxItemCount:a?1:null});delete h.f;const y=new Ot(h);try{var f,O;await this.generateRasterInfo(this.renderingRule);const i=await Ze(this.url,y,{signal:null==t?void 0:t.signal,query:{...this.customParameters}}),a=e.outFields,l=i.value.toLowerCase().includes("nodata");if(!o||m||null==i||null==(f=i.catalogItems)||!f.features.length||!n&&l)return this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:c,showNoDataRecords:n,templateFields:a});const u=this.objectIdField||"ObjectId",p=i.catalogItems.features,d=p.map(e=>{var t;return null==(t=e.attributes)?void 0:t[u]}),b=new at["a"]({objectIds:d,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[u]}),h=await this.queryRasters(b);return null!=h&&null!=(O=h.features)&&O.length&&h.features.forEach(t=>{p.forEach(i=>{i.attributes[u]===t.attributes[u]&&(i.geometry=new rt["a"](t.geometry),Object(s["k"])(e.outSpatialReference)&&(i.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:c,showNoDataRecords:n,templateFields:a})}catch{throw new g["a"]("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const i=Object(f["default"])(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.statistics}),r=Object(f["default"])(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),a=await Promise.all([i,r]);return a[0]&&a[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:a[0]||null,histograms:a[1]||null}}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):Object(Ft["a"])(e.meshType,e.simulationSettings,e.flowData,Object(s["k"])(t.signal)?t.signal:(new AbortController).signal)}async _fetchService(e){await this._fetchServiceInfo(e),Object(s["k"])(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,i=Object(s["k"])(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):Object(ot["a"])(this.parsedUrl.path,t,{signal:e,query:this._getQueryParams()}).then(e=>(this._set("serviceRasterInfo",e),e)),r=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:e}):null,a=this._getRasterFunctionInfos();return Promise.all([i,r,a]).then(e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),It.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.own(Object(R["f"])(()=>this.renderingRule,e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then(e=>{e&&(this.rasterInfo=e)})}));const{serviceRasterInfo:t}=this;Object(s["k"])(t)&&t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)})}_combineMosaicRuleWithTimeExtent(e,t){var i;const r=this.timeInfo;if(Object(s["j"])(e)||Object(s["j"])(this.multidimensionalInfo)||Object(s["j"])(t)||Object(s["j"])(null==r?void 0:r.startField))return e;const{startField:a}=r,n=this.multidimensionalInfo.variables.some(e=>e.dimensions.some(e=>e.name===a))?a:"StdTime";if(e=e.clone(),"mosaic-dataset"===this._serviceSourceType)return e.multidimensionalDefinition=null==(i=e.multidimensionalDefinition)?void 0:i.filter(e=>e.dimensionName!==n),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const o=e.multidimensionalDefinition.filter(e=>e.dimensionName===n),l=Object(s["k"])(t.start)?t.start.getTime():null,c=Object(s["k"])(t.end)?t.end.getTime():null,u=null==l||null==c||l===c,p=u?[l||c]:[[l,c]],m=this.version>=10.8;if(o.length)o.forEach(e=>{e.dimensionName===n&&(m?(e.dimensionName=null,e.isSlice=null,e.values=null):(e.isSlice=u,e.values=p))});else if(!m){const t=e.multidimensionalDefinition.filter(e=>null!=e.variableName&&null==e.dimensionName);t.length?t.forEach(e=>{e.dimensionName=n,e.isSlice=u,e.values=p}):e.multidimensionalDefinition.push(new I["a"]({variableName:"",dimensionName:n,isSlice:u,values:p}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return Object(s["j"])(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(e=>!(!e.variableName&&!e.dimensionName)),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this._serviceSourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){var i;if(await this._fetchCapabilities(null==(i=t)?void 0:i.signal),!this.capabilities.operations.supportsQuery)throw new g["a"]("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=Object(s["k"])(e)?Object(u["d"])(at["a"],e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new we["a"];this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>null),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:i}=this;return"unique-value"===e.type&&this._hasRenderingRule(i)&&1===t.bandCount&&["u8","s8"].includes(t.pixelType)||Object(Ie["d"])(this.rasterInfo).includes(this.renderer.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let i=this.sourceJSON;if(!i){const{data:t,ssl:r}=await Object(f["default"])(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});i=t,this.sourceJSON=i,r&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null==(t=i.capabilities)?void 0:t.toLowerCase().split(",").map(e=>e.trim()).indexOf("tilesonly"))>-1)throw new g["a"]("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(i,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:(null==(t=e.fields)?void 0:t.length)>0}_isMosaicRuleSupported(e){var t;if(!e)return!1;const i=this._isMosaicDataset(e),r=e.currentVersion>=10.71&&e.hasMultidimensions&&e.timeInfo&&!(e.objectIdField&&(null==(t=e.fields)?void 0:t.length)>1);return i||r}_isVectorFieldResampleFunction(e){if(Object(s["j"])(e))return!1;const{functionName:t,functionArguments:i}=e,r="resample"===(null==t?void 0:t.toLowerCase()),a=(null==i?void 0:i.ResampleType)||(null==i?void 0:i.resampleType);return r&&(7===a||10===a)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){if(!this._isPicture()&&!this.pixelFilter||this._isVectorDataSet()){var t,i;if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=Object(Ie["b"])(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=Object(Ie["a"])(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(t=this.mosaicRule)||null==(i=t.multidimensionalDefinition)?void 0:i[0].variableName}));const r=Object(Ie["e"])(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=r,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new Ne["a"]({rendererJSON:r,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:Object(s["k"])(e.pixelBlock)&&e.pixelBlock.clone()}}_getQueryParams(e){Object(s["k"])(null==e?void 0:e.renderingRule)&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:i}=this;return{raster:t,viewId:i,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...null==e?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,i){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):Object(xe["a"])(e,t,i)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;return this.serviceRasterInfo?t:t&&this.version>=10.3?1===t.length&&"none"===t[0].name.toLowerCase()?t:null==(i=(await Object(f["default"])(this.parsedUrl.path+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)?void 0:i.rasterFunctionInfos:null;var i}async _requestArrayBuffer(e){var t;const{imageProps:i,requestAsImageElement:r,signal:a}=e;if(r&&!this.pixelFilter&&(null==(t=i.format)?void 0:t.indexOf("png"))>-1)return{imageElement:(await Object(f["default"])(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:a})).data,params:i};const n=this._initJobHandler(),s=Object(f["default"])(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:a}),o=(await Promise.all([s,n]))[0].data,l=i.format||"jpgpng";let c=l;if("bsq"!==c&&"bip"!==c&&(c=Object(xe["b"])(o)),!c)throw new g["a"]("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(o)));const u={signal:a},p="gif"===l||"bmp"===l||l.includes("png")&&("png"===c||"jpg"===c)?Object(xe["a"])(o,{useCanvas:!0,...i},u):this._decodePixelBlock(o,{width:i.width,height:i.height,planes:null,pixelType:null,noDataValue:null,format:l},u);return{pixelData:{pixelBlock:await p,extent:i.extent},params:i}}_generateRasterInfo(e,t){const i={...t,query:this._getQueryParams()};return Object(ot["b"])(this.parsedUrl.path,e,i)}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify(null==(t=this._defaultServiceMosaicRule)?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=Object(Se["b"])(e);if(Object(s["k"])(t)&&t.length>0){this.mosaicRule=this.mosaicRule||new ye;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const i=e.value,{templateRRFunctionNames:r,showNoDataRecords:a,returnDomainValues:n,templateFields:o}=t,l=e.processedValues;let c=e.catalogItems&&e.catalogItems.features,u=e.properties&&e.properties.Values&&e.properties.Values.map(e=>e.replace(/ /gi,", "))||[];const p=this.objectIdField||"ObjectId",m="string"==typeof i&&i.toLowerCase().includes("nodata"),d=[];if(i&&!c&&!m){const e={};e[p]=0,u=[i],c=[new h["a"](this.fullExtent,null,e)]}if(!c)return[];let b,y,f;this._updateResponseFieldNames(c,o),m&&!a&&(c=[]);for(let h=0;h<c.length;h++){if(b=c[h],null!=i){if(y=u[h],f=this.renderingRule&&l&&l.length>0&&r&&r.length>0&&r.includes(this.renderingRule.functionName)?l[r.indexOf(this.renderingRule.functionName)]:i,"nodata"===y.toLowerCase()&&!a)continue;const e="Raster.ItemPixelValue",t="Raster.ServicePixelValue";b.attributes[e]=y,b.attributes[t]=f,this._updateFeatureWithMagDirValues(b,y);const n=this.fields&&this.fields.length>0;let o=this.renderingRule&&Object(s["k"])(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?n?y:i:f;this.renderingRule||(o=n?y:i),this._updateFeatureWithRasterAttributeTableValues(b,o)}if(b.sourceLayer=b.layer=this,n&&this._updateFeatureWithDomainValues(b),r&&l&&r.length===l.length)for(let e=0;e<r.length;e++){const t="Raster.ServicePixelValue."+r[e];b.attributes[t]=l[e]}d.push(c[h])}return d}_updateFeatureWithRasterAttributeTableValues(e,t){const i=this.rasterInfo&&this.rasterInfo.attributeTable||Object(s["k"])(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,r=i&&i.features;if(!r)return;const a=i.fields,n=a.map(e=>e.name).filter(e=>"value"===e.toLowerCase()),o=n&&n[0];if(!o)return;const l=r.filter(e=>e.attributes[o]===(null!=t?parseInt(t,10):null));l&&l[0]&&a.forEach(t=>{const i=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[i]=l[0].attributes[t.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const i=t.split(/,\s*/).map(e=>parseFloat(e)),r=i.map(e=>[e]),a=i.map(e=>({minValue:e,maxValue:e,noDataValue:null})),n=new ve["a"]({height:1,width:1,pixelType:"f32",pixels:r,statistics:a});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:n,extent:new tt["a"](0,0,0,0,this.spatialReference)});const s="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[n.pixels[0][0],n.pixels[1][0]]:Object(Fe["j"])([n.pixels[0][0],n.pixels[1][0]]);e.attributes["Raster.Magnitude"]=s[0],e.attributes["Raster.Direction"]=s[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(e=>e.domain&&"coded-value"===e.domain.type);null!=t&&t.forEach(t=>{const i=e.attributes[t.name];if(null!=i){const r=t.domain.codedValues.find(e=>e.code===i);r&&(e.attributes[t.name]=r.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const i=this.fieldsIndex;Object(s["j"])(i)||e.forEach(e=>{if(e&&e.attributes)for(const r of t)if(i.has(r)){const t=i.get(r).name;t!==r&&(e.attributes[r]=e.attributes[t],delete e.attributes[t])}})}_getRenderingRuleString(e){if(this._hasRenderingRule(e)){var t;let i=e.toJSON();return i=null!=(t=i.rasterFunctionDefinition)?t:i,(i.thumbnail||i.thumbnailEx)&&(i.thumbnail=i.thumbnailEx=null),JSON.stringify(i)}return null}_hasRenderingRule(e){return e&&e.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const i=e.toLowerCase().replace(/ /gi,"_");return t.has(i)?t.get(i):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(e=>e.trim()):["image","catalog"],{currentVersion:i,advancedQueryCapabilities:r,maxRecordCount:a}=e,n=t.includes("image"),s="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:t.includes("mensuration")&&o,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:i>=10.2&&n,supportsProject:i>=10.3&&n,supportsComputeStatisticsHistograms:i>=10.4&&n,supportsQueryBoundary:i>=10.6&&n,supportsCalculateVolume:i>=10.7&&s,supportsComputePixelLocation:i>=10.7&&t.includes("catalog"),supportsComputeAngles:i>=10.91,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:a,maxRecordCountFactor:void 0,supportsStatistics:!(null==r||!r.supportsStatistics),supportsOrderBy:!(null==r||!r.supportsOrderBy),supportsDistinct:!(null==r||!r.supportsDistinct),supportsPagination:!(null==r||!r.supportsPagination),supportsStandardizedQueriesOnly:!(null==r||!r.useStandardizedQueries),supportsPercentileStatistics:!(null==r||!r.supportsPercentileStatistics),supportsCentroid:!(null==r||!r.supportsReturningGeometryCentroid),supportsDistance:!(null==r||!r.supportsQueryWithDistance),supportsExtent:!(null==r||!r.supportsReturningQueryExtent),supportsGeometryProperties:!(null==r||!r.supportsReturningGeometryProperties),supportsHavingClause:!(null==r||!r.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!(null==r||!r.supportsDefaultSR),supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};return Object(a["a"])([Object(c["b"])()],t.prototype,"_functionRasterInfos",void 0),Object(a["a"])([Object(c["b"])()],t.prototype,"_rasterJobHandler",void 0),Object(a["a"])([Object(c["b"])({dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"_defaultServiceMosaicRule",void 0),Object(a["a"])([Object(x["a"])("_defaultServiceMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultServiceMosaicRule",null),Object(a["a"])([Object(c["b"])()],t.prototype,"_cachedRendererJson",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0})],t.prototype,"_serviceSourceType",void 0),Object(a["a"])([Object(x["a"])("_serviceSourceType",["serviceSourceType","fields"])],t.prototype,"readServiceSourceType",null),Object(a["a"])([Object(c["b"])({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),Object(a["a"])([Object(x["a"])("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),Object(a["a"])([Object(c["b"])()],t.prototype,"rasterAttributeTableFieldPrefix",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0})],t.prototype,"rasterFunctionNamesIndex",null),Object(a["a"])([Object(c["b"])()],t.prototype,"adjustAspectRatio",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0}),Object(S["a"])("serviceRasterInfo.bandCount")],t.prototype,"bandCount",void 0),Object(a["a"])([Object(c["b"])({type:[u["a"]],json:{write:!0}})],t.prototype,"bandIds",void 0),Object(a["a"])([Object(x["a"])("bandIds")],t.prototype,"readBandIds",null),Object(a["a"])([Object(c["b"])({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),Object(a["a"])([Object(x["a"])("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),Object(a["a"])([Object(c["b"])({type:Number})],t.prototype,"compressionQuality",void 0),Object(a["a"])([Object(m["a"])("compressionQuality")],t.prototype,"writeCompressionQuality",null),Object(a["a"])([Object(c["b"])({type:Number})],t.prototype,"compressionTolerance",void 0),Object(a["a"])([Object(m["a"])("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),Object(a["a"])([Object(c["b"])({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),Object(a["a"])([Object(c["b"])({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),Object(a["a"])([Object(c["b"])()],t.prototype,"rasterInfo",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0,type:[Oe["a"]]})],t.prototype,"fields",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0})],t.prototype,"fieldsIndex",null),Object(a["a"])([Object(c["b"])({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),Object(a["a"])([Object(x["a"])("service","format",["serviceDataType"])],t.prototype,"readFormat",null),Object(a["a"])([Object(c["b"])({type:tt["a"]})],t.prototype,"fullExtent",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),Object(a["a"])([Object(c["b"])({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),Object(a["a"])([Object(c["b"])({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),Object(a["a"])([Object(c["b"])({type:String,json:{type:fe["a"].jsonValues,read:fe["a"].read,write:fe["a"].write}})],t.prototype,"interpolation",void 0),Object(a["a"])([Object(c["b"])()],t.prototype,"minScale",void 0),Object(a["a"])([Object(x["a"])("service","minScale")],t.prototype,"readMinScale",null),Object(a["a"])([Object(c["b"])()],t.prototype,"maxScale",void 0),Object(a["a"])([Object(x["a"])("service","maxScale")],t.prototype,"readMaxScale",null),Object(a["a"])([Object(c["b"])({type:ye})],t.prototype,"mosaicRule",null),Object(a["a"])([Object(x["a"])("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),Object(a["a"])([Object(m["a"])("mosaicRule")],t.prototype,"writeMosaicRule",null),Object(a["a"])([Object(c["b"])({readOnly:!0}),Object(S["a"])("serviceRasterInfo.multidimensionalInfo")],t.prototype,"multidimensionalInfo",void 0),Object(a["a"])([Object(c["b"])({json:{type:u["a"]}})],t.prototype,"noData",void 0),Object(a["a"])([Object(m["a"])("noData")],t.prototype,"writeNoData",null),Object(a["a"])([Object(c["b"])({type:String,json:{type:fe["b"].jsonValues,read:fe["b"].read,write:fe["b"].write}})],t.prototype,"noDataInterpretation",void 0),Object(a["a"])([Object(c["b"])({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),Object(a["a"])([Object(x["a"])("objectIdField")],t.prototype,"readObjectIdField",null),Object(a["a"])([Object(c["b"])({})],t.prototype,"geometryType",void 0),Object(a["a"])([Object(c["b"])({})],t.prototype,"typeIdField",void 0),Object(a["a"])([Object(c["b"])({})],t.prototype,"types",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0})],t.prototype,"parsedUrl",null),Object(a["a"])([Object(c["b"])({readOnly:!0}),Object(S["a"])("serviceRasterInfo.pixelSize.x")],t.prototype,"pixelSizeX",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0}),Object(S["a"])("serviceRasterInfo.pixelSize.y")],t.prototype,"pixelSizeY",void 0),Object(a["a"])([Object(c["b"])({type:Function})],t.prototype,"pixelFilter",void 0),Object(a["a"])([Object(c["b"])()],t.prototype,"raster",void 0),Object(a["a"])([Object(c["b"])()],t.prototype,"viewId",void 0),Object(a["a"])([Object(c["b"])({types:y["a"],json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:y["c"],name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"renderer",null),Object(a["a"])([Object(x["a"])("renderer")],t.prototype,"readRenderer",null),Object(a["a"])([Object(m["a"])("renderer")],t.prototype,"writeRenderer",null),Object(a["a"])([Object(c["b"])()],t.prototype,"symbolizer",void 0),Object(a["a"])([Object(c["b"])(F["i"])],t.prototype,"opacity",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0}),Object(S["a"])("serviceRasterInfo.attributeTable")],t.prototype,"rasterAttributeTable",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0})],t.prototype,"rasterFields",null),Object(a["a"])([Object(c["b"])({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),Object(a["a"])([Object(c["b"])({type:E})],t.prototype,"renderingRule",null),Object(a["a"])([Object(x["a"])("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),Object(a["a"])([Object(m["a"])("renderingRule")],t.prototype,"writeRenderingRule",null),Object(a["a"])([Object(c["b"])()],t.prototype,"serviceDataType",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0,type:Pe["a"]})],t.prototype,"spatialReference",void 0),Object(a["a"])([Object(x["a"])("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),Object(a["a"])([Object(c["b"])({json:{type:Nt.jsonValues}})],t.prototype,"pixelType",void 0),Object(a["a"])([Object(x["a"])("pixelType")],t.prototype,"readPixelType",null),Object(a["a"])([Object(m["a"])("pixelType")],t.prototype,"writePixelType",null),Object(a["a"])([Object(c["b"])({constructOnly:!0,type:Re["a"]})],t.prototype,"serviceRasterInfo",void 0),Object(a["a"])([Object(c["b"])()],t.prototype,"sourceJSON",void 0),Object(a["a"])([Object(c["b"])(F["o"])],t.prototype,"url",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0})],t.prototype,"version",void 0),Object(a["a"])([Object(x["a"])("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=Object(a["a"])([Object(p["a"])("esri.layers.mixins.ArcGISImageService")],t),t};var _t=i("3d59"),Vt=i("997b"),Mt=i("8b28"),At=i("b911"),Jt=i("0db5"),Et=i("8e17"),kt=i("5a62"),zt=i("601a"),Lt=i("2546"),qt=i("f51b");let Ht=class extends(Object(Vt["a"])(Object(zt["a"])(Object(Et["a"])(Object(kt["a"])(Object(At["a"])(Object(Jt["a"])(Ct(Object(Mt["a"])(Object(_t["a"])(Object(o["a"])(d["a"]))))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(s["k"])(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(l["o"]).then(()=>this._fetchService(t))),Promise.resolve(this)}writeOperationalLayerType(e,t,i){var r;const a="vector-field"===(null==(r=this.renderer)?void 0:r.type);t[i]=a?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const t=this.rasterFields,i=this.title,r=new Set;let a=!1,n=!1;this.capabilities&&(a=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,n="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const s=new Set;a&&s.add("raster.itempixelvalue");for(const o of t){const e=o.name.toLowerCase();s.has(e)||e.includes("raster.servicepixelvalue.")||r.add(o.name)}return n&&r.add("raster.magnitude").add("raster.direction"),Object(qt["a"])({fields:t,title:i},{...e,visibleFieldNames:r})}queryFeatures(e,t){return this.queryRasters(e,t).then(e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e})}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}serviceSupportsSpatialReference(e){return Object(Lt["a"])(this,e)}};Object(a["a"])([Object(c["b"])(F["e"])],Ht.prototype,"legendEnabled",void 0),Object(a["a"])([Object(c["b"])({type:["show","hide"]})],Ht.prototype,"listMode",void 0),Object(a["a"])([Object(c["b"])({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Ht.prototype,"isReference",void 0),Object(a["a"])([Object(c["b"])({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Ht.prototype,"operationalLayerType",void 0),Object(a["a"])([Object(m["a"])("web-map","operationalLayerType")],Ht.prototype,"writeOperationalLayerType",null),Object(a["a"])([Object(c["b"])(F["k"])],Ht.prototype,"popupEnabled",void 0),Object(a["a"])([Object(c["b"])({type:n["a"],json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Ht.prototype,"popupTemplate",void 0),Object(a["a"])([Object(c["b"])({readOnly:!0})],Ht.prototype,"defaultPopupTemplate",null),Object(a["a"])([Object(c["b"])({readOnly:!0,json:{read:!1}})],Ht.prototype,"type",void 0),Ht=Object(a["a"])([Object(p["a"])("esri.layers.ImageryLayer")],Ht);const Ut=Ht}}]);
//# sourceMappingURL=chunk-91c026ee.df26dd48.js.map