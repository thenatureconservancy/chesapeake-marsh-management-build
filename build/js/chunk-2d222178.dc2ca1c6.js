(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d222178"],{ccac:function(e,r,t){"use strict";t.r(r),t.d(r,"createLabelFunction",(function(){return p})),t.d(r,"formatField",(function(){return b}));var n=t("ce50"),a=t("e92d"),u=t("4653"),l=t("21e2"),i=t("c1da"),o=t("7b39"),c=t("82fa");const s=a["a"].getLogger("esri.layers.support.labelFormatUtils"),d={type:"simple",evaluate:()=>null},f={getAttribute:(e,r)=>e.field(r)};async function p(e,r,a){if(!e||!e.symbol)return d;const u=e.where,l=Object(o["b"])(e),i=u?await Promise.resolve().then(t.bind(null,"66a2")):null;let p;if("arcade"===l.type){const e=await Object(c["c"])(l.expression,a,r);p={type:"arcade",evaluate(r){try{const t=e.evaluate({$feature:"attributes"in r?e.repurposeFeature(r):r});if(null!=t)return t.toString()}catch(a){s.error(new n["a"]("arcade-expression-error","Encountered an error when evaluating label expression for feature",{feature:r,expression:l}))}return null},needsHydrationToEvaluate:()=>null==Object(o["e"])(l.expression)}}else p={type:"simple",evaluate:e=>l.expression.replace(/{[^}]*}/g,t=>{const n=t.slice(1,-1),a=r.get(n);if(!a)return t;let u=null;return"attributes"in e?e&&e.attributes&&(u=e.attributes[a.name]):u=e.field(a.name),null==u?"":b(u,a)})};if(u){let e;try{e=i.WhereClause.create(u,r)}catch(w){return s.error(new n["a"]("bad-where-clause","Encountered an error when evaluating where clause, ignoring",{where:u,error:w})),d}const t=p.evaluate;p.evaluate=r=>{const a="attributes"in r?void 0:f;try{if(e.testFeature(r,a))return t(r)}catch(w){s.error(new n["a"]("bad-where-clause","Encountered an error when evaluating where clause for feature",{where:u,feature:r,error:w}))}return null}}return p}function b(e,r){if(null==e)return"";const t=r.domain;if(t)if("codedValue"===t.type||"coded-value"===t.type){const r=e;for(const e of t.codedValues)if(e.code===r)return e.name}else if("range"===t.type){const r=+e,n="range"in t?t.range[0]:t.minValue,a="range"in t?t.range[1]:t.maxValue;if(n<=r&&r<=a)return t.name}let n=e;return"date"===r.type||"esriFieldTypeDate"===r.type?n=Object(u["b"])(n,Object(u["a"])("short-date")):Object(i["q"])(r)&&(n=Object(l["b"])(+n)),n||""}}}]);
//# sourceMappingURL=chunk-2d222178.dc2ca1c6.js.map