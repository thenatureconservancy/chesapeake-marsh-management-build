(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-5e1a8e82"],{"0722":function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));n("c120");var i=n("b2b2"),a=n("1c92"),o=n("8c71"),r=n("738e"),s=n("19db"),l=n("7c4b"),c=n("c8dd"),u=n("7ce4"),f=n("d17d"),d=n("0fa6");class m extends l["a"]{constructor(e=null){super(),this._source=null,this._symbolizerParameters=null,this._vaoInvalidated=!0,this.coordScale=[1,1],this.height=null,this.stencilRef=0,this.resolution=null,this.pixelRatio=1,this.x=0,this.y=0,this.rotation=0,this.rawPixelData=null,this.width=null,this.source=e}destroy(){var e,t;Object(i["k"])(this.vaoData)&&(null!=(e=this.vaoData.magdir)&&e.vao.dispose(),null!=(t=this.vaoData.scalar)&&t.vao.dispose(),this.vaoData=null)}get symbolizerParameters(){return this._symbolizerParameters}set symbolizerParameters(e){JSON.stringify(this._symbolizerParameters)!==JSON.stringify(e)&&(this._symbolizerParameters=e,this.invalidateVAO())}get source(){return this._source}set source(e){this._source=e,this.invalidateVAO()}invalidateVAO(){var e,t;!this._vaoInvalidated&&Object(i["k"])(this.vaoData)&&(null!=(e=this.vaoData.magdir)&&e.vao.dispose(),null!=(t=this.vaoData.scalar)&&t.vao.dispose(),this.vaoData=null,this._vaoInvalidated=!0,this.requestRender())}updateVectorFieldVAO(e){if(this._vaoInvalidated){if(this._vaoInvalidated=!1,Object(i["k"])(this.source)&&Object(i["j"])(this.vaoData)){const{style:t}=this.symbolizerParameters;switch(t){case"beaufort_ft":case"beaufort_km":case"beaufort_kn":case"beaufort_m":case"beaufort_mi":case"classified_arrow":case"ocean_current_kn":case"ocean_current_m":case"single_arrow":{const t=Object(s["d"])(this.source,this.symbolizerParameters),n=this._createVectorFieldVAO(e.context,t);this.vaoData={magdir:n}}break;case"simple_scalar":{const t=Object(s["e"])(this.source,this.symbolizerParameters),n=this._createVectorFieldVAO(e.context,t);this.vaoData={scalar:n}}break;case"wind_speed":{const t=Object(s["d"])(this.source,this.symbolizerParameters),n=this._createVectorFieldVAO(e.context,t),i=Object(s["e"])(this.source,this.symbolizerParameters),a=this._createVectorFieldVAO(e.context,i);this.vaoData={magdir:n,scalar:a}}}}this.ready(),this.requestRender()}}_createTransforms(){return{dvs:Object(o["b"])()}}setTransform(e){const t=Object(a["b"])(this.transforms.dvs),[n,i]=e.toScreenNoRotation([0,0],[this.x,this.y]),o=this.resolution/this.pixelRatio/e.resolution,s=o*this.width,l=o*this.height,c=Math.PI*this.rotation/180;Object(a["c"])(t,t,Object(r["b"])(n,i)),Object(a["c"])(t,t,Object(r["b"])(s/2,l/2)),Object(a["l"])(t,t,-c),Object(a["c"])(t,t,Object(r["b"])(-s/2,-l/2)),Object(a["i"])(t,t,Object(r["b"])(s,l)),Object(a["j"])(this.transforms.dvs,e.displayViewMat3,t)}onAttach(){this.invalidateVAO()}onDetach(){this.invalidateVAO()}_createVectorFieldVAO(e,t){const{vertexData:n,indexData:i}=t,a=u["a"].createVertex(e,f["D"].STATIC_DRAW,new Float32Array(n)),o=u["a"].createIndex(e,f["D"].STATIC_DRAW,new Uint32Array(i)),r=Object(c["g"])("vector-field",{geometry:[{location:0,name:"a_pos",count:2,type:f["k"].FLOAT,normalized:!1},{location:1,name:"a_offset",count:2,type:f["k"].FLOAT,normalized:!1},{location:2,name:"a_vv",count:2,type:f["k"].FLOAT,normalized:!1}]});return{vao:new d["a"](e,r.attributes,r.bufferLayouts,{geometry:a},o),elementCount:i.length}}}},"19db":function(e,t,n){"use strict";n.d(t,"a",(function(){return _})),n.d(t,"b",(function(){return p})),n.d(t,"c",(function(){return v})),n.d(t,"d",(function(){return R})),n.d(t,"e",(function(){return M})),n.d(t,"f",(function(){return f})),n.d(t,"g",(function(){return D})),n.d(t,"h",(function(){return g})),n.d(t,"i",(function(){return u})),n.d(t,"j",(function(){return m}));var i=n("fa8a"),a=n("b2b2"),o=n("3e27"),r=n("9dee");const s=new Map;s.set("meter-per-second",1),s.set("kilometer-per-hour",.277778),s.set("knots",.514444),s.set("feet-per-second",.3048),s.set("mile-per-hour",.44704);const l=180/Math.PI,c=5,u=new i["a"]({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function f(e,t){return s.get(e)/s.get(t)||1}function d(e){return(450-e)%360}function m(e,t="geographic"){const[n,i]=e,a=Math.sqrt(n*n+i*i);let o=Math.atan2(i,n)*l;return o=(360+o)%360,"geographic"===t&&(o=d(o)),[a,o]}function h(e,t="geographic"){let n=e[1];"geographic"===t&&(n=d(n)),n%=360;const i=e[0];return[i*Math.cos(n/l),i*Math.sin(n/l)]}function _(e,t,n,i="geographic"){if(!Object(r["f"])(e)||Object(a["j"])(n))return e;const o="vector-magdir"===t?e.clone():Object(a["r"])(p(e,t)),s=o.pixels[1];for(let a=0;a<s.length;a++)s[a]="geographic"===i?(s[a]+n[a]+270)%360:(s[a]+360-n[a])%360;return"vector-magdir"===t?o:p(o,"vector-magdir")}function p(e,t,n="geographic",i=1){if(!Object(r["f"])(e))return e;const{pixels:a,width:s,height:l}=e,c=s*l,u=a[0],f=a[1],d=e.pixelType.startsWith("f")?e.pixelType:"f32",_=o["a"].createEmptyBand(d,c),p=o["a"].createEmptyBand(d,c);let v=0;for(let o=0;o<l;o++)for(let e=0;e<s;e++)"vector-uv"===t?([_[v],p[v]]=m([u[v],f[v]],n),_[v]*=i):([_[v],p[v]]=h([u[v],f[v]],n),_[v]*=i,p[v]*=i),v++;const g=new o["a"]({pixelType:d,width:e.width,height:e.height,mask:e.mask,validPixelCount:e.validPixelCount,maskIsAlpha:e.maskIsAlpha,pixels:[_,p]});return g.updateStatistics(),g}function v(e,t,n=1){if(1===n||!Object(r["f"])(e))return e;const i=e.clone(),{pixels:a,width:o,height:s}=i,l=a[0],c=a[1];let u=0;for(let r=0;r<s;r++)for(let e=0;e<o;e++)"vector-uv"===t?(l[u]*=n,c[u]*=n):l[u]*=n,u++;return i.updateStatistics(),i}function g(e,t,n,i,o){if(Object(a["j"])(o)||!o.spatialReference.equals(e.spatialReference))return{extent:e,width:Math.round(t/i),height:Math.round(n/i),resolution:e.width/t};const r=o.xmin,s=o.ymax,l=(e.xmax-e.xmin)/t*i,c=(e.ymax-e.ymin)/n*i,u=(l+c)/2;return e.xmin=r+Math.floor((e.xmin-r)/l)*l,e.xmax=r+Math.ceil((e.xmax-r)/l)*l,e.ymin=s+Math.floor((e.ymin-s)/c)*c,e.ymax=s+Math.ceil((e.ymax-s)/c)*c,{extent:e,width:Math.round(e.width/l),height:Math.round(e.height/c),resolution:u}}const x=y(0,0,0);function y(e=0,t=0,n=Math.PI,i=!0){i&&(n=(2*Math.PI-n)%(2*Math.PI));const a=i?-1:1,o=13*a,r=-7*a,s=-2*a,l=-16*a,c=21.75,[u,f]=T(0,t+o,n,c),[d,m]=T(e-5.5,t+r,n,c),[h,_]=T(e+5.5,t+r,n,c),[p,v]=T(e-1.5,t+s,n,c),[g,x]=T(e+1.5,t+s,n,c),[y,b]=T(e-1.5,t+l,n,c),[S,O]=T(e+1.5,t+l,n,c);return[u,f,d,m,p,v,g,x,h,_,y,b,S,O]}function b(e=0,t=Math.PI,n=!0){n&&(t=(2*Math.PI-t)%(2*Math.PI));const i=10,a=n?-1:1,o=5*a,r=20*a,s=25*a,l=45,u=0,f=0,d=2,m=0,h=d*a;let[_,p]=[u+i/2,f-r],[v,g]=[_+d,p],[x,y]=[v-m,g+h],[b,S]=[u-i/2,f-s],[O,w]=[b+m,S-h],I=Math.ceil(e/c),E=Math.floor(I/10);I-=8*E;const C=[],P=[];for(let c=0;c<I/2;c++,E--){E<=0&&I%2==1&&c===(I-1)/2&&(b=u,O=b+m,S=(S+p)/2,w=S-h);const[e,n]=T(b,S,t,l);if(E>0){const[i,a]=T(v,S,t,l),[o,r]=T(_,p,t,l);C.push(i),C.push(a),C.push(e),C.push(n),C.push(o),C.push(r)}else{const[i,a]=T(v,g,t,l),[o,r]=T(x,y,t,l),[s,c]=T(O,w,t,l);P.push(e),P.push(n),P.push(s),P.push(c),P.push(o),P.push(r),P.push(i),P.push(a)}S+=o,p+=o,g+=o,y+=o,w+=o}const[A,M]=T(u+i/2,f+r,t,l),R=i/2+d,[D,L]=T(u+R,f+r,t,l),[z,N]=T(u+i/2,f-s,t,l),[F,U]=T(u+R,f-s,t,l);return{pennants:C,barbs:P,shaft:[A,M,D,L,z,N,F,U]}}function T(e,t,n,i=1){const a=Math.sqrt(e*e+t*t)/i,o=(2*Math.PI+Math.atan2(t,e))%(2*Math.PI);return[a,(2*Math.PI+o-n)%(2*Math.PI)]}const S=[0,1,3,6,10,16,21,27,33,40,47,55,63],O=[0,.5,1,1.5,2],w=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function I(e,t,n,i){const a=f(i||"knots",n);let o;for(o=1;o<t.length;o++)if(o===t.length-1){if(e<t[o]*a)break}else if(e<=t[o]*a)break;return Math.min(o-1,t.length-2)}function E(e,t,n,i,a){let o=0;switch(t){case"beaufort_kn":o=I(e,S,"knots",n);break;case"beaufort_km":o=I(e,S,"kilometer-per-hour",n);break;case"beaufort_ft":o=I(e,S,"feet-per-second",n);break;case"beaufort_m":o=I(e,S,"meter-per-second",n);break;case"classified_arrow":o=I(e,a,i,n);break;case"ocean_current_m":o=I(e,O,"meter-per-second",n);break;case"ocean_current_kn":o=I(e,w,"knots",n)}return o}function C(e,t){const{style:n,inputUnit:i,outputUnit:a,breakValues:o}=t,r=u.fromJSON(i),s=u.fromJSON(a),l=42,c=15;let f=0,d=0;const{width:m,height:h,mask:_}=e,p=e.pixels[0],v=e.pixels[1],g=_?_.filter(e=>e>0).length:m*h,y=new Float32Array(g*l),b=new Uint32Array(c*g);for(let u=0;u<h;u++)for(let e=0;e<m;e++){const t=u*m+e;if(!_||_[u*m+e]){var T;const i=null!=(T=(v[t]+360)%360/180*Math.PI)?T:2*Math.PI*Math.random(),a=E(p[t],n,r,s,o);for(let n=0;n<x.length;n+=2)y[f++]=(e+.5)/m,y[f++]=(u+.5)/h,y[f++]=x[n],y[f++]=x[n+1]+i,y[f++]=a,y[f++]=p[t];const c=7*(f/l-1);b[d++]=c,b[d++]=c+1,b[d++]=c+2,b[d++]=c+0,b[d++]=c+4,b[d++]=c+3,b[d++]=c+0,b[d++]=c+2,b[d++]=c+3,b[d++]=c+2,b[d++]=c+5,b[d++]=c+3,b[d++]=c+5,b[d++]=c+6,b[d++]=c+3}}return{vertexData:y,indexData:b}}const P=[];function A(e,t){if(0===P.length)for(let c=0;c<30;c++)P.push(b(5*c,0));const n=f(u.fromJSON(t.inputUnit),"knots"),{width:i,height:a,mask:o}=e,r=e.pixels[0],s=e.pixels[1],l=6,d=[],m=[];let h=0,_=0;for(let u=0;u<a;u++)for(let e=0;e<i;e++){const t=u*i+e,f=r[t]*n;if((!o||o[u*i+e])&&f>=c){var p;const n=null!=(p=(s[t]+360)%360/180*Math.PI)?p:2*Math.PI*Math.random(),{pennants:o,barbs:r,shaft:c}=P[Math.min(Math.floor(f/5),29)];if(o.length+r.length===0)continue;let v=d.length/l;const g=(e+.5)/i,x=(u+.5)/a;for(let e=0;e<o.length;e+=2)d[h++]=g,d[h++]=x,d[h++]=o[e],d[h++]=o[e+1]+n,d[h++]=0,d[h++]=f;for(let e=0;e<r.length;e+=2)d[h++]=g,d[h++]=x,d[h++]=r[e],d[h++]=r[e+1]+n,d[h++]=0,d[h++]=f;for(let e=0;e<c.length;e+=2)d[h++]=g,d[h++]=x,d[h++]=c[e],d[h++]=c[e+1]+n,d[h++]=0,d[h++]=f;for(let e=0;e<o.length/6;e++)m[_++]=v,m[_++]=v+1,m[_++]=v+2,v+=3;for(let e=0;e<r.length/8;e++)m[_++]=v,m[_++]=v+1,m[_++]=v+2,m[_++]=v+1,m[_++]=v+2,m[_++]=v+3,v+=4;m[_++]=v+0,m[_++]=v+1,m[_++]=v+2,m[_++]=v+1,m[_++]=v+3,m[_++]=v+2,v+=4}}return{vertexData:new Float32Array(d),indexData:new Uint32Array(m)}}function M(e,t){const n=24;let i=0,a=0;const{width:o,height:r,mask:s}=e,l=e.pixels[0],d=[],m=[],h=f(u.fromJSON(t.inputUnit),"knots"),_="wind_speed"===t.style?c:Number.MAX_VALUE;for(let c=0;c<r;c++)for(let e=0;e<o;e++){const t=l[c*o+e]*h;if((!s||s[c*o+e])&&t<_){for(let n=0;n<4;n++)d[i++]=(e+.5)/o,d[i++]=(c+.5)/r,d[i++]=n<2?-.5:.5,d[i++]=n%2==0?-.5:.5,d[i++]=0,d[i++]=t;const s=4*(i/n-1);m[a++]=s,m[a++]=s+1,m[a++]=s+2,m[a++]=s+1,m[a++]=s+2,m[a++]=s+3}}return{vertexData:new Float32Array(d),indexData:new Uint32Array(m)}}function R(e,t){return"simple_scalar"===t.style?M(e,t):"wind_speed"===t.style?A(e,t):C(e,t)}function D(e,t,n,i=[0,0],a=.5){const{width:r,height:s,mask:l}=e,[c,u]=e.pixels,[f,d]=i,_=Math.round((r-f)/n),p=Math.round((s-d)/n),v=_*p,g=new Float32Array(v),x=new Float32Array(v),y=new Uint8Array(v),b="vector-uv"===t;for(let o=0;o<p;o++)for(let e=0;e<_;e++){let t=0;const i=o*_+e,p=Math.max(0,o*n+d),v=Math.max(0,e*n+f),T=Math.min(s,p+n),S=Math.min(r,v+n);for(let e=p;e<T;e++)for(let n=v;n<S;n++){const a=e*r+n;if(!l||l[a]){t++;const e=b?[c[a],u[a]]:[c[a],(360+u[a])%360],[n,o]=b?e:h(e);g[i]+=n,x[i]+=o}}if(t>=(T-p)*(S-v)*(1-a)){y[i]=1;const[e,n]=m([g[i]/t,x[i]/t]);g[i]=e,x[i]=n}else y[i]=0,g[i]=0,x[i]=0}const T=new o["a"]({width:_,height:p,pixels:[g,x],mask:y});return T.updateStatistics(),T}},"1d01":function(e,t,n){"use strict";n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return c})),n.d(t,"c",(function(){return u})),n.d(t,"d",(function(){return l}));Number.POSITIVE_INFINITY;const i=Math.PI,a=128/i,o=256/360,r=1/Math.LN2;function s(e,t){return(e%=t)>=0?e:e+t}function l(e){return s(e*a,256)}function c(e){return s(e*o,256)}function u(e){return Math.log(e)*r}function f(e,t,n){return e>=t&&e<=n||e>=n&&e<=t}},"218c":function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return _})),n.d(t,"c",(function(){return m})),n.d(t,"d",(function(){return c})),n.d(t,"e",(function(){return h})),n.d(t,"f",(function(){return u})),n.d(t,"g",(function(){return f})),n.d(t,"h",(function(){return v}));n("e06a");var i=n("b2b2");class a{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const n=e+"/"+t,i=this._cachedBlocks;if(i.has(n)){const e=i.get(n);return e.refCount--,e.refCount<=0&&(i.delete(n),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const n=e+"/"+t,i=this._cachedBlocks;if(i.has(n)){const e=i.get(n);return e.ts=Date.now(),e.refCount++,i.delete(n),i.set(n,e),e.block}return null}putBlock(e,t,n,i=null){const a=this._cachedBlocks,o=e+"/"+t;if(a.has(o)){const e=a.get(o);e.ts=Date.now(),e.refCount++}else a.set(o,{block:n,ts:Date.now(),refCount:1,controller:i});this._trim(),this._updateTimer()}deleteBlock(e,t){const n=this._cachedBlocks,i=e+"/"+t;n.has(i)&&n.delete(i)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const t=Array.from(e),n=Date.now();for(let i=0;i<t.length&&t[i][1].ts<=n-this._duration;i++)e.delete(t[i][0]);0===e.size&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let n=0;n<t.length-this._size;n++)e.delete(t[n][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}}var o=n("b4e0"),r=n("4ae5");const s=new Map,l=new a;function c(e,t){return null==t?e:`${e}?sliceId=${t}`}function u(e,t){const n={extent:null,rasterInfo:t,cache:new Map};if(s.has(e)){const t=s.get(e);return t.push(n),t.length-1}return s.set(e,[n]),0}function f(e,t){if(s.has(e)){const n=s.get(e);n[t]=null,n.some(e=>null!=e)||s.delete(e)}}function d(e,t,n){if(!s.has(e))return null==t?l.decreaseRefCount(e,n):0;const i=s.get(e);if(null==i[t])return l.decreaseRefCount(e,n);const a=i[t].cache;if(a.has(n)){const e=a.get(n);if(e.refCount--,0===e.refCount){a.delete(n);for(let e=0;e<i.length;e++)i[e]&&i[e].cache.has(n)&&i[e].cache.delete(n);e.controller&&e.controller.abort()}return e.refCount}return 0}function m(e,t,n){if(!s.has(e))return null==t?l.getBlock(e,n):null;const i=s.get(e);if(null==i[t]){for(let e=0;e<i.length;e++)if(i[e]&&i[e].cache.has(n)){const t=i[e].cache.get(n);return t.refCount++,t.block}return l.getBlock(e,n)}const a=i[t].cache;if(a.has(n)){const e=a.get(n);return e.refCount++,e.block}for(let o=0;o<i.length;o++)if(o!==t&&i[o]&&i[o]&&i[o].cache.has(n)){const e=i[o].cache.get(n);return e.refCount++,a.set(n,e),e.block}return null}function h(e,t,n,i,a=null){if(!s.has(e))return void(null==t&&l.putBlock(e,n,i,a));const o=s.get(e);if(null==o[t])return void l.putBlock(e,n,i,a);const r={refCount:1,block:i,isResolved:!1,isRejected:!1,controller:a};i.then(()=>r.isResolved=!0).catch(()=>r.isRejected=!0),o[t].cache.set(n,r)}function _(e,t,n){if(!s.has(e))return void(null==t&&l.deleteBlock(e,n));const i=s.get(e);null!=i[t]?i[t].cache.delete(n):l.deleteBlock(e,n)}function p(e,t){if(!s.has(e))return null;const n=s.get(e);return null==n[t]?null:n[t]}function v(e,t,n,a,s,l,c=null){const u=p(e,t),f=u.extent,{cache:d,rasterInfo:m}=u;if(f&&f.xmin===n.xmin&&f.xmax===n.xmax&&f.ymin===n.ymin&&f.ymax===n.ymax)return;const h=n.clone().normalize(),{spatialReference:_,transform:v}=m,g=new Set;for(let p=0;p<h.length;p++){const e=h[p];if(e.xmax-e.xmin<=a||e.ymax-e.ymin<=a)continue;let t=Object(o["h"])(e,_,c);Object(i["k"])(v)&&(t=v.inverseTransform(t));const n=new r["a"]({x:a,y:a,spatialReference:e.spatialReference});if(null==s&&!(s=Object(o["j"])(n,_,e,c)))return;const{pyramidLevel:u,pyramidResolution:f,excessiveReading:d}=Object(o["m"])(s,m,l||"closest");if(d)return;const{storageInfo:x}=m,{origin:y}=x,b={x:Math.max(0,Math.floor((t.xmin-y.x)/f.x)),y:Math.max(0,Math.floor((y.y-t.ymax)/f.y))},T=Math.ceil((t.xmax-t.xmin)/f.x-.1),S=Math.ceil((t.ymax-t.ymin)/f.y-.1),O=u>0?x.pyramidBlockWidth:x.blockWidth,w=u>0?x.pyramidBlockHeight:x.blockHeight,I=1,E=Math.max(0,Math.floor(b.x/O)-I),C=Math.max(0,Math.floor(b.y/w)-I),P=Math.floor((b.x+T-1)/O)+I,A=Math.floor((b.y+S-1)/w)+I;for(let i=C;i<=A;i++)for(let e=E;e<=P;e++)g.add(`${u}/${i}/${e}`)}d.forEach((e,t)=>{if(!g.has(t)){const e=d.get(t);(null==e||e.isResolved||e.isRejected)&&d.delete(t)}}),u.extent={xmin:n.xmin,ymin:n.ymin,xmax:n.xmax,ymax:n.ymax}}},"21c1":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var i=n("be90");const a={shaders:{vertexShader:Object(i["a"])("background/background.vert"),fragmentShader:Object(i["a"])("background/background.frag")},attributes:new Map([["a_pos",0]])}},2616:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return T}));n("e06a");var i=n("c120"),a=n("e92d"),o=n("38a4"),r=n("b2b2"),s=n("f4cc"),l=n("880d"),c=n("7f83"),u=n("3af1");const f=a["a"].getLogger("esri.views.2d.engine.flow.dataUtils"),d=10;async function m(e,t,n,a){const o=performance.now(),r=h(t,n),l=performance.now(),c=p(t,r,n.width,n.height),u=performance.now(),m=g(c,!0),_=performance.now(),v="Streamlines"===e?x(m,d):y(m),b=performance.now();return Object(i["a"])("esri-2d-profiler")&&(f.info("I.1","_createFlowFieldFromData (ms)",Math.round(l-o)),f.info("I.2","_getStreamlines (ms)",Math.round(u-l)),f.info("I.3","createAnimatedLinesData (ms)",Math.round(_-u)),f.info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(b-_)),f.info("I.5","createFlowMesh (ms)",Math.round(b-o)),f.info("I.6","Mesh size (bytes)",v.vertexData.buffer.byteLength+v.indexData.buffer.byteLength)),await Promise.resolve(),Object(s["p"])(a),v}function h(e,t){const n=v(t.data,t.width,t.height,e.smoothing);return e.interpolate?(e,i)=>{const a=Math.floor(e),o=Math.floor(i);if(a<0||a>=t.width)return[0,0];if(o<0||o>=t.height)return[0,0];const r=e-a,s=i-o,l=a,c=o,u=a<t.width-1?a+1:a,f=o<t.height-1?o+1:o,d=n[2*(c*t.width+l)],m=n[2*(c*t.width+u)],h=n[2*(f*t.width+l)],_=n[2*(f*t.width+u)],p=n[2*(c*t.width+l)+1],v=n[2*(c*t.width+u)+1];return[(d*(1-s)+h*s)*(1-r)+(m*(1-s)+_*s)*r,(p*(1-s)+n[2*(f*t.width+l)+1]*s)*(1-r)+(v*(1-s)+n[2*(f*t.width+u)+1]*s)*r]}:(e,i)=>{const a=Math.round(e),o=Math.round(i);return a<0||a>=t.width||o<0||o>=t.height?[0,0]:[n[2*(o*t.width+a)+0],n[2*(o*t.width+a)+1]]}}function _(e,t,n,i,a,o,r,s,l){const c=[];let u=n,f=i,d=0,[m,h]=t(u,f);m*=e.velocityScale,h*=e.velocityScale;const _=Math.sqrt(m*m+h*h);let p,v;c.push({x:u,y:f,t:d,speed:_});for(let g=0;g<e.verticesPerLine;g++){let[n,i]=t(u,f);n*=e.velocityScale,i*=e.velocityScale;const m=Math.sqrt(n*n+i*i);if(m<e.minSpeedThreshold)return c;const h=n/m,_=i/m;if(u+=h*e.segmentLength,f+=_*e.segmentLength,d+=e.segmentLength/m,Math.acos(h*p+_*v)>e.maxTurnAngle)return c;if(e.collisions){const e=Math.round(u*l),t=Math.round(f*l);if(e<0||e>r-1||t<0||t>s-1)return c;const n=o[t*r+e];if(-1!==n&&n!==a)return c;o[t*r+e]=a}c.push({x:u,y:f,t:d,speed:m}),p=h,v=_}return c}function p(e,t,n,i){const a=[],o=new l["a"],r=1/Math.max(e.lineCollisionWidth,1),s=Math.round(n*r),c=Math.round(i*r),u=new Int32Array(s*c);for(let l=0;l<u.length;l++)u[l]=-1;const f=[];for(let l=0;l<i;l+=e.lineSpacing)for(let t=0;t<n;t+=e.lineSpacing)f.push({x:t,y:l,sort:o.getFloat()});f.sort((e,t)=>e.sort-t.sort);for(const{x:l,y:d}of f)if(o.getFloat()<e.density){const n=_(e,t,l,d,a.length,u,s,c,r);if(n.length<2)continue;a.push(n)}return a}function v(e,t,n,i){if(0===i)return e;const a=Math.round(3*i),o=new Array(2*a+1);let r=0;for(let c=-a;c<=a;c++){const e=Math.exp(-c*c/(i*i));o[c+a]=e,r+=e}for(let c=-a;c<=a;c++)o[c+a]/=r;const s=new Float32Array(e.length);for(let c=0;c<n;c++)for(let n=0;n<t;n++){let i=0,r=0;for(let s=-a;s<=a;s++){if(n+s<0||n+s>=t)continue;const l=o[s+a];i+=l*e[2*(c*t+(n+s))+0],r+=l*e[2*(c*t+(n+s))+1]}s[2*(c*t+n)+0]=i,s[2*(c*t+n)+1]=r}const l=new Float32Array(e.length);for(let c=0;c<t;c++)for(let e=0;e<n;e++){let i=0,r=0;for(let l=-a;l<=a;l++){if(e+l<0||e+l>=n)continue;const u=o[l+a];i+=u*s[2*((e+l)*t+c)+0],r+=u*s[2*((e+l)*t+c)+1]}l[2*(e*t+c)+0]=i,l[2*(e*t+c)+1]=r}return l}function g(e,t){const n=new l["a"],i=e.reduce((e,t)=>e+t.length,0),a=new Float32Array(4*i),o=new Array(e.length);let r=0,s=0;for(const l of e){const e=r;for(const t of l)a[4*r+0]=t.x,a[4*r+1]=t.y,a[4*r+2]=t.t,a[4*r+3]=t.speed,r++;o[s++]={startVertex:e,numberOfVertices:l.length,totalTime:l[l.length-1].t,timeSeed:t?n.getFloat():0}}return{lineVertices:a,lineDescriptors:o}}function x(e,t){const n=9,{lineVertices:i,lineDescriptors:a}=e;let o=0,r=0;for(const m of a)o+=2*m.numberOfVertices,r+=6*(m.numberOfVertices-1);const s=new Float32Array(o*n),l=new Uint32Array(r);let c=0,u=0;function f(){l[u++]=c-2,l[u++]=c,l[u++]=c-1,l[u++]=c,l[u++]=c+1,l[u++]=c-1}function d(e,t,i,a,o,r,l,u){const f=c*n;let d=0;s[f+d++]=e,s[f+d++]=t,s[f+d++]=1,s[f+d++]=i,s[f+d++]=r,s[f+d++]=l,s[f+d++]=a/2,s[f+d++]=o/2,s[f+d++]=u,c++,s[f+d++]=e,s[f+d++]=t,s[f+d++]=-1,s[f+d++]=i,s[f+d++]=r,s[f+d++]=l,s[f+d++]=-a/2,s[f+d++]=-o/2,s[f+d++]=u,c++}for(const m of a){const{totalTime:e,timeSeed:n}=m;let a=null,o=null,r=null,s=null,l=null,c=null;for(let u=0;u<m.numberOfVertices;u++){const h=i[4*(m.startVertex+u)+0],_=i[4*(m.startVertex+u)+1],p=i[4*(m.startVertex+u)+2],v=i[4*(m.startVertex+u)+3];let g=null,x=null,y=null,b=null;if(u>0){g=h-a,x=_-o;const i=Math.sqrt(g*g+x*x);if(g/=i,x/=i,u>1){let e=g+l,n=x+c;const i=Math.sqrt(e*e+n*n);e/=i,n/=i;const a=Math.min(1/(e*g+n*x),t);e*=a,n*=a,y=-n,b=e}else y=-x,b=g;null!==y&&null!==b&&(d(a,o,r,y,b,e,n,v),f())}a=h,o=_,r=p,l=g,c=x,s=v}d(a,o,r,-c,l,e,n,s)}return{vertexData:s,indexData:l}}function y(e){const t=16,n=1,i=2,{lineVertices:a,lineDescriptors:o}=e;let r=0,s=0;for(const M of o){const e=M.numberOfVertices-1;r+=4*e*2,s+=6*e*2}const l=new Float32Array(r*t),c=new Uint32Array(s);let u,f,d,m,h,_,p,v,g,x,y,b,T,S,O=0,w=0;function I(){c[w++]=O-8,c[w++]=O-7,c[w++]=O-6,c[w++]=O-7,c[w++]=O-5,c[w++]=O-6,c[w++]=O-4,c[w++]=O-3,c[w++]=O-2,c[w++]=O-3,c[w++]=O-1,c[w++]=O-2}function E(e,a,o,r,s,c,u,f,d,m,h,_,p,v){const g=O*t;let x=0;for(const t of[n,i])for(const n of[1,2,3,4])l[g+x++]=e,l[g+x++]=a,l[g+x++]=o,l[g+x++]=r,l[g+x++]=u,l[g+x++]=f,l[g+x++]=d,l[g+x++]=m,l[g+x++]=t,l[g+x++]=n,l[g+x++]=p,l[g+x++]=v,l[g+x++]=s/2,l[g+x++]=c/2,l[g+x++]=h/2,l[g+x++]=_/2,O++}function C(e,t){let n=g+y,i=x+b;const a=Math.sqrt(n*n+i*i);n/=a,i/=a;const o=g*n+x*i;n/=o,i/=o;let r=y+T,s=b+S;const l=Math.sqrt(r*r+s*s);r/=l,s/=l;const c=y*r+b*s;r/=c,s/=c,E(u,f,d,m,-i,n,h,_,p,v,-s,r,e,t),I()}function P(e,t,n,i,a,o){if(g=y,x=b,y=T,b=S,null==g&&null==x&&(g=y,x=b),null!=h&&null!=_){T=e-h,S=t-_;const n=Math.sqrt(T*T+S*S);T/=n,S/=n}null!=g&&null!=x&&C(a,o),u=h,f=_,d=p,m=v,h=e,_=t,p=n,v=i}function A(e,t){g=y,x=b,y=T,b=S,null==g&&null==x&&(g=y,x=b),null!=g&&null!=x&&C(e,t)}for(const M of o){u=null,f=null,d=null,m=null,h=null,_=null,p=null,v=null,g=null,x=null,y=null,b=null,T=null,S=null;const{totalTime:e,timeSeed:t}=M;for(let n=0;n<M.numberOfVertices;n++)P(a[4*(M.startVertex+n)+0],a[4*(M.startVertex+n)+1],a[4*(M.startVertex+n)+2],a[4*(M.startVertex+n)+3],e,t);A(e,t)}return{vertexData:l,indexData:c}}function b(e,t){const n=t.pixels,{width:i,height:a}=t,r=new Float32Array(i*a*2),s=t.mask||new Uint8Array(i*a*2);if(t.mask||s.fill(255),"vector-uv"===e)for(let o=0;o<i*a;o++)r[2*o+0]=n[0][o],r[2*o+1]=-n[1][o];else if("vector-magdir"===e)for(let l=0;l<i*a;l++){const e=n[0][l],t=Object(o["g"])(n[1][l]),i=Math.cos(t-Math.PI/2),a=Math.sin(t-Math.PI/2);r[2*l+0]=i*e,r[2*l+1]=a*e}return{data:r,mask:s,width:i,height:a}}async function T(e,t,n,a,o,r){const s=performance.now(),l=Object(c["e"])(t.spatialReference);if(!l){const l=await S(e,t,n,a,o,r);return Object(i["a"])("esri-2d-profiler")&&f.info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-s)),Object(i["a"])("esri-2d-profiler")&&f.info("I.9","Number of parts",1),l}const[d,m]=l.valid,h=m-d,_=Math.ceil(t.width/h),p=t.width/_,v=Math.round(n/_);let g=t.xmin;const x=[],y=performance.now();for(let i=0;i<_;i++){const n=new u["a"]({xmin:g,xmax:g+p,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference});x.push(S(e,n,v,a,o,r)),g+=p}const b=await Promise.all(x);Object(i["a"])("esri-2d-profiler")&&f.info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-y)),Object(i["a"])("esri-2d-profiler")&&f.info("I.9","Number of parts",b.length);const T={data:new Float32Array(n*a*2),mask:new Uint8Array(n*a),width:n,height:a};let O=0;for(const i of b){for(let e=0;e<i.height;e++)for(let t=0;t<i.width;t++)O+t>=n||(T.data[2*(e*n+O+t)+0]=i.data[2*(e*i.width+t)+0],T.data[2*(e*n+O+t)+1]=i.data[2*(e*i.width+t)+1],T.mask[e*n+O+t]=i.mask[e*i.width+t]);O+=i.width}return Object(i["a"])("esri-2d-profiler")&&f.info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-s)),T}async function S(e,t,n,i,a,o){const s={requestProjectedLocalDirections:!0,signal:o};if(Object(r["k"])(a)&&(s.timeExtent=a),"imagery"===e.type){await e.load({signal:o});const a=e.rasterInfo.dataType,l=await e.fetchImage(t,n,i,s);return!l||Object(r["j"])(l.pixelData)||Object(r["j"])(l.pixelData.pixelBlock)?{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}:b(a,l.pixelData.pixelBlock)}await e.load({signal:o});const l=e.rasterInfo.dataType,c=await e.fetchPixels(t,n,i,s);return!c||Object(r["j"])(c.pixelBlock)?{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}:b(l,c.pixelBlock)}},"2e5c":function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return r}));var i=n("d17d"),a=n("3f3e");const o={geometry:[new a["a"]("a_pos",2,i["k"].BYTE,0,2)]},r={geometry:[new a["a"]("a_pos",2,i["k"].BYTE,0,4),new a["a"]("a_tex",2,i["k"].BYTE,2,4)]},s={geometry:[new a["a"]("a_pos",2,i["k"].UNSIGNED_SHORT,0,4)]}},"3b1a":function(e,t,n){"use strict";n.d(t,"a",(function(){return me}));var i=n("c9ee"),a=n("b2b2"),o=n("f440"),r=n("823a"),s=n("f079"),l=n("d17d"),c=n("beba");class u extends s["a"]{constructor(){super(...arguments),this._desc={lut:{vsPath:"raster/lut",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])},stretch:{vsPath:"raster/stretch",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])},hillshade:{vsPath:"raster/hillshade",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])}},this._rendererUniformInfos=new Map}dispose(){this._quad&&this._quad.dispose()}prepareState({context:e},t){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(l["b"].ONE,l["b"].ONE_MINUS_SRC_ALPHA,l["b"].ONE,l["b"].ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(l["h"].EQUAL,t.stencilRef,255)}draw(e,t){var n;if(!Object(o["b"])(t)||t.suspended)return;const{timeline:i,context:a,painter:r,requestRender:s}=e;i.begin(this.name);const l=!(null!=(n=a.capabilities.textureFloat)&&n.textureFloatLinear);t.updateTexture(e);const c=this._getShaderVariations(t,l),u=r.materialManager.getProgram(this._desc[t.symbolizerParameters.type],c);this._drawWithProgram(a,u,t,s),i.end(this.name)}_drawWithProgram(e,t,n,i,o=1,s=[0,0],l=!1){if(this._quad||(this._quad=new r["a"](e,[0,0,1,0,0,1,1,1])),Object(a["k"])(i)&&!t.isCompiled)return void i();const{symbolizerParameters:u,transformGrid:f,width:d,height:m,opacity:h}=n,_=u.type;e.useProgram(t);const p=this._getShaderVariations(n),v=this._getUniformInfos(_,e,t,p),{names:g,textures:x}=n.getTextures();Object(c["j"])(e,t,g,x);const y=Object(c["d"])(o,s),b=Object(c["f"])(f,[d,m],[n.source.width,n.source.height],h,l);if(Object(c["k"])(t,v,{u_coordScale:n.coordScale,u_dvsMat3:n.transforms.dvs,...y,...b}),u.colormap){const{colormap:e,colormapOffset:n}=u,i=Object(c["e"])(e,n);Object(c["k"])(t,v,i)}if("stretch"===u.type){const e=Object(c["h"])(u);Object(c["k"])(t,v,e)}else if("hillshade"===u.type){const e=Object(c["g"])(u);Object(c["k"])(t,v,e)}this._quad.draw()}_getUniformInfos(e,t,n,i){const a=i.length>0?e+"-"+i.join("-"):e;if(this._rendererUniformInfos.has(a))return this._rendererUniformInfos.get(a);const o=Object(c["i"])(t,n);return this._rendererUniformInfos.set(a,o),o}_getShaderVariations(e,t=!1){const n=[],{interpolation:i}=e,{type:a,colormap:o}=e.symbolizerParameters;return"cubic"===i?n.push("bicubic"):"bilinear"===i&&"stretch"===a&&null!=o?(n.push("bilinear"),n.push("nnedge")):t&&"bilinear"===i&&n.push("bilinear"),e.isRendereredSource?n.push("noop"):o&&n.push("applyColormap"),e.transformGrid&&(n.push("applyProjection"),1===e.transformGrid.spacing[0]&&n.push("lookupProjection")),n}}var f=n("3bc3"),d=n("8c81");const m={nearest:{defines:[],samplingMode:l["z"].NEAREST,mips:!1},bilinear:{defines:[],samplingMode:l["z"].LINEAR,mips:!1},bicubic:{defines:["bicubic"],samplingMode:l["z"].LINEAR,mips:!1},trilinear:{defines:[],samplingMode:l["z"].LINEAR_MIPMAP_LINEAR,mips:!0}},h=(e,t,n)=>{if("dynamic"===n.samplingMode){const{state:n}=e,i=t.resolution/t.pixelRatio/n.resolution,a=Math.round(e.pixelRatio)!==e.pixelRatio,o=i>1.05||i<.95;return n.rotation||o||a||t.isSourceScaled||t.rotation?m.bilinear:m.nearest}return m[n.samplingMode]};class _ extends s["a"]{constructor(){super(...arguments),this._desc={vsPath:"raster/bitmap",fsPath:"raster/bitmap",attributes:new Map([["a_pos",0]])}}dispose(){this._quad&&this._quad.dispose()}prepareState({context:e},t){e.setBlendingEnabled(!0),"additive"===t.blendFunction?e.setBlendFunctionSeparate(l["b"].ONE,l["b"].ONE,l["b"].ONE,l["b"].ONE):e.setBlendFunctionSeparate(l["b"].ONE,l["b"].ONE_MINUS_SRC_ALPHA,l["b"].ONE,l["b"].ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(l["h"].EQUAL,t.stencilRef,255)}draw(e,t){const{context:n,renderingOptions:i,painter:o,requestRender:s}=e;if(!t.source)return;const l=h(e,t,i),c=o.materialManager.getProgram(this._desc,l.defines);if(Object(a["k"])(s)&&!c.isCompiled)return void s();e.timeline.begin(this.name),this._quad||(this._quad=new r["a"](n,[0,0,1,0,0,1,1,1]));const{coordScale:u,computedOpacity:f,transforms:m}=t;t.setSamplingProfile(l),t.bind(e.context,d["L"]),n.useProgram(c),c.setUniformMatrix3fv("u_dvsMat3",m.dvs),c.setUniform1i("u_texture",d["L"]),c.setUniform2fv("u_coordScale",u),c.setUniform1f("u_opacity",f),this._quad.draw(),e.timeline.end(this.name)}}var p=n("5ef2"),v=n("c8dd"),g=n("21c1"),x=n("681f");const y=()=>Object(v["g"])("clip",{geometry:[{location:0,name:"a_pos",count:2,type:l["k"].SHORT}]});class b extends s["a"]{constructor(){super(...arguments),this._color=Object(p["c"])(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState({context:e}){e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setFaceCullingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(l["w"].KEEP,l["w"].KEEP,l["w"].REPLACE),e.setStencilWriteMask(255),e.setStencilFunction(l["h"].ALWAYS,0,255)}draw(e,t){const{context:n,state:i,requestRender:o}=e,r=y(),s=t.getVAO(n,i,r.attributes,r.bufferLayouts);Object(a["j"])(s.indexBuffer)||(this._program||(this._program=Object(x["a"])(n,g["a"])),!Object(a["k"])(o)||this._program.isCompiled?(n.useProgram(this._program),this._program.setUniform2fv("u_coord_range",[1,1]),this._program.setUniform4fv("u_color",this._color),this._program.setUniformMatrix3fv("u_dvsMat3",i.displayMat3),n.bindVAO(s),n.drawElements(l["r"].TRIANGLES,s.indexBuffer.size,l["k"].UNSIGNED_INT,0),n.bindVAO()):o())}}const T=()=>Object(v["g"])("overlay",{geometry:[{location:0,name:"a_pos",count:2,type:l["k"].FLOAT}],tex:[{location:1,name:"a_uv",count:2,type:l["k"].UNSIGNED_SHORT}]});class S extends s["a"]{constructor(){super(...arguments),this._desc={vsPath:"overlay/overlay",fsPath:"overlay/overlay",attributes:new Map([["a_pos",0],["a_uv",1]])}}dispose(){}prepareState({context:e}){e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setBlendFunctionSeparate(l["b"].ONE,l["b"].ONE_MINUS_SRC_ALPHA,l["b"].ONE,l["b"].ONE_MINUS_SRC_ALPHA),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(l["h"].GREATER,255,255)}draw(e,t){const{context:n,painter:i,requestRender:o}=e;if(!t.isReady)return;const{computedOpacity:r,dvsMat3:s,isWrapAround:c,texture:u}=t;e.timeline.begin(this.name);const f=i.materialManager.getProgram(this._desc);if(Object(a["k"])(o)&&!f.isCompiled)return void o();const m=T(),h=t.getVAO(n,m.bufferLayouts,m.attributes);if(!h)return;n.bindVAO(h),n.useProgram(f),n.bindTexture(u,d["L"]),f.setUniformMatrix3fv("u_dvsMat3",s),f.setUniform1i("u_texture",d["L"]),f.setUniform1f("u_opacity",r);const _=c?10:4;n.drawArrays(l["r"].TRIANGLE_STRIP,0,_),n.bindVAO(),e.timeline.end(this.name)}}var O=n("880d"),w=n("c84e"),I=n("18c6");class E extends s["a"]{constructor(){super(...arguments),this._computeDesc=new Map}prepareState({context:e},t,n){n&&n.includes("hittest")?e.setBlendFunctionSeparate(l["b"].ONE,l["b"].ONE,l["b"].ONE,l["b"].ONE):e.setBlendFunctionSeparate(l["b"].ONE,l["b"].ONE_MINUS_SRC_ALPHA,l["b"].ONE,l["b"].ONE_MINUS_SRC_ALPHA),e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(l["h"].EQUAL,t.stencilRef,255)}draw(e,t,n){const i=this.getGeometryType();t.commit(e);const o=t.getGeometry(i);Object(a["j"])(o)||(e.timeline.begin(this.name),e.attributeView.bindTextures(e.context),o.forEachCommand(i=>{const a=I["e"].load(i.materialKey).symbologyType;this.supportsSymbology(a)&&this.drawGeometry(e,t,i,n)}))}_setSharedUniforms(e,t,n){const{displayLevel:i,pixelRatio:o,state:r,passOptions:s}=t;Object(a["k"])(s)&&"hittest"===s.type&&(e.setUniform2fv("u_hittestPos",s.position),e.setUniform1f("u_hittestDist",s.distance)),e.setUniform1f("u_pixelRatio",o),e.setUniformMatrix3fv("u_tileMat3",n.transforms.tileMat3),e.setUniformMatrix3fv("u_viewMat3",r.viewMat3),e.setUniformMatrix3fv("u_dvsMat3",n.transforms.dvs),e.setUniformMatrix3fv("u_displayViewMat3",r.displayViewMat3),e.setUniform1f("u_currentZoom",Math.round(i*d["z"])),e.setUniform1i("u_attributeTextureSize",t.attributeView.size),e.setUniform1i("u_attributeData0",d["F"]),e.setUniform1i("u_attributeData1",d["G"]),e.setUniform1i("u_attributeData2",d["H"]),e.setUniform1i("u_attributeData3",d["I"]),e.setUniform1i("u_attributeData4",d["J"]),e.setUniform1i("u_attributeData5",d["K"])}_setSizeVVUniforms(e,t,n,i){if(e.vvSizeMinMaxValue&&t.setUniform4fv("u_vvSizeMinMaxValue",n.vvSizeMinMaxValue),e.vvSizeScaleStops&&t.setUniform1f("u_vvSizeScaleStopsValue",n.vvSizeScaleStopsValue),e.vvSizeFieldStops){const e=n.getSizeVVFieldStops(i.key.level);t.setUniform1fv("u_vvSizeFieldStopsValues",e.values),t.setUniform1fv("u_vvSizeFieldStopsSizes",e.sizes)}e.vvSizeUnitValue&&t.setUniform1f("u_vvSizeUnitValueWorldToPixelsRatio",n.vvSizeUnitValueToPixelsRatio)}_setColorAndOpacityVVUniforms(e,t,n){e.vvColor&&(t.setUniform1fv("u_vvColorValues",n.vvColorValues),t.setUniform4fv("u_vvColors",n.vvColors)),e.vvOpacity&&(t.setUniform1fv("u_vvOpacityValues",n.vvOpacityValues),t.setUniform1fv("u_vvOpacities",n.vvOpacities))}_setRotationVVUniforms(e,t,n){e.vvRotation&&t.setUniform1f("u_vvRotationType","geographic"===n.vvMaterialParameters.vvRotationType?0:1)}_getTriangleDesc(e,t,n=["a_pos"]){const i=t.bufferLayouts.geometry,a=n.map(e=>i.findIndex(t=>t.name===e)),o=`${e}-${a.join("-")}`;let r=this._computeDesc.get(o);if(!r){const e=t.strides,n=t.strides.geometry,s=new Map(t.attributes),l=i.map(e=>({...e})),c=Math.max(...t.attributes.values()),u={geometry:l};let f=0;for(const t of a){const e=i[t];u.geometry.push({count:e.count,name:e.name+"1",divisor:e.divisor,normalized:e.normalized,offset:n+e.offset,stride:n,type:e.type}),u.geometry.push({count:e.count,name:e.name+"2",divisor:e.divisor,normalized:e.normalized,offset:2*n+e.offset,stride:n,type:e.type}),s.set(e.name+"1",c+ ++f),s.set(e.name+"2",c+ ++f)}r={bufferLayouts:u,attributes:s,strides:e},this._computeDesc.set(o,r)}return r}}var C=n("4cad");function P(e){const t={geometry:[{location:0,name:"a_pos",count:2,type:l["k"].SHORT},{location:1,name:"a_id",count:3,type:l["k"].UNSIGNED_BYTE},{location:2,name:"a_bitset",count:1,type:l["k"].UNSIGNED_BYTE},{location:3,name:"a_color",count:4,type:l["k"].UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_aux1",count:4,type:l["k"].UNSIGNED_SHORT},{location:5,name:"a_aux2",count:4,type:l["k"].SHORT},{location:6,name:"a_aux3",count:4,type:l["k"].UNSIGNED_BYTE},{location:7,name:"a_zoomRange",count:2,type:l["k"].UNSIGNED_SHORT}]};switch(e.symbologyType){case w["e"].SIMPLE:case w["e"].OUTLINE_FILL_SIMPLE:t.geometry.splice(7,1),t.geometry.splice(4,1)}return{shader:"materials/fill",vertexLayout:t}}class A extends E{dispose(){}getGeometryType(){return w["d"].FILL}supportsSymbology(e){return e!==w["e"].DOT_DENSITY}drawGeometry(e,t,n,i){const{context:o,painter:r,rendererInfo:s,requiredLevel:c,passOptions:u,requestRender:f}=e,d=I["a"].load(n.materialKey),m=Object(C["b"])(d.data),h=Object(a["k"])(u)&&"hittest"===u.type,_=r.materialManager,{shader:p,vertexLayout:g,hittestAttributes:x}=Object(a["s"])(m.programSpec,P(d));let y=l["r"].TRIANGLES,b=Object(v["g"])(d.data,g);h&&(b=this._getTriangleDesc(n.materialKey,b,x),y=l["r"].POINTS);const{attributes:T,bufferLayouts:S}=b,O=_.getMaterialProgram(e,d,p,T,i);if(Object(a["k"])(f)&&!h&&!O.isCompiled)return void f();if(o.useProgram(O),this._setSharedUniforms(O,e,t),O.setUniform2f("u_tileOffset",512*t.key.col,512*t.key.row),d.textureBinding){r.textureManager.bindTextures(o,O,d);const e=1/2**(c-t.key.level);O.setUniform1f("u_zoomFactor",e)}const w=1/e.pixelRatio;O.setUniform1f("u_blur",w),O.setUniform1f("u_antialiasing",w),this._setSizeVVUniforms(d,O,s,t),this._setColorAndOpacityVVUniforms(d,O,s);const E=n.target.getVAO(o,S,T,h);let A=n.indexCount,M=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;h&&(A/=3,M/=3),o.bindVAO(E),this._drawFills(e,t,O,y,A,M)}_drawFills(e,t,n,i,a,o){e.context.drawElements(i,a,l["k"].UNSIGNED_INT,o)}}var M=n("7ce4"),R=n("d267"),D=n("91b0c"),L=n("a1ff"),z=n("0fa6");class N extends A{constructor(){super(...arguments),this._dotTextureSize=0,this._dotTextures=null,this._dotSamplers=new Int32Array([d["Q"],d["R"]]),this._dotVAO=null,this._dotDesc={vsPath:"dot/dot",fsPath:"dot/dot",attributes:new Map([["a_pos",0]])}}dispose(){super.dispose(),this._disposeTextures(),this._dotFBO=Object(a["e"])(this._dotFBO),this._dotVAO=Object(a["e"])(this._dotVAO)}getGeometryType(){return w["d"].FILL}supportsSymbology(e){return e===w["e"].DOT_DENSITY}_drawFills(e,t,n,i,o,r){const{passOptions:s}=e;if(Object(a["k"])(s)&&"hittest"===s.type)super._drawFills(e,t,n,i,o,r);else{const i=this._drawDotLocations(e,t,n,o,r);this._drawDotDensity(e,t,i)}}_drawDotDensity(e,t,n){const{context:i,painter:o,rendererInfo:r,requestRender:s}=e,c=o.materialManager.getProgram(this._dotDesc);if(Object(a["k"])(s)&&!c.isCompiled)return void s();const{rendererSchema:u}=r;Object(C["a"])(u,"dot-density");const f=this._createDotDensityMesh(i,this._dotDesc.attributes,{geometry:[{name:"a_pos",count:2,type:l["k"].SHORT,divisor:0,normalized:!1,offset:0,stride:4}]});i.setStencilTestEnabled(!0),i.useProgram(c),c.setUniform1f("u_tileZoomFactor",1),c.setUniform1i("u_texture",this._dotSamplers[0]),c.setUniform1f("u_dotSize",Math.max(u.dotSize,1)),c.setUniform1f("u_pixelRatio",window.devicePixelRatio),this._setSharedUniforms(c,e,t),i.bindTexture(n,this._dotSamplers[0]),i.bindVAO(f),i.drawArrays(l["r"].POINTS,0,262144)}_drawDotLocations(e,t,n,i,a){const{context:o,rendererInfo:r,requiredLevel:s}=e,c=o.getViewport(),{rendererSchema:u}=r;Object(C["a"])(u,"dot-density");const{dotScale:f,colors:m,activeDots:h,backgroundColor:_,dotValue:p}=u;o.setViewport(0,0,512,512);const v=o.getBoundFramebufferObject(),g=this._createFBO(o);o.bindFramebuffer(g),o.setClearColor(0,0,0,0),o.clear(o.gl.COLOR_BUFFER_BIT|o.gl.STENCIL_BUFFER_BIT),o.setStencilTestEnabled(!1);const x=1/2**(s-t.key.level),y=d["V"],b=y*window.devicePixelRatio*y*window.devicePixelRatio,T=1/x*(1/x),S=f?e.state.scale/f:1;return n.setUniform1f("u_tileZoomFactor",x),n.setUniform1f("u_tileDotsOverArea",b/(d["V"]*window.devicePixelRatio*d["V"]*window.devicePixelRatio)),n.setUniformMatrix4fv("u_dotColors",m),n.setUniform4fv("u_isActive",h),n.setUniform4fv("u_dotBackgroundColor",_),n.setUniform1f("u_dotValue",Math.max(1,p*S*T)),this._bindDotDensityTextures(o,n,r,y),o.drawElements(l["r"].TRIANGLES,i,l["k"].UNSIGNED_INT,a),o.setViewport(c.x,c.y,c.width,c.height),o.bindFramebuffer(v),g.colorTexture}_createFBO(e){if(Object(a["j"])(this._dotFBO)){const t=512,n=512,i={target:l["A"].TEXTURE_2D,pixelFormat:l["p"].RGBA,dataType:l["q"].UNSIGNED_BYTE,samplingMode:l["z"].NEAREST,wrapMode:l["B"].CLAMP_TO_EDGE,width:t,height:n},a={colorTarget:l["y"].TEXTURE,depthStencilTarget:l["m"].DEPTH_STENCIL_RENDER_BUFFER},o=new D["a"](e,{width:t,height:n,internalFormat:l["s"].DEPTH_STENCIL});this._dotFBO=new R["a"](e,a,i,o)}return this._dotFBO}_disposeTextures(){if(this._dotTextures){for(let e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null}}_bindDotDensityTextures(e,t,n,i){const{rendererSchema:a}=n;Object(C["a"])(a,"dot-density");const o=this._createDotDensityTextures(e,i,a.seed);t.setUniform1iv("u_dotTextures",this._dotSamplers);for(let r=0;r<o.length;r++)e.bindTexture(o[r],this._dotSamplers[r])}_createDotDensityMesh(e,t,n){if(Object(a["j"])(this._dotVAO)){const i=2,a=new Int16Array(262144*i);for(let e=0;e<512;e++)for(let t=0;t<512;t++)a[i*(t+512*e)]=t,a[i*(t+512*e)+1]=e;const o=M["a"].createVertex(e,l["D"].STATIC_DRAW,a);this._dotVAO=new z["a"](e,t,n,{geometry:o},null)}return this._dotVAO}_createDotDensityTextures(e,t,n){if(this._dotTextureSize===t&&this._seed===n||(this._disposeTextures(),this._dotTextureSize=t,this._seed=n),null===this._dotTextures){const i=new O["a"](n);this._dotTextures=[this._allocDotDensityTexture(e,t,i),this._allocDotDensityTexture(e,t,i)]}return this._dotTextures}_allocDotDensityTexture(e,t,n){const i=new Float32Array(t*t*4);for(let a=0;a<i.length;a++)i[a]=n.getFloat();return new L["a"](e,{wrapMode:l["B"].REPEAT,pixelFormat:l["p"].RGBA,dataType:l["q"].FLOAT,samplingMode:l["z"].NEAREST,width:t,height:t},i)}}var F=n("e92d");const U={shader:"materials/icon",vertexLayout:{geometry:[{location:0,name:"a_pos",count:2,type:l["k"].SHORT},{location:1,name:"a_vertexOffset",count:2,type:l["k"].SHORT},{location:2,name:"a_texCoords",count:2,type:l["k"].UNSIGNED_SHORT},{location:3,name:"a_bitSetAndDistRatio",count:2,type:l["k"].UNSIGNED_SHORT},{location:4,name:"a_id",count:4,type:l["k"].UNSIGNED_BYTE},{location:5,name:"a_color",count:4,type:l["k"].UNSIGNED_BYTE,normalized:!0},{location:6,name:"a_outlineColor",count:4,type:l["k"].UNSIGNED_BYTE,normalized:!0},{location:7,name:"a_sizeAndOutlineWidth",count:4,type:l["k"].UNSIGNED_BYTE},{location:8,name:"a_zoomRange",count:2,type:l["k"].UNSIGNED_SHORT}]},hittestAttributes:["a_vertexOffset","a_texCoords"]};class V extends E{dispose(){}getGeometryType(){return w["d"].MARKER}supportsSymbology(e){return e!==w["e"].HEATMAP&&e!==w["e"].PIE_CHART}drawGeometry(e,t,n,i){const{context:o,painter:r,rendererInfo:s,state:c,passOptions:u,requestRender:f}=e,d=I["d"].load(n.materialKey),m=Object(C["b"])(d.data),h=Object(a["k"])(u)&&"hittest"===u.type,{shader:_,vertexLayout:p,hittestAttributes:g}=Object(a["s"])(m.programSpec,U);let x=l["r"].TRIANGLES,y=Object(v["g"])(d.data,p);h&&(y=this._getTriangleDesc(n.materialKey,y,g),x=l["r"].POINTS);const{attributes:b,bufferLayouts:T}=y,S=r.materialManager.getMaterialProgram(e,d,_,b,i);if(Object(a["k"])(f)&&!h&&!S.isCompiled)return void f();o.useProgram(S),d.textureBinding&&r.textureManager.bindTextures(o,S,d,!0),this._setSharedUniforms(S,e,t);const O=d.vvRotation?c.displayViewMat3:c.displayMat3;S.setUniformMatrix3fv("u_displayMat3",O),this._setSizeVVUniforms(d,S,s,t),this._setColorAndOpacityVVUniforms(d,S,s),this._setRotationVVUniforms(d,S,s);const w=n.target.getVAO(o,T,b,h);let E=n.indexCount,P=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;h&&(E/=3,P/=3),o.bindVAO(w),this._drawMarkers(e,t,S,x,E,P,h),o.bindVAO(null)}_drawMarkers(e,t,n,i,a,o,r){e.context.drawElements(i,a,l["k"].UNSIGNED_INT,o)}}var k=n("cc15");const j=F["a"].getLogger("esri.views.2d.engine.webgl.brushes.WGLBrushHeatmap"),B={vsPath:"heatmap/heatmapResolve",fsPath:"heatmap/heatmapResolve",attributes:new Map([["a_position",0]])};class G extends V{supportsSymbology(e){return e===w["e"].HEATMAP}dispose(){super.dispose(),this._accumulateOutputTexture=Object(a["e"])(this._accumulateOutputTexture),this._accumulateFramebuffer=Object(a["e"])(this._accumulateFramebuffer),this._resolveGradientTexture=Object(a["e"])(this._resolveGradientTexture),this._tileQuad=Object(a["e"])(this._tileQuad)}drawGeometry(e,t,n,i){const{defines:a}=this._loadQualityProfile(e.context);super.drawGeometry(e,t,n,i?[...i,...a]:a)}_drawMarkers(e,t,n,i,a,o,r){const{context:s}=e,c=s.getBoundFramebufferObject(),u=s.getViewport();this._prepareAccumulatePass(e,t,n,r),s.drawElements(i,a,l["k"].UNSIGNED_INT,o),r||this._drawResolvePass(e,t,c,u)}_prepareAccumulatePass(e,t,n,i){const{context:a,rendererInfo:o,state:r,displayLevel:s}=e,{rendererSchema:c}=o;Object(C["a"])(c,"heatmap");const{referenceScale:u,radius:f,isFieldActive:d}=c;this._loadResources(a),this._updateResources(c);const m=f*(0!==u?u/r.scale:1)*2**(t.key.level-s);n.setUniform1f("u_radius",m),i||(a.bindFramebuffer(this._accumulateFramebuffer),n.setUniform1f("u_isFieldActive",d),a.setViewport(0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height),a.setBlendingEnabled(!0),a.setBlendFunction(l["b"].ONE,l["b"].ONE),a.setClearColor(0,0,0,0),a.clear(l["e"].COLOR_BUFFER_BIT))}_drawResolvePass(e,t,n,i){const{context:a,painter:o,rendererInfo:r}=e,{rendererSchema:s}=r;Object(C["a"])(s,"heatmap");const{radius:c,minDensity:u,densityRange:f}=s,{defines:d}=this._loadQualityProfile(a),m=o.materialManager.getProgram(B,d);a.useProgram(m),this._setSharedUniforms(m,e,t),a.bindFramebuffer(n),a.setViewport(0,0,i.width,i.height),a.setBlendFunction(l["b"].ONE,l["b"].ONE_MINUS_SRC_ALPHA),a.bindTexture(this._accumulateOutputTexture,8),a.bindTexture(this._resolveGradientTexture,9),m.setUniform1i("u_texture",8),m.setUniform1i("u_gradient",9),m.setUniform2f("u_densityMinAndInvRange",u,1/f),m.setUniform1f("u_densityNormalization",3/(c*c*Math.PI)),this._tileQuad.draw()}_loadResources(e){const t=e.type===k["a"].WEBGL2,{dataType:n,samplingMode:i,shadingRate:a}=this._loadQualityProfile(e);null!=this._accumulateOutputTexture||(this._accumulateOutputTexture=new L["a"](e,{target:l["A"].TEXTURE_2D,pixelFormat:t?l["p"].RED:l["p"].RGBA,internalFormat:t?n===l["q"].FLOAT?l["v"].R32F:l["v"].R16F:l["p"].RGBA,dataType:n,samplingMode:i,wrapMode:l["B"].CLAMP_TO_EDGE,width:Math.round(512*a),height:Math.round(512*a)})),null!=this._accumulateFramebuffer||(this._accumulateFramebuffer=new R["a"](e,{},this._accumulateOutputTexture)),null!=this._resolveGradientTexture||(this._resolveGradientTexture=new L["a"](e,{target:l["A"].TEXTURE_2D,pixelFormat:l["p"].RGBA,dataType:l["q"].UNSIGNED_BYTE,samplingMode:l["z"].LINEAR,wrapMode:l["B"].CLAMP_TO_EDGE})),null!=this._tileQuad||(this._tileQuad=new r["a"](e,[0,0,1,0,0,1,1,1]))}_updateResources(e){const{gradientHash:t,gradient:n}=e;this._prevGradientHash!==t&&(this._resolveGradientTexture.resize(n.length/4,1),this._resolveGradientTexture.setData(n),this._prevGradientHash=t)}_loadQualityProfile(e){if(Object(a["j"])(this._qualityProfile)){const{textureFloat:t,colorBufferFloat:n}=e.capabilities,{textureFloat:i,textureFloatLinear:a,textureHalfFloat:o,textureHalfFloatLinear:r,HALF_FLOAT:s}=t,{textureFloat:c,textureHalfFloat:u,floatBlend:f}=n;let d,m;const h=i&&c&&f,_=o&&u;h&&a?(d=l["q"].FLOAT,m=l["z"].LINEAR):_&&r?(d=s,m=l["z"].LINEAR):h?(d=l["q"].FLOAT,m=l["z"].NEAREST):_?(d=s,m=l["z"].NEAREST):j.error("Missing webgl extensions for heatmap!"),m===l["z"].NEAREST&&j.warnOnce("Missing linear filtering webgl extension(s). Heatmap quality may be reduced."),this._qualityProfile={dataType:d,samplingMode:m,shadingRate:.5,defines:d===s?["heatmapPrecisionHalfFloat"]:[]}}return this._qualityProfile}}var H=n("6f75");class Y extends V{supportsSymbology(e){return e===w["e"].PIE_CHART}_drawMarkers(e,t,n,i,a,o,r){const{context:s}=e,{rendererInfo:c}=e,{rendererSchema:u}=c;Object(C["a"])(u,"pie-chart"),n.setUniform4fv("u_colors",u.colors),n.setUniform4fv("u_defaultColor",u.defaultColor),n.setUniform4fv("u_othersColor",u.othersColor),n.setUniform4fv("u_outlineColor",u.outlineColor),n.setUniform1f("u_donutRatio",u.holePercentage),n.setUniform1f("u_sectorThreshold",u.sectorThreshold),n.setUniform1f("u_outlineWidth",u.outlineWidth),s.drawElements(i,a,l["k"].UNSIGNED_INT,o)}}var W=n("ec5e"),q=n("38a4"),Z=n("8c71"),X=n("d114");class K extends s["a"]{constructor(){super(...arguments),this._color=Object(p["c"])(1,0,0,1),this._patternMatrix=Object(Z["b"])(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao&&(this._vao.dispose(),this._vao=null)}drawMany(e,t){const{context:n,painter:i,styleLayerUID:o,requestRender:r}=e;this._loadWGLResources(e);const s=e.displayLevel,c=e.styleLayer,u=c.backgroundMaterial,f=i.vectorTilesMaterialManager,m=c.getPaintValue("background-color",s),h=c.getPaintValue("background-opacity",s),_=c.getPaintValue("background-pattern",s),p=void 0!==_,v=m[3]*h,g=1|window.devicePixelRatio,x=e.spriteMosaic;let y,b;const T=g>d["W"]?2:1,S=e.drawPhase===w["c"].HITTEST,O=this._programOptions;O.id=S,O.pattern=p;const I=f.getMaterialProgram(n,u,O);if(!Object(a["k"])(r)||S||I.isCompiled){if(n.bindVAO(this._vao),n.useProgram(I),p){const e=x.getMosaicItemPosition(_,!0);if(Object(a["k"])(e)){const{tl:t,br:i,page:o}=e;y=i[0]-t[0],b=i[1]-t[1];const r=x.getPageSize(o);Object(a["k"])(r)&&(x.bind(n,l["z"].LINEAR,o,d["Y"]),I.setUniform4f("u_tlbr",t[0],t[1],i[0],i[1]),I.setUniform2fv("u_mosaicSize",r),I.setUniform1i("u_texture",d["Y"]))}I.setUniform1f("u_opacity",h)}else this._color[0]=v*m[0],this._color[1]=v*m[1],this._color[2]=v*m[2],this._color[3]=v,I.setUniform4fv("u_color",this._color);if(I.setUniform1f("u_depth",c.z||0),S){const e=Object(X["c"])(o+1);I.setUniform4fv("u_id",e)}for(const e of t){if(I.setUniform1f("u_coord_range",e.rangeX),I.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),p){const t=Math.max(2**(Math.round(s)-e.key.level),1),n=T*e.width*t,i=n/Object(q["n"])(y),a=n/Object(q["n"])(b);this._patternMatrix[0]=i,this._patternMatrix[4]=a,I.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix)}n.setStencilFunction(l["h"].EQUAL,e.stencilRef,255),n.drawArrays(l["r"].TRIANGLE_STRIP,0,4)}}else r()}_loadWGLResources(e){if(this._vao)return;const{context:t,styleLayer:n}=e,i=n.backgroundMaterial,a=new Int8Array([0,0,1,0,0,1,1,1]),o=M["a"].createVertex(t,l["D"].STATIC_DRAW,a),r=new z["a"](t,i.getAttributeLocations(),i.getLayoutInfo(),{geometry:o});this._vao=r}}var Q=n("ef89");class $ extends s["a"]{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(e,t){const{context:n,displayLevel:i,requiredLevel:o,state:r,drawPhase:s,painter:c,spriteMosaic:u,styleLayerUID:f,requestRender:d}=e;if(!t.some(e=>{var t,n;return null!=(t=null==(n=e.layerData.get(f))?void 0:n.circleIndexCount)&&t}))return;const m=e.styleLayer,h=m.circleMaterial,_=c.vectorTilesMaterialManager,p=1.2,v=m.getPaintValue("circle-translate",i),g=m.getPaintValue("circle-translate-anchor",i),x=s===w["c"].HITTEST,y=this._programOptions;y.id=x;const b=_.getMaterialProgram(n,h,y);if(!x&&Object(a["k"])(d)&&!b.isCompiled)return void d();n.useProgram(b),b.setUniformMatrix3fv("u_displayMat3",g===Q["i"].VIEWPORT?r.displayMat3:r.displayViewMat3),b.setUniform2fv("u_circleTranslation",v),b.setUniform1f("u_depth",m.z),b.setUniform1f("u_antialiasingWidth",p);let T=-1;if(x){const e=Object(X["c"])(f+1);b.setUniform4fv("u_id",e)}for(const S of t){if(!S.layerData.has(f))continue;S.key.level!==T&&(T=S.key.level,h.setDataUniforms(b,i,m,T,u));const e=S.layerData.get(f);if(!e.circleIndexCount)continue;e.prepareForRendering(n);const t=e.circleVertexArrayObject;Object(a["j"])(t)||(n.bindVAO(t),b.setUniformMatrix3fv("u_dvsMat3",S.transforms.dvs),o!==S.key.level?n.setStencilFunction(l["h"].EQUAL,S.stencilRef,255):n.setStencilFunction(l["h"].GREATER,255,255),n.drawElements(l["r"].TRIANGLES,e.circleIndexCount,l["k"].UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.circleIndexStart),S.triangleCount+=e.circleIndexCount/3)}}}const J=1/65536;class ee extends s["a"]{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1}}dispose(){}drawMany(e,t){const{displayLevel:n,drawPhase:i,renderPass:a,spriteMosaic:o,styleLayerUID:r}=e;let s=!1;for(const y of t)if(y.layerData.has(r)){const e=y.layerData.get(r);if(e.fillIndexCount>0||e.outlineIndexCount>0){s=!0;break}}if(!s)return;const l=e.styleLayer,c=l.getPaintProperty("fill-pattern"),u=void 0!==c,f=u&&c.isDataDriven;let d;if(u&&!f){const e=c.getValue(n);d=o.getMosaicItemPosition(e,!0)}const m=!u&&l.getPaintValue("fill-antialias",n);let h,_=!0,p=1;if(!u){const e=l.getPaintProperty("fill-color"),t=l.getPaintProperty("fill-opacity");if((null==e||!e.isDataDriven)&&(null==t||!t.isDataDriven)){const e=l.getPaintValue("fill-color",n);p=l.getPaintValue("fill-opacity",n)*e[3],p>=1&&(_=!1)}}if(_&&"opaque"===a)return;i===w["c"].HITTEST&&(h=Object(X["c"])(r+1));const v=l.getPaintValue("fill-translate",n),g=l.getPaintValue("fill-translate-anchor",n);(_||"translucent"!==a)&&this._drawFill(e,r,l,t,v,g,u,d,f,h);const x=!l.hasDataDrivenOutlineColor&&l.outlineUsesFillColor&&p<1;m&&"opaque"!==a&&!x&&this._drawOutline(e,r,l,t,v,g,h)}_drawFill(e,t,n,i,o,r,s,c,u,f){if(s&&!u&&Object(a["j"])(c))return;const{context:m,displayLevel:h,state:_,drawPhase:p,painter:v,pixelRatio:g,spriteMosaic:x,requestRender:y}=e,b=n.fillMaterial,T=v.vectorTilesMaterialManager,S=g>d["W"]?2:1,O=p===w["c"].HITTEST,I=this._fillProgramOptions;I.id=O,I.pattern=s;const E=T.getMaterialProgram(m,b,I);if(Object(a["k"])(y)&&!O&&!E.isCompiled)return void y();if(m.useProgram(E),Object(a["k"])(c)){const{page:e}=c,t=x.getPageSize(e);Object(a["k"])(t)&&(x.bind(m,l["z"].LINEAR,e,d["Y"]),E.setUniform2fv("u_mosaicSize",t),E.setUniform1i("u_texture",d["Y"]))}E.setUniformMatrix3fv("u_displayMat3",r===Q["i"].VIEWPORT?_.displayMat3:_.displayViewMat3),E.setUniform2fv("u_fillTranslation",o),E.setUniform1f("u_depth",n.z+J),O&&E.setUniform4fv("u_id",f);let C=-1;for(const w of i){if(!w.layerData.has(t))continue;w.key.level!==C&&(C=w.key.level,b.setDataUniforms(E,h,n,C,x));const e=w.layerData.get(t);if(!e.fillIndexCount)continue;e.prepareForRendering(m);const i=e.fillVertexArrayObject;if(!Object(a["j"])(i)){if(m.bindVAO(i),E.setUniformMatrix3fv("u_dvsMat3",w.transforms.dvs),m.setStencilFunction(l["h"].EQUAL,w.stencilRef,255),s){const e=Math.max(2**(Math.round(h)-w.key.level),1),t=w.rangeX/(S*w.width*e);E.setUniform1f("u_patternFactor",t)}if(u){const t=e.patternMap;if(!t)continue;for(const[e,n]of t){const t=x.getPageSize(e);Object(a["k"])(t)&&(x.bind(m,l["z"].LINEAR,e,d["Y"]),E.setUniform2fv("u_mosaicSize",t),E.setUniform1i("u_texture",d["Y"]),m.drawElements(l["r"].TRIANGLES,n[1],l["k"].UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else m.drawElements(l["r"].TRIANGLES,e.fillIndexCount,l["k"].UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.fillIndexStart);w.triangleCount+=e.fillIndexCount/3}}}_drawOutline(e,t,n,i,o,r,s){const{context:c,displayLevel:u,state:f,drawPhase:d,painter:m,pixelRatio:h,spriteMosaic:_,requestRender:p}=e,v=n.outlineMaterial,g=m.vectorTilesMaterialManager,x=.75/h,y=d===w["c"].HITTEST,b=this._outlineProgramOptions;b.id=y;const T=g.getMaterialProgram(c,v,b);if(Object(a["k"])(p)&&!y&&!T.isCompiled)return void p();c.useProgram(T),T.setUniformMatrix3fv("u_displayMat3",r===Q["i"].VIEWPORT?f.displayMat3:f.displayViewMat3),T.setUniform2fv("u_fillTranslation",o),T.setUniform1f("u_depth",n.z+J),T.setUniform1f("u_outline_width",x),y&&T.setUniform4fv("u_id",s);let S=-1;for(const O of i){if(!O.layerData.has(t))continue;O.key.level!==S&&(S=O.key.level,v.setDataUniforms(T,u,n,S,_));const e=O.layerData.get(t);if(e.prepareForRendering(c),!e.outlineIndexCount)continue;const i=e.outlineVertexArrayObject;Object(a["j"])(i)||(c.bindVAO(i),T.setUniformMatrix3fv("u_dvsMat3",O.transforms.dvs),c.setStencilFunction(l["h"].EQUAL,O.stencilRef,255),c.drawElements(l["r"].TRIANGLES,e.outlineIndexCount,l["k"].UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.outlineIndexStart),O.triangleCount+=e.outlineIndexCount/3)}}}class te extends s["a"]{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1}}dispose(){}drawMany(e,t){const{context:n,displayLevel:i,state:o,drawPhase:r,painter:s,pixelRatio:c,spriteMosaic:u,styleLayerUID:f,requestRender:m}=e;if(!t.some(e=>{var t,n;return null!=(t=null==(n=e.layerData.get(f))?void 0:n.lineIndexCount)&&t}))return;const h=e.styleLayer,_=h.lineMaterial,p=s.vectorTilesMaterialManager,v=h.getPaintValue("line-translate",i),g=h.getPaintValue("line-translate-anchor",i),x=h.getPaintProperty("line-pattern"),y=void 0!==x,b=y&&x.isDataDriven;let T,S;if(y&&!b){const e=x.getValue(i);T=u.getMosaicItemPosition(e)}let O=!1;if(!y){const e=h.getPaintProperty("line-dasharray");if(S=void 0!==e,O=S&&e.isDataDriven,S&&!O){const t=e.getValue(i),n=h.getDashKey(t,h.getLayoutValue("line-cap",i));T=u.getMosaicItemPosition(n)}}const I=1/c,E=r===w["c"].HITTEST,C=this._programOptions;C.id=E,C.pattern=y,C.sdf=S;const P=p.getMaterialProgram(n,_,C);if(Object(a["k"])(m)&&!E&&!P.isCompiled)return void m();if(n.useProgram(P),P.setUniformMatrix3fv("u_displayViewMat3",o.displayViewMat3),P.setUniformMatrix3fv("u_displayMat3",g===Q["i"].VIEWPORT?o.displayMat3:o.displayViewMat3),P.setUniform2fv("u_lineTranslation",v),P.setUniform1f("u_depth",h.z),P.setUniform1f("u_antialiasing",I),E){const e=Object(X["c"])(f+1);P.setUniform4fv("u_id",e)}if(T&&Object(a["k"])(T)){const{page:e}=T,t=u.getPageSize(e);Object(a["k"])(t)&&(u.bind(n,l["z"].LINEAR,e,d["Y"]),P.setUniform2fv("u_mosaicSize",t),P.setUniform1i("u_texture",d["Y"]))}let A=-1;for(const w of t){if(!w.layerData.has(f))continue;w.key.level!==A&&(A=w.key.level,_.setDataUniforms(P,i,h,A,u));const e=2**(i-A)/c;P.setUniform1f("u_zoomFactor",e);const t=w.layerData.get(f);if(!t.lineIndexCount)continue;t.prepareForRendering(n);const o=t.lineVertexArrayObject;if(!Object(a["j"])(o)){if(n.bindVAO(o),P.setUniformMatrix3fv("u_dvsMat3",w.transforms.dvs),n.setStencilFunction(l["h"].EQUAL,w.stencilRef,255),b||O){const e=t.patternMap;if(!e)continue;for(const[t,i]of e){const e=u.getPageSize(t);Object(a["k"])(e)&&(u.bind(n,l["z"].LINEAR,t,d["Y"]),P.setUniform2fv("u_mosaicSize",e),P.setUniform1i("u_texture",d["Y"]),n.drawElements(l["r"].TRIANGLES,i[1],l["k"].UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i[0]))}}else n.drawElements(l["r"].TRIANGLES,t.lineIndexCount,l["k"].UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t.lineIndexStart);w.triangleCount+=t.lineIndexCount/3}}}}var ne=n("738e"),ie=n("db21"),ae=n("1d01");const oe=1/65536;class re extends s["a"]{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=Object(ne["a"])()}dispose(){}drawMany(e,t){const{drawPhase:n,styleLayerUID:i}=e,a=e.styleLayer;let o;n===w["c"].HITTEST&&(o=Object(X["c"])(i+1)),this._drawIcons(e,a,t,o),this._drawText(e,a,t,o)}_drawIcons(e,t,n,i){const{context:o,displayLevel:r,drawPhase:s,painter:l,spriteMosaic:c,state:u,styleLayerUID:f,requestRender:m}=e,h=t.iconMaterial,_=l.vectorTilesMaterialManager;let p,v=!1;for(const a of n)if(a.layerData.has(f)&&(p=a.layerData.get(f),p.iconPerPageElementsMap.size>0)){v=!0;break}if(!v)return;const g=t.getPaintValue("icon-translate",r),x=t.getPaintValue("icon-translate-anchor",r);let y=t.getLayoutValue("icon-rotation-alignment",r);y===Q["a"].AUTO&&(y=t.getLayoutValue("symbol-placement",r)===Q["e"].POINT?Q["a"].VIEWPORT:Q["a"].MAP);const b=y===Q["a"].MAP,T=t.getLayoutValue("icon-keep-upright",r)&&b,S=p.isIconSDF,O=s===w["c"].HITTEST,I=this._iconProgramOptions;I.id=O,I.sdf=S;const E=_.getMaterialProgram(o,h,I);if(Object(a["k"])(m)&&!O&&!E.isCompiled)return void m();o.useProgram(E),E.setUniformMatrix3fv("u_displayViewMat3",y===Q["a"].MAP?u.displayViewMat3:u.displayMat3),E.setUniformMatrix3fv("u_displayMat3",x===Q["i"].VIEWPORT?u.displayMat3:u.displayViewMat3),E.setUniform2fv("u_iconTranslation",g),E.setUniform1f("u_depth",t.z),E.setUniform1f("u_mapRotation",Object(ae["b"])(u.rotation)),E.setUniform1f("u_keepUpright",T?1:0),E.setUniform1f("u_level",10*r),E.setUniform1i("u_texture",d["Y"]),E.setUniform1f("u_fadeDuration",ie["d"]/1e3),O&&E.setUniform4fv("u_id",i);let C=-1;for(const d of n){if(!d.layerData.has(f))continue;if(d.key.level!==C&&(C=d.key.level,h.setDataUniforms(E,r,t,C,c)),p=d.layerData.get(f),0===p.iconPerPageElementsMap.size)continue;p.prepareForRendering(o),p.updateOpacityInfo();const n=p.iconVertexArrayObject;if(!Object(a["j"])(n)){o.bindVAO(n),E.setUniformMatrix3fv("u_dvsMat3",d.transforms.dvs),E.setUniform1f("u_time",(performance.now()-p.lastOpacityUpdate)/1e3);for(const[t,n]of p.iconPerPageElementsMap)this._renderIconRange(e,E,n,t,d)}}}_renderIconRange(e,t,n,i,a){const{context:o,spriteMosaic:r}=e;this._spritesTextureSize[0]=r.getWidth(i)/4,this._spritesTextureSize[1]=r.getHeight(i)/4,t.setUniform2fv("u_mosaicSize",this._spritesTextureSize),r.bind(o,l["z"].LINEAR,i,d["Y"]),o.setStencilTestEnabled(!0),o.setStencilFunction(l["h"].GREATER,255,255),o.setStencilWriteMask(0),o.drawElements(l["r"].TRIANGLES,n[1],l["k"].UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]),a.triangleCount+=n[1]/3}_drawText(e,t,n,i){const{context:o,displayLevel:r,drawPhase:s,glyphMosaic:c,painter:u,pixelRatio:f,spriteMosaic:m,state:h,styleLayerUID:_,requestRender:p}=e,v=t.textMaterial,g=u.vectorTilesMaterialManager;let x,y=!1;for(const a of n)if(a.layerData.has(_)&&(x=a.layerData.get(_),x.glyphPerPageElementsMap.size>0)){y=!0;break}if(!y)return;const b=t.getPaintProperty("text-opacity");if(b&&!b.isDataDriven&&0===b.getValue(r))return;const T=t.getPaintProperty("text-color"),S=!T||T.isDataDriven||T.getValue(r)[3]>0,O=t.getPaintProperty("text-halo-width"),I=t.getPaintProperty("text-halo-color"),E=(!O||O.isDataDriven||O.getValue(r)>0)&&(!I||I.isDataDriven||I.getValue(r)[3]>0);if(!S&&!E)return;const C=3;let P=t.getLayoutValue("text-rotation-alignment",r);P===Q["a"].AUTO&&(P=t.getLayoutValue("symbol-placement",r)===Q["e"].POINT?Q["a"].VIEWPORT:Q["a"].MAP);const A=P===Q["a"].MAP,M=t.getLayoutValue("text-keep-upright",r)&&A,R=s===w["c"].HITTEST,D=.8*C/f;this._glyphTextureSize||(this._glyphTextureSize=Object(ne["b"])(c.width/4,c.height/4));const L=t.getPaintValue("text-translate",r),z=t.getPaintValue("text-translate-anchor",r),N=this._sdfProgramOptions;N.id=R;const F=g.getMaterialProgram(o,v,N);if(Object(a["k"])(p)&&!R&&!F.isCompiled)return void p();o.useProgram(F),F.setUniformMatrix3fv("u_displayViewMat3",P===Q["a"].MAP?h.displayViewMat3:h.displayMat3),F.setUniformMatrix3fv("u_displayMat3",z===Q["i"].VIEWPORT?h.displayMat3:h.displayViewMat3),F.setUniform2fv("u_textTranslation",L),F.setUniform1f("u_depth",t.z+oe),F.setUniform2fv("u_mosaicSize",this._glyphTextureSize),F.setUniform1f("u_mapRotation",Object(ae["b"])(h.rotation)),F.setUniform1f("u_keepUpright",M?1:0),F.setUniform1f("u_level",10*r),F.setUniform1i("u_texture",d["X"]),F.setUniform1f("u_antialiasingWidth",D),F.setUniform1f("u_fadeDuration",ie["d"]/1e3),R&&F.setUniform4fv("u_id",i);let U=-1;for(const d of n){if(!d.layerData.has(_))continue;if(d.key.level!==U&&(U=d.key.level,v.setDataUniforms(F,r,t,U,m)),x=d.layerData.get(_),0===x.glyphPerPageElementsMap.size)continue;x.prepareForRendering(o),x.updateOpacityInfo();const e=x.textVertexArrayObject;if(Object(a["j"])(e))continue;o.bindVAO(e),F.setUniformMatrix3fv("u_dvsMat3",d.transforms.dvs),o.setStencilTestEnabled(!0),o.setStencilFunction(l["h"].GREATER,255,255),o.setStencilWriteMask(0);const n=(performance.now()-x.lastOpacityUpdate)/1e3;F.setUniform1f("u_time",n),x.glyphPerPageElementsMap.forEach((e,t)=>{this._renderGlyphRange(o,e,t,c,F,E,S,d)})}}_renderGlyphRange(e,t,n,i,a,o,r,s){i.bind(e,l["z"].LINEAR,n,d["X"]),o&&(a.setUniform1f("u_halo",1),e.drawElements(l["r"].TRIANGLES,t[1],l["k"].UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),s.triangleCount+=t[1]/3),r&&(a.setUniform1f("u_halo",0),e.drawElements(l["r"].TRIANGLES,t[1],l["k"].UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),s.triangleCount+=t[1]/3)}}const se=e=>Object(v["g"])(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:l["k"].SHORT},{location:1,name:"a_id",count:4,type:l["k"].UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:l["k"].UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_haloColor",count:4,type:l["k"].UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_texAndSize",count:4,type:l["k"].UNSIGNED_BYTE},{location:5,name:"a_refSymbolAndPlacementOffset",count:4,type:l["k"].UNSIGNED_BYTE},{location:6,name:"a_glyphData",count:4,type:l["k"].UNSIGNED_BYTE},{location:7,name:"a_vertexOffset",count:2,type:l["k"].SHORT},{location:8,name:"a_texCoords",count:2,type:l["k"].UNSIGNED_SHORT}]});class le extends E{dispose(){}getGeometryType(){return w["d"].LABEL}supportsSymbology(e){return!0}drawGeometry(e,t,n,i){const{context:o,painter:r,state:s,rendererInfo:c,passOptions:u,requestRender:f}=e,d=I["b"].load(n.materialKey),m=Object(a["k"])(u)&&"hittest"===u.type,h=d.mapAligned?1:0;if(!h&&Math.abs(t.key.level-Math.round(100*e.displayLevel)/100)>=1)return;const{bufferLayouts:_,attributes:p}=se(d),v=r.materialManager.getMaterialProgram(e,d,"materials/label",p,i);if(Object(a["k"])(f)&&!m&&!v.isCompiled)return void f();e.context.setStencilFunction(l["h"].EQUAL,0,255),o.useProgram(v),this._setSharedUniforms(v,e,t),r.textureManager.bindTextures(o,v,d);const g=1===h?s.displayViewMat3:s.displayMat3;this._setSizeVVUniforms(d,v,c,t),v.setUniform1f("u_mapRotation",Math.floor(s.rotation/360*254)),v.setUniform1f("u_mapAligned",h),v.setUniformMatrix3fv("u_displayMat3",g),v.setUniform1f("u_opacity",1),v.setUniform2fv("u_screenSize",e.state.size),v.setUniform1f("u_isHalo",1);const x=n.target.getVAO(o,_,p),y=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;o.bindVAO(x),o.drawElements(l["r"].TRIANGLES,n.indexCount,l["k"].UNSIGNED_INT,y),v.setUniform1f("u_isHalo",0),o.drawElements(l["r"].TRIANGLES,n.indexCount,l["k"].UNSIGNED_INT,y),o.setStencilTestEnabled(!0),o.setBlendingEnabled(!0)}}const ce=e=>Object(v["g"])(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:l["k"].SHORT},{location:1,name:"a_id",count:4,type:l["k"].UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:l["k"].UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_offsetAndNormal",count:4,type:l["k"].BYTE},{location:4,name:"a_accumulatedDistanceAndHalfWidth",count:2,type:l["k"].UNSIGNED_SHORT},{location:5,name:"a_tlbr",count:4,type:l["k"].UNSIGNED_SHORT},{location:6,name:"a_segmentDirection",count:4,type:l["k"].BYTE},{location:7,name:"a_aux",count:2,type:l["k"].UNSIGNED_SHORT},{location:8,name:"a_zoomRange",count:2,type:l["k"].UNSIGNED_SHORT}]});class ue extends E{dispose(){}getGeometryType(){return w["d"].LINE}supportsSymbology(e){return!0}drawGeometry(e,t,n,i){const{context:o,painter:r,rendererInfo:s,displayLevel:c,passOptions:u,requestRender:f}=e,d=I["c"].load(n.materialKey),m=Object(a["k"])(u)&&"hittest"===u.type;let h=ce(d),_=l["r"].TRIANGLES;m&&(h=this._getTriangleDesc(n.materialKey,h),_=l["r"].POINTS);const{attributes:p,bufferLayouts:v}=h,g=r.materialManager.getMaterialProgram(e,d,"materials/line",p,i);if(Object(a["k"])(f)&&!m&&!g.isCompiled)return void f();const x=1/e.pixelRatio,y=0;o.useProgram(g),this._setSharedUniforms(g,e,t),d.textureBinding&&r.textureManager.bindTextures(o,g,d);const b=2**(c-t.key.level);g.setUniform1f("u_zoomFactor",b),g.setUniform1f("u_blur",y+x),g.setUniform1f("u_antialiasing",x),this._setSizeVVUniforms(d,g,s,t),this._setColorAndOpacityVVUniforms(d,g,s),o.setFaceCullingEnabled(!1);const T=n.target.getVAO(o,v,p,m);let S=n.indexCount,O=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;m&&(S/=3,O/=3),o.bindVAO(T),o.drawElements(_,S,l["k"].UNSIGNED_INT,O)}}const fe=e=>Object(v["g"])(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:l["k"].SHORT},{location:1,name:"a_id",count:4,type:l["k"].UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:l["k"].UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_haloColor",count:4,type:l["k"].UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_texFontSize",count:4,type:l["k"].UNSIGNED_BYTE},{location:5,name:"a_aux",count:4,type:l["k"].BYTE},{location:6,name:"a_zoomRange",count:2,type:l["k"].UNSIGNED_SHORT},{location:7,name:"a_vertexOffset",count:2,type:l["k"].SHORT},{location:8,name:"a_texCoords",count:2,type:l["k"].UNSIGNED_SHORT}]});class de extends E{dispose(){}getGeometryType(){return w["d"].TEXT}supportsSymbology(e){return!0}drawGeometry(e,t,n,i){const{context:o,painter:r,rendererInfo:s,state:c,passOptions:u,requestRender:f}=e,d=I["f"].load(n.materialKey),m=Object(a["k"])(u)&&"hittest"===u.type,{bufferLayouts:h,attributes:_}=fe(d),p=r.materialManager.getMaterialProgram(e,d,"materials/text",_,i);if(Object(a["k"])(f)&&!m&&!p.isCompiled)return void f();o.useProgram(p);let v=l["r"].TRIANGLES;m&&(v=l["r"].POINTS),this._setSharedUniforms(p,e,t),r.textureManager.bindTextures(o,p,d),p.setUniformMatrix3fv("u_displayMat3",c.displayMat3),p.setUniformMatrix3fv("u_displayViewMat3",c.displayViewMat3),this._setSizeVVUniforms(d,p,s,t),this._setColorAndOpacityVVUniforms(d,p,s),this._setRotationVVUniforms(d,p,s),p.setUniform1f("u_isHalo",1);const g=n.target.getVAO(o,h,_),x=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;o.bindVAO(g),o.drawElements(l["r"].TRIANGLES,n.indexCount,l["k"].UNSIGNED_INT,x),p.setUniform1f("u_isHalo",0),o.drawElements(v,n.indexCount,l["k"].UNSIGNED_INT,x)}}const me={marker:V,line:ue,fill:A,text:de,label:le,clip:b,stencil:W["a"],bitmap:_,overlay:S,raster:u,rasterVF:f["a"],flow:i["a"],tileInfo:H["a"],vtlBackground:K,vtlFill:ee,vtlLine:te,vtlCircle:$,vtlSymbol:re,dotDensity:N,heatmap:G,pieChart:Y}},"3bc3":function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var i=n("b2b2"),a=n("f079"),o=n("d17d");const r=new Float32Array([.27058823529411763,.4588235294117647,.7098039215686275,1,.396078431372549,.5372549019607843,.7215686274509804,1,.5176470588235295,.6196078431372549,.7294117647058823,1,.6352941176470588,.7058823529411765,.7411764705882353,1,.7529411764705882,.8,.7450980392156863,1,.8705882352941177,.8901960784313725,.7490196078431373,1,1,1,.7490196078431373,1,1,.8627450980392157,.6313725490196078,1,.9803921568627451,.7254901960784313,.5176470588235295,1,.9607843137254902,.596078431372549,.4117647058823529,1,.9294117647058824,.4588235294117647,.3176470588235294,1,.9098039215686274,.08235294117647059,.08235294117647059,1]),s={beaufort_ft:r,beaufort_m:r,beaufort_km:r,beaufort_mi:r,beaufort_kn:new Float32Array([.1568627450980392,.5725490196078431,.7803921568627451,1,.34901960784313724,.6352941176470588,.7294117647058823,1,.5058823529411764,.7019607843137254,.6705882352941176,1,.6274509803921569,.7607843137254902,.6078431372549019,1,.7490196078431373,.8313725490196079,.5411764705882353,1,.8549019607843137,.9019607843137255,.4666666666666667,1,.9803921568627451,.9803921568627451,.39215686274509803,1,.9882352941176471,.8352941176470589,.3254901960784314,1,.9882352941176471,.7019607843137254,.4,1,.9803921568627451,.5529411764705883,.20392156862745098,1,.9686274509803922,.43137254901960786,.16470588235294117,1,.9411764705882353,.2784313725490196,.11372549019607843,1]),classified_arrow:new Float32Array([.2196078431372549,.6588235294117647,0,1,.5450980392156862,1.2117647058823529,0,1,1,1,0,1,1,.5019607843137255,0,1,1,0,0,1]),ocean_current_m:new Float32Array([.3058823529411765,.10196078431372549,.6,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),ocean_current_kn:new Float32Array([0,0,0,1,0,.1450980392156863,.39215686274509803,1,.3058823529411765,.10196078431372549,.6,1,.592156862745098,0,.39215686274509803,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.6941176470588235,.3058823529411765,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.7019607843137254,.20392156862745098,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),single_arrow:new Float32Array([0,92/255,230/255,1]),wind_speed:new Float32Array([0,0,0,1])};class l extends a["a"]{constructor(){super(...arguments),this._desc={magdir:{vsPath:"raster/magdir",fsPath:"raster/magdir",attributes:new Map([["a_pos",0],["a_offset",1],["a_vv",2]])},scalar:{vsPath:"raster/scalar",fsPath:"raster/scalar",attributes:new Map([["a_pos",0],["a_offset",1],["a_vv",2]])}}}dispose(){}prepareState({context:e},t){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(o["b"].ONE,o["b"].ONE_MINUS_SRC_ALPHA,o["b"].ONE,o["b"].ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilOp(o["w"].KEEP,o["w"].KEEP,o["w"].REPLACE),e.setStencilFunction(o["h"].EQUAL,t.stencilRef,255)}draw(e,t){if(Object(i["j"])(t.source)||0===t.source.validPixelCount)return;const{timeline:n}=e;if(n.begin(this.name),t.updateVectorFieldVAO(e),"scalar"===e.renderPass){const n=t.vaoData.scalar;n&&this._drawScalars(e,t,n.vao,n.elementCount)}else{const n=t.vaoData.magdir;n&&this._drawTriangles(e,t,n.vao,n.elementCount)}n.end(this.name)}_drawTriangles(e,t,n,a){const{context:r,painter:l,requestRender:c}=e,{symbolizerParameters:u}=t,f=u.dataRange?["dataRange"]:[];"geographic"===u.rotationType&&f.push("rotationGeographic");const d=l.materialManager.getProgram(this._desc.magdir,f);if(Object(i["k"])(c)&&!d.isCompiled)return void c();r.useProgram(d);const{coordScale:m,opacity:h,transforms:_}=t;d.setUniform2fv("u_coordScale",m),d.setUniform1f("u_opacity",h),d.setUniformMatrix3fv("u_dvsMat3",_.dvs);const{style:p,dataRange:v,rotation:g,symbolPercentRange:x}=u;d.setUniform4fv("u_colors",s[p]||s.single_arrow),d.setUniform2fv("u_dataRange",v),d.setUniform1f("u_rotation",g),d.setUniform2fv("u_symbolPercentRange",x);const y=this._getSymbolSize(e,t);d.setUniform2fv("u_symbolSize",y),r.bindVAO(n),r.drawElements(o["r"].TRIANGLES,a,o["k"].UNSIGNED_INT,0)}_drawScalars(e,t,n,a){const{context:r,painter:s,requestRender:l}=e,{symbolizerParameters:c}=t,u=[];"wind_speed"===c.style?u.push("innerCircle"):c.dataRange&&u.push("dataRange"),"geographic"===c.rotationType&&u.push("rotationGeographic");const f=s.materialManager.getProgram(this._desc.scalar,u);if(Object(i["k"])(l)&&!f.isCompiled)return void l();r.useProgram(f);const{coordScale:d,opacity:m,transforms:h}=t;f.setUniform2fv("u_coordScale",d),f.setUniform1f("u_opacity",m),f.setUniformMatrix3fv("u_dvsMat3",h.dvs);const{dataRange:_,symbolPercentRange:p}=c;f.setUniform2fv("u_dataRange",_),f.setUniform2fv("u_symbolPercentRange",p);const v=this._getSymbolSize(e,t);f.setUniform2fv("u_symbolSize",v),r.bindVAO(n),r.drawElements(o["r"].TRIANGLES,a,o["k"].UNSIGNED_INT,0)}_getSymbolSize(e,t){const n=t.key?2**(e.displayLevel-t.key.level):t.resolution/e.state.resolution,{symbolTileSize:i}=t.symbolizerParameters;return[i/(Math.round((t.width-t.offset[0])/i)*i)/n,i/(Math.round((t.height-t.offset[1])/i)*i)/n]}}},"3e27":function(e,t,n){"use strict";n.d(t,"a",(function(){return _}));var i,a=n("a4ee"),o=(n("c120"),n("ce50")),r=n("6a0e"),s=n("7ffa"),l=n("e92d"),c=n("b2b2"),u=n("59b2"),f=n("1a3e"),d=n("d386");const m=l["a"].getLogger("esri.layers.support.PixelBlock");let h=i=class extends r["a"]{constructor(e){super(e),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.pixels=null,this.statistics=null}static createEmptyBand(e,t){return new(i.getPixelArrayConstructor(e))(t)}static getPixelArrayConstructor(e){let t;switch(e){case"u1":case"u2":case"u4":case"u8":t=Uint8Array;break;case"u16":t=Uint16Array;break;case"u32":t=Uint32Array;break;case"s8":t=Int8Array;break;case"s16":t=Int16Array;break;case"s32":t=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":t=Float32Array;break;case"f64":t=Float64Array}return t}castPixelType(e){if(!e)return"f32";let t=e.toLowerCase();return["u1","u2","u4"].includes(t)?t="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(t)||(t="f32"),t}getPlaneCount(){return this.pixels&&this.pixels.length}addData(e){if(!e.pixels||e.pixels.length!==this.width*this.height)throw new o["a"]("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(e.pixels),this.statistics.push(e.statistics||{minValue:null,maxValue:null})}getAsRGBA(){const e=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(e);break;default:this._fillFrom8Bit(e)}return new Uint8ClampedArray(e)}getAsRGBAFloat(){const e=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(e),e}updateStatistics(){this.statistics=this.pixels.map(e=>this._calculateBandStatistics(e,this.mask));const e=this.mask;let t=0;if(e)for(let n=0;n<e.length;n++)e[n]&&t++;else t=this.width*this.height;this.validPixelCount=t}clamp(e){if(!e||"f64"===e||"f32"===e)return;let t;switch(e){case"u8":t=[0,255];break;case"u16":t=[0,65535];break;case"u32":t=[0,4294967295];break;case"s8":t=[-128,127];break;case"s16":t=[-32768,32767];break;case"s32":t=[-2147483648,2147483647];break;default:t=[-34e38,34e38]}const[n,a]=t,o=this.pixels,r=this.width*this.height,s=o.length;let l,c,u;const f=[];for(let d=0;d<s;d++){u=i.createEmptyBand(e,r),l=o[d];for(let e=0;e<r;e++)c=l[e],u[e]=c>a?a:c<n?n:c;f.push(u)}this.pixels=f,this.pixelType=e}extractBands(e){if(Object(c["j"])(e)||0===e.length||null==this.pixels||0===this.pixels.length)return this;const t=this.pixels.length,n=e.some(e=>e>=this.pixels.length),a=t===e.length&&!e.some((e,t)=>e!==t);return n||a?this:new i({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:e.map(e=>this.pixels[e]),statistics:this.statistics&&e.map(e=>this.statistics[e])})}clone(){const e=new i({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let t;this.mask&&(this.mask instanceof Uint8Array?e.mask=new Uint8Array(this.mask):e.mask=this.mask.slice(0));const n=i.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){e.pixels=[];const i=this.pixels[0].slice;for(t=0;t<this.pixels.length;t++)e.pixels[t]=i?this.pixels[t].slice(0,this.pixels[t].length):new n(this.pixels[t])}if(this.statistics)for(e.statistics=[],t=0;t<this.statistics.length;t++)e.statistics[t]=Object(s["a"])(this.statistics[t]);return e}_fillFrom8Bit(e){const{mask:t,maskIsAlpha:n,pixels:i}=this;if(!e||!i||!i.length)return void m.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let a,o,r,s;a=o=r=i[0],i.length>=3?(o=i[1],r=i[2]):2===i.length&&(o=i[1]);const l=new Uint32Array(e),c=this.width*this.height;if(a.length===c)if(t&&t.length===c)if(n)for(s=0;s<c;s++)t[s]&&(l[s]=t[s]<<24|r[s]<<16|o[s]<<8|a[s]);else for(s=0;s<c;s++)t[s]&&(l[s]=255<<24|r[s]<<16|o[s]<<8|a[s]);else for(s=0;s<c;s++)l[s]=255<<24|r[s]<<16|o[s]<<8|a[s];else m.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(e){const{pixels:t,mask:n,statistics:i}=this;if(!e||!t||!t.length)return void m.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const a=this.pixelType;let o=1,r=0,s=1;if(i&&i.length>0)r=i.map(e=>e.minValue).reduce((e,t)=>Math.min(e,t)),s=i.map(e=>e.maxValue-e.minValue).reduce((e,t)=>Math.max(e,t)),o=255/s;else{let e=255;"s8"===a?(r=-128,e=127):"u16"===a?e=65535:"s16"===a?(r=-32768,e=32767):"u32"===a?e=4294967295:"s32"===a?(r=-2147483648,e=2147483647):"f32"===a?(r=-34e38,e=34e38):"f64"===a&&(r=-Number.MAX_VALUE,e=Number.MAX_VALUE),o=255/(e-r)}const l=new Uint32Array(e),c=this.width*this.height;let u,f,d,h,_;if(u=f=d=t[0],u.length!==c)return m.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(t.length>=2)if(f=t[1],t.length>=3&&(d=t[2]),n&&n.length===c)for(h=0;h<c;h++)n[h]&&(l[h]=255<<24|(d[h]-r)*o<<16|(f[h]-r)*o<<8|(u[h]-r)*o);else for(h=0;h<c;h++)l[h]=255<<24|(d[h]-r)*o<<16|(f[h]-r)*o<<8|(u[h]-r)*o;else if(n&&n.length===c)for(h=0;h<c;h++)_=(u[h]-r)*o,n[h]&&(l[h]=255<<24|_<<16|_<<8|_);else for(h=0;h<c;h++)_=(u[h]-r)*o,l[h]=255<<24|_<<16|_<<8|_}_fillFrom32Bit(e){const{pixels:t,mask:n}=this;if(!e||!t||!t.length)return m.error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let i,a,o,r;i=a=o=t[0],t.length>=3?(a=t[1],o=t[2]):2===t.length&&(a=t[1]);const s=this.width*this.height;if(i.length!==s)return m.error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let l=0;if(n&&n.length===s)for(r=0;r<s;r++)e[l++]=i[r],e[l++]=a[r],e[l++]=o[r],e[l++]=1&n[r];else for(r=0;r<s;r++)e[l++]=i[r],e[l++]=a[r],e[l++]=o[r],e[l++]=1}_calculateBandStatistics(e,t){let n=1/0,i=-1/0;const a=e.length;let o,r=0;if(t)for(o=0;o<a;o++)t[o]&&(r=e[o],n=r<n?r:n,i=r>i?r:i);else for(o=0;o<a;o++)r=e[o],n=r<n?r:n,i=r>i?r:i;return{minValue:n,maxValue:i}}};Object(a["a"])([Object(u["b"])({json:{write:!0}})],h.prototype,"width",void 0),Object(a["a"])([Object(u["b"])({json:{write:!0}})],h.prototype,"height",void 0),Object(a["a"])([Object(u["b"])({json:{write:!0}})],h.prototype,"pixelType",void 0),Object(a["a"])([Object(f["a"])("pixelType")],h.prototype,"castPixelType",null),Object(a["a"])([Object(u["b"])({json:{write:!0}})],h.prototype,"validPixelCount",void 0),Object(a["a"])([Object(u["b"])({json:{write:!0}})],h.prototype,"mask",void 0),Object(a["a"])([Object(u["b"])({json:{write:!0}})],h.prototype,"maskIsAlpha",void 0),Object(a["a"])([Object(u["b"])({json:{write:!0}})],h.prototype,"pixels",void 0),Object(a["a"])([Object(u["b"])({json:{write:!0}})],h.prototype,"statistics",void 0),h=i=Object(a["a"])([Object(d["a"])("esri.layers.support.PixelBlock")],h);const _=h},"45a5":function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return o}));var i=n("fa8a");const a=new i["a"]({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryMultiPatch:"multipatch",mesh:"mesh"});function o(e){return a.toJSON(e)}function r(e){const{bandCount:t,attributeTable:n,colormap:i,pixelType:a}=e.rasterInfo;return 1===t&&(null!=n||null!=i||"u8"===a||"s8"===a)}},"49f0":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));class i{constructor(e){this.readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e,t=new Map){if(t.has(e))return t.get(e);const n=this._read(e);if(!n)throw new Error("cannot find shader file "+e);const i=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let a=i.exec(n);const o=[];for(;null!=a;)o.push({path:a[1],start:a.index,length:a[0].length}),a=i.exec(n);let r=0,s="";return o.forEach(e=>{s+=n.slice(r,e.start),s+=t.has(e.path)?"":this._resolve(e.path,t),r=e.start+e.length}),s+=n.slice(r),t.set(e,s),s}_read(e){return this.readFile(e)}}},"5ef2":function(e,t,n){"use strict";function i(){return new Float32Array(4)}function a(e){const t=new Float32Array(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t}function o(e,t,n,i){const a=new Float32Array(4);return a[0]=e,a[1]=t,a[2]=n,a[3]=i,a}function r(e,t){return new Float32Array(e,t,4)}function s(){return i()}function l(){return o(1,1,1,1)}function c(){return o(1,0,0,0)}function u(){return o(0,1,0,0)}function f(){return o(0,0,1,0)}function d(){return o(0,0,0,1)}n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return i})),n.d(t,"c",(function(){return o}));const m=s(),h=l(),_=c(),p=u(),v=f(),g=d();Object.freeze(Object.defineProperty({__proto__:null,create:i,clone:a,fromValues:o,createView:r,zeros:s,ones:l,unitX:c,unitY:u,unitZ:f,unitW:d,ZEROS:m,ONES:h,UNIT_X:_,UNIT_Y:p,UNIT_Z:v,UNIT_W:g},Symbol.toStringTag,{value:"Module"}))},6722:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var i=n("c120"),a=n("c84e"),o=n("9a02"),r=n("6f75"),s=n("ec5e");const l=(e,t)=>e.key.level-t.key.level!=0?e.key.level-t.key.level:e.key.row-t.key.row!=0?e.key.row-t.key.row:e.key.col-t.key.col;class c extends o["a"]{constructor(e){super(),this._tileInfoView=e}get requiresDedicatedFBO(){return!1}renderChildren(e){this.sortChildren(l),this.setStencilReference(e),super.renderChildren(e)}createRenderParams(e){const{state:t}=e,n=super.createRenderParams(e);return n.requiredLevel=this._tileInfoView.getClosestInfoForScale(t.scale).level,n.displayLevel=this._tileInfoView.tileInfo.scaleToZoom(t.scale),n}prepareRenderPasses(e){const t=super.prepareRenderPasses(e);return t.push(e.registerRenderPass({name:"stencil",brushes:[s["a"]],drawPhase:a["c"].DEBUG|a["c"].MAP|a["c"].HIGHLIGHT,target:()=>this.getStencilTarget()})),Object(i["a"])("esri-tiles-debug")&&t.push(e.registerRenderPass({name:"tileInfo",brushes:[r["a"]],drawPhase:a["c"].DEBUG,target:()=>this.children})),t}getStencilTarget(){return this.children}updateTransforms(e){for(const t of this.children){const n=this._tileInfoView.getTileResolution(t.key);t.setTransform(e,n)}}setStencilReference(e){let t=1;for(const n of this.children)n.stencilRef=t++}}},"681f":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var i=n("8e37");function a(e,t,n=""){return new i["a"](e,n+t.shaders.vertexShader,n+t.shaders.fragmentShader,t.attributes)}},"6c7a":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var i=n("a4ee"),a=n("e92d"),o=n("f4cc"),r=n("477c"),s=n("59b2"),l=(n("b50f"),n("c120"),n("cea0"),n("d386"));const c=e=>{let t=class extends e{initialize(){this.handles.add(Object(r["b"])(()=>this.layer,"refresh",e=>{this.doRefresh(e.dataChanged).catch(e=>{Object(o["j"])(e)||a["a"].getLogger(this.declaredClass).error(e)})}),"RefreshableLayerView")}};return Object(i["a"])([Object(s["b"])()],t.prototype,"layer",void 0),t=Object(i["a"])([Object(l["a"])("esri.layers.mixins.RefreshableLayerView")],t),t}},"6f75":function(e,t,n){"use strict";n.d(t,"a",(function(){return v}));var i=n("b2b2"),a=n("5ef2"),o=n("2e5c"),r=n("f079"),s=n("21c1"),l=n("be90");const c={shaders:{vertexShader:Object(l["a"])("tileInfo/tileInfo.vert"),fragmentShader:Object(l["a"])("tileInfo/tileInfo.frag")},attributes:new Map([["a_pos",0]])};var u=n("7ce4"),f=n("d17d"),d=n("681f"),m=n("a1ff"),h=n("0fa6");const _=300,p=32;class v extends r["a"]{constructor(){super(...arguments),this._color=Object(a["c"])(1,0,0,1)}dispose(){this._outlineProgram&&(this._outlineProgram.dispose(),this._outlineProgram=null),this._tileInfoProgram&&(this._tileInfoProgram.dispose(),this._tileInfoProgram=null),this._outlineVertexArrayObject&&(this._outlineVertexArrayObject.dispose(),this._outlineVertexArrayObject=null),this._tileInfoVertexArrayObject&&(this._tileInfoVertexArrayObject.dispose(),this._tileInfoVertexArrayObject=null),this._canvas=null}prepareState({context:e}){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(f["b"].ONE,f["b"].ONE_MINUS_SRC_ALPHA,f["b"].ONE,f["b"].ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!1)}draw(e,t){const{context:n,requestRender:a}=e;if(!t.isReady)return;if(this._loadWGLResources(n),Object(i["k"])(a)&&(!this._outlineProgram.isCompiled||!this._tileInfoProgram.isCompiled))return void a();n.bindVAO(this._outlineVertexArrayObject),n.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._outlineProgram.setUniform2f("u_coord_range",t.rangeX,t.rangeY),this._outlineProgram.setUniform1f("u_depth",0),this._outlineProgram.setUniform4fv("u_color",this._color),n.drawArrays(f["r"].LINE_STRIP,0,4);const o=this._getTexture(n,t);o?(n.bindVAO(this._tileInfoVertexArrayObject),n.useProgram(this._tileInfoProgram),n.bindTexture(o,0),this._tileInfoProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._tileInfoProgram.setUniform1f("u_depth",0),this._tileInfoProgram.setUniform2f("u_coord_ratio",t.rangeX/t.width,t.rangeY/t.height),this._tileInfoProgram.setUniform2f("u_delta",8,8),this._tileInfoProgram.setUniform2f("u_dimensions",o.descriptor.width,o.descriptor.height),n.drawArrays(f["r"].TRIANGLE_STRIP,0,4),n.bindVAO()):n.bindVAO()}_loadWGLResources(e){if(this._outlineProgram&&this._tileInfoProgram)return;const t=Object(d["a"])(e,s["a"]),n=Object(d["a"])(e,c),i=new Int8Array([0,0,1,0,1,1,0,1]),a=u["a"].createVertex(e,f["D"].STATIC_DRAW,i),r=new h["a"](e,s["a"].attributes,o["a"],{geometry:a}),l=new Int8Array([0,0,1,0,0,1,1,1]),m=u["a"].createVertex(e,f["D"].STATIC_DRAW,l),_=new h["a"](e,c.attributes,o["a"],{geometry:m});this._outlineProgram=t,this._tileInfoProgram=n,this._outlineVertexArrayObject=r,this._tileInfoVertexArrayObject=_}_getTexture(e,t){if(t.texture&&t.triangleCountReportedInDebug===t.triangleCount)return t.texture;t.triangleCountReportedInDebug=t.triangleCount,this._canvas||(this._canvas=document.createElement("canvas"),this._canvas.setAttribute("id","canvas2d"),this._canvas.setAttribute("width",""+_),this._canvas.setAttribute("height",""+p),this._canvas.setAttribute("style","display:none"));const n=t.triangleCount;let i=t.key.id;t.triangleCount>0&&(i+=", "+n);const a=this._canvas,o=a.getContext("2d");return o.font="24px sans-serif",o.textAlign="left",o.textBaseline="top",o.clearRect(0,0,_,p),n>1e5?(o.fillStyle="red",o.fillRect(0,0,_,p),o.fillStyle="black"):(o.clearRect(0,0,_,p),o.fillStyle="blue"),o.fillText(i,0,0),t.texture=new m["a"](e,{target:f["A"].TEXTURE_2D,pixelFormat:f["p"].RGBA,dataType:f["q"].UNSIGNED_BYTE,samplingMode:f["z"].NEAREST,wrapMode:f["B"].CLAMP_TO_EDGE},a),t.texture}}},"823a":function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var i=n("7ce4"),a=n("d17d"),o=n("0fa6"),r=n("3f3e");class s{constructor(e,t){this.rctx=e,this._vertexBuffer=i["a"].createVertex(e,a["D"].STATIC_DRAW,new Uint16Array(t)),this._vao=new o["a"](e,new Map([["a_position",0]]),{geometry:[new r["a"]("a_position",2,a["k"].SHORT,0,4)]},{geometry:this._vertexBuffer}),this._count=t.length/2}bind(){this.rctx.bindVAO(this._vao)}unbind(){this.rctx.bindVAO(null)}dispose(){this._vao.dispose(!1),this._vertexBuffer.dispose()}draw(){this.rctx.bindVAO(this._vao),this.rctx.drawArrays(a["r"].TRIANGLE_STRIP,0,this._count)}}},"870c":function(e,t,n){"use strict";n.d(t,"a",(function(){return be}));var i=n("a4ee"),a=n("8d60"),o=n("9096"),r=n("477c"),s=n("59b2"),l=(n("b50f"),n("c120"),n("cea0"),n("d386")),c=n("b2b2"),u=n("a915");function f(e){const t=d(_(e)),n=t,i=!0,a=Math.max(t/2,5),o=Math.round(Object(u["g"])(e.maxPathLength)/a)+1,r=10,{density:s}=e;return{smoothing:Object(u["g"])(e.smoothing),interpolate:!0,velocityScale:"flow-from"===e.flowRepresentation?1:-1,verticesPerLine:o,minSpeedThreshold:.001,segmentLength:a,maxTurnAngle:1,collisions:i,lineCollisionWidth:n,lineSpacing:r,density:s}}function d(e){return"constant"===e.kind?e.value[0]:e.values[e.values.length-1]}function m(e){const t=e.toRgba();return[t[0]/255,t[1]/255,t[2]/255,t[3]]}function h(e){return{kind:"constant",value:[.1,.1,.1,1]}}function _(e){if(!e.hasVisualVariables("size"))return{kind:"constant",value:[Object(u["g"])(e.trailWidth)]};const t=e.getVisualVariablesForType("size")[0],n=[],i=[];let a;if(t.stops){for(const e of t.stops)n.push(e.value),i.push(Object(u["g"])(e.size));a=t.stops.length}else n.push(t.minDataValue,t.maxDataValue),i.push(Object(u["g"])(t.minSize),Object(u["g"])(t.maxSize)),a=2;return{kind:"ramp",stops:n,values:i,count:a}}function p(e){if(!e.hasVisualVariables("color"))return{kind:"constant",value:m(e.color)};const t=e.getVisualVariablesForType("color")[0],n=[],i=[];for(const a of t.stops)n.push(a.value),Array.prototype.push.apply(i,m(a.color));return{kind:"ramp",stops:n,values:i,count:t.stops.length}}function v(e){if(!e.hasVisualVariables("opacity"))return{kind:"constant",value:[1]};const t=e.getVisualVariablesForType("opacity")[0],n=[],i=[];for(const a of t.stops)n.push(a.value),i.push(a.opacity);return{kind:"ramp",stops:n,values:i,count:t.stops.length}}function g(e,t,n,i){switch(t){case"int":e.setUniform1iv(n,i);break;case"float":e.setUniform1fv(n,i);break;case"vec2":e.setUniform2fv(n,i);break;case"vec3":e.setUniform3fv(n,i);break;case"vec4":e.setUniform4fv(n,i)}}function x(e,t,n,i){"constant"===i.kind?g(e,n,"u_"+t,i.value):(g(e,"float",`u_${t}_stops`,i.stops),g(e,n,`u_${t}_values`,i.values),e.setUniform1i(`u_${t}_count`,i.count))}function y(e,t){let n=!0;return n=n&&e.collisions===t.collisions,n=n&&e.density===t.density,n=n&&e.interpolate===t.interpolate,n=n&&e.lineCollisionWidth===t.lineCollisionWidth,n=n&&e.lineSpacing===t.lineSpacing,n=n&&e.maxTurnAngle===t.maxTurnAngle,n=n&&e.minSpeedThreshold===t.minSpeedThreshold,n=n&&e.segmentLength===t.segmentLength,n=n&&e.smoothing===t.smoothing,n=n&&e.velocityScale===t.velocityScale,n=n&&e.verticesPerLine===t.verticesPerLine,n}function b(e,t){return e===t||!(!Object(c["k"])(e)||!Object(c["k"])(t))&&e.equals(t)}function T(e,t){if(!y(e.simulationSettings,t.simulationSettings))return!1;if(!b(e.timeExtent,t.timeExtent))return!1;let n=!0;return n=n&&e.loadImagery===t.loadImagery,n=n&&e.createFlowMesh===t.createFlowMesh,n=n&&e.color.kind===t.color.kind,n=n&&e.opacity.kind===t.opacity.kind,n=n&&e.size.kind===t.size.kind,n}var S=n("f4cc"),O=n("7ce4"),w=n("d17d"),I=n("a1ff"),E=n("0fa6"),C=n("3f3e");class P{constructor(e){this._params=e,this.animated=!1}isCompatible(e){if(!(e instanceof P))return!1;if(!b(this._params.timeExtent,e._params.timeExtent))return!1;let t=!0;return t=t&&this._params.loadImagery===e._params.loadImagery,t=t&&this._params.color.kind===e._params.color.kind,t=t&&this._params.opacity.kind===e._params.opacity.kind,t}async load(e,t){const{extent:n,size:i}=e;Object(S["p"])(t);const a=await this._params.loadImagery(n,i[0],i[1],this._params.timeExtent,t);return new D(a,{color:this._params.color,opacity:this._params.opacity})}render(e,t,n){const{context:i}=e,{program:a}=n;i.setFaceCullingEnabled(!1),i.setBlendingEnabled(!0),i.setBlendFunction(w["b"].ONE,w["b"].ONE_MINUS_SRC_ALPHA),i.useProgram(a),a.setUniformMatrix3fv("u_dvsMat3",t.dvsMat3),i.bindTexture(n.texture,0),a.setUniform1i("u_texture",0),a.setUniform1f("u_Min",n.min),a.setUniform1f("u_Max",n.max),x(a,"color","vec4",this._params.color),x(a,"opacity","float",this._params.opacity),i.bindVAO(n.vertexArray),i.drawArrays(w["r"].TRIANGLE_STRIP,0,4)}}const A=new Map;A.set("a_position",0),A.set("a_texcoord",1);const M={geometry:[new C["a"]("a_position",2,w["k"].UNSIGNED_SHORT,0,8),new C["a"]("a_texcoord",2,w["k"].UNSIGNED_SHORT,4,8)]},R={vsPath:"raster/flow/imagery",fsPath:"raster/flow/imagery",attributes:A};class D{constructor(e,t){this._flowData=e,this._values=t}attach(e){const{context:t}=e,{width:n,height:i}=this._flowData,a=O["a"].createVertex(t,w["D"].STATIC_DRAW,new Uint16Array([0,0,0,1,n,0,1,1,0,i,0,0,n,i,1,0])),o=new E["a"](t,A,M,{geometry:a}),r=[];"ramp"===this._values.color.kind&&r.push("vvColor"),"ramp"===this._values.opacity.kind&&r.push("vvOpacity");const s=e.painter.materialManager.getProgram(R,r);let l=1e6,c=-1e6;for(let d=0;d<i;d++)for(let e=0;e<n;e++)if(0!==this._flowData.mask[d*n+e]){const t=this._flowData.data[2*(d*n+e)+0],i=this._flowData.data[2*(d*n+e)+1],a=Math.sqrt(t*t+i*i);l=Math.min(l,a),c=Math.max(c,a)}const u=new Uint8Array(4*n*i);for(let d=0;d<i;d++)for(let e=0;e<n;e++)if(0!==this._flowData.mask[d*n+e]){const t=this._flowData.data[2*(d*n+e)+0],i=this._flowData.data[2*(d*n+e)+1],a=(Math.sqrt(t*t+i*i)-l)/(c-l);u[4*(d*n+e)+0]=255*a,u[4*(d*n+e)+1]=0,u[4*(d*n+e)+2]=0,u[4*(d*n+e)+3]=255}else u[4*(d*n+e)+0]=0,u[4*(d*n+e)+1]=0,u[4*(d*n+e)+2]=0,u[4*(d*n+e)+3]=0;const f=new I["a"](t,{pixelFormat:w["p"].RGBA,internalFormat:w["p"].RGBA,samplingMode:w["z"].LINEAR,dataType:w["q"].UNSIGNED_BYTE,wrapMode:w["B"].CLAMP_TO_EDGE,flipped:!0,width:n,height:i},u);this.vertexArray=o,this.program=s,this.texture=f,this.min=l,this.max=c,this._flowData=null}detach(){this.vertexArray.dispose(),this.texture.dispose()}get ready(){return this.program.isCompiled}}class L{constructor(e){this._params=e}get animated(){return this._params.flowSpeed>0}isCompatible(e){return e instanceof L&&T(this._params,e._params)}async load(e,t){const{extent:n,size:i}=e;Object(S["p"])(t);const a=await this._params.loadImagery(n,i[0],i[1],this._params.timeExtent,t),{vertexData:o,indexData:r}=await this._params.createFlowMesh("Particles",this._params.simulationSettings,a,t);return new U(o,r,{color:this._params.color,opacity:this._params.opacity,size:this._params.size})}render(e,t,n){const{context:i}=e,{program:a}=n;i.setFaceCullingEnabled(!1),i.setBlendingEnabled(!0),i.setBlendFunction(w["b"].ONE,w["b"].ONE_MINUS_SRC_ALPHA),i.useProgram(a),a.setUniform1f("u_time",t.time),a.setUniform1f("u_trailLength",this._params.trailLength),a.setUniform1f("u_flowSpeed",this._params.flowSpeed),a.setUniform1f("u_featheringSize",this._params.featheringSize),a.setUniform1f("u_featheringOffset",this._params.featheringOffset),a.setUniform1f("u_introFade",this._params.introFade?1:0),a.setUniform1f("u_fadeToZero",this._params.fadeToZero?1:0),a.setUniform1f("u_decayRate",this._params.decayRate),a.setUniformMatrix3fv("u_dvsMat3",t.dvsMat3),a.setUniformMatrix3fv("u_displayViewMat3",t.displayViewMat3),x(a,"color","vec4",this._params.color),x(a,"opacity","float",this._params.opacity),x(a,"size","float",this._params.size),i.bindVAO(n.vertexArray),i.drawElements(w["r"].TRIANGLES,n.indexCount,w["k"].UNSIGNED_INT,0)}}const z=new Map;z.set("a_xyts0",0),z.set("a_xyts1",1),z.set("a_typeIdDurationSeed",2),z.set("a_extrudeInfo",3);const N={geometry:[new C["a"]("a_xyts0",4,w["k"].FLOAT,0,64),new C["a"]("a_xyts1",4,w["k"].FLOAT,16,64),new C["a"]("a_typeIdDurationSeed",4,w["k"].FLOAT,32,64),new C["a"]("a_extrudeInfo",4,w["k"].FLOAT,48,64)]},F={vsPath:"raster/flow/particles",fsPath:"raster/flow/particles",attributes:z};class U{constructor(e,t,n){this._vertexData=e,this._indexData=t,this._values=n}attach(e){const{context:t}=e,n=O["a"].createVertex(t,w["D"].STATIC_DRAW,this._vertexData),i=O["a"].createIndex(t,w["D"].STATIC_DRAW,this._indexData),a=new E["a"](t,z,N,{geometry:n},i),o=[];"ramp"===this._values.color.kind&&o.push("vvColor"),"ramp"===this._values.opacity.kind&&o.push("vvOpacity"),"ramp"===this._values.size.kind&&o.push("vvSize");const r=e.painter.materialManager.getProgram(F,o);this.vertexArray=a,this.program=r,this.indexCount=this._indexData.length,this._vertexData=null,this._indexData=null}detach(){this.vertexArray.dispose()}get ready(){return this.program.isCompiled}}class V{constructor(e){this._styles=e}get animated(){return this._styles.reduce((e,t)=>e||t.animated,!1)}isCompatible(e){if(!(e instanceof V))return!1;if(this._styles.length!==e._styles.length)return!1;const t=this._styles.length;for(let n=0;n<t;n++)if(!this._styles[n].isCompatible(e._styles[n]))return!1;return!0}async load(e,t){const n=await Promise.all(this._styles.map(n=>n.load(e,t)));return new k(n)}render(e,t,n){for(let i=0;i<this._styles.length;i++)this._styles[i].render(e,t,n.resources[i])}}class k{constructor(e){this.resources=e}attach(e){for(const t of this.resources)t.attach(e)}detach(){for(const e of this.resources)e.detach()}get ready(){return this.resources.reduce((e,t)=>e&&t.ready,!0)}}class j{constructor(e){this._params=e}get animated(){return this._params.flowSpeed>0}isCompatible(e){return e instanceof j&&T(this._params,e._params)}async load(e,t){const{extent:n,size:i}=e;Object(S["p"])(t);const a=await this._params.loadImagery(n,i[0],i[1],this._params.timeExtent,t),{vertexData:o,indexData:r}=await this._params.createFlowMesh("Streamlines",this._params.simulationSettings,a,t);return new Y(o,r,{color:this._params.color,opacity:this._params.opacity,size:this._params.size})}render(e,t,n){const{context:i}=e,{program:a}=n;i.setFaceCullingEnabled(!1),i.setBlendingEnabled(!0),i.setBlendFunction(w["b"].ONE,w["b"].ONE_MINUS_SRC_ALPHA),i.useProgram(a),a.setUniform1f("u_time",t.time),a.setUniform1f("u_trailLength",this._params.trailLength),a.setUniform1f("u_flowSpeed",this._params.flowSpeed),a.setUniform1f("u_featheringSize",this._params.featheringSize),a.setUniform1f("u_featheringOffset",this._params.featheringOffset),a.setUniform1f("u_introFade",this._params.introFade?1:0),a.setUniform1f("u_fadeToZero",this._params.fadeToZero?1:0),a.setUniform1f("u_decayRate",this._params.decayRate),a.setUniformMatrix3fv("u_dvsMat3",t.dvsMat3),a.setUniformMatrix3fv("u_displayViewMat3",t.displayViewMat3),x(a,"color","vec4",this._params.color),x(a,"opacity","float",this._params.opacity),x(a,"size","float",this._params.size),i.bindVAO(n.vertexArray),i.drawElements(w["r"].TRIANGLES,n.indexCount,w["k"].UNSIGNED_INT,0)}}const B=new Map;B.set("a_positionAndSide",0),B.set("a_timeInfo",1),B.set("a_extrude",2),B.set("a_speed",3);const G={geometry:[new C["a"]("a_positionAndSide",3,w["k"].FLOAT,0,36),new C["a"]("a_timeInfo",3,w["k"].FLOAT,12,36),new C["a"]("a_extrude",2,w["k"].FLOAT,24,36),new C["a"]("a_speed",1,w["k"].FLOAT,32,36)]},H={vsPath:"raster/flow/streamlines",fsPath:"raster/flow/streamlines",attributes:B};class Y{constructor(e,t,n){this._vertexData=e,this._indexData=t,this._values=n}attach(e){const{context:t}=e,n=O["a"].createVertex(t,w["D"].STATIC_DRAW,this._vertexData),i=O["a"].createIndex(t,w["D"].STATIC_DRAW,this._indexData),a=new E["a"](t,B,G,{geometry:n},i),o=[];"ramp"===this._values.color.kind&&o.push("vvColor"),"ramp"===this._values.opacity.kind&&o.push("vvOpacity"),"ramp"===this._values.size.kind&&o.push("vvSize");const r=e.painter.materialManager.getProgram(H,o);this.vertexArray=a,this.program=r,this.indexCount=this._indexData.length,this._vertexData=null,this._indexData=null}detach(){this.vertexArray.dispose()}get ready(){return this.program.isCompiled}}const W=4,q=1,Z=.5,X=!0,K=!0,Q=2.3;function $(e,t){const{flowSpeed:n,trailLength:i}=e,a=f(e);let o=null;const r={opacity:v(e),size:_(e)};let s=p(e);if("none"===e.background)r.color=s;else{"constant"===s.kind&&(s={kind:"ramp",stops:[0,1],values:[0,0,0,1,s.value[0],s.value[1],s.value[2],s.value[3]],count:2});const e={loadImagery:t.loadImagery,timeExtent:t.timeExtent,color:s,opacity:{kind:"constant",value:[1]}};o=new P(e),r.color=h()}const l={loadImagery:t.loadImagery,createFlowMesh:t.createFlowMesh,simulationSettings:a,timeExtent:t.timeExtent,trailLength:i,flowSpeed:n,featheringSize:q,featheringOffset:Z,introFade:X,fadeToZero:K,decayRate:Q,color:r.color,opacity:r.opacity,size:r.size},u="butt"===e.trailCap||d(_(e))<=W?new j(l):new L(l);return Object(c["k"])(o)?new V([o,u]):u}var J=n("2616"),ee=n("c9ee"),te=n("c84e"),ne=n("9a02");class ie extends ne["a"]{constructor(){super(...arguments),this.flowStyle=null}get requiresDedicatedFBO(){return!1}doRender(e){super.doRender(e)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"flow",brushes:[ee["a"]],target:()=>this.children,drawPhase:te["c"].MAP});return[...super.prepareRenderPasses(e),t]}}n("e06a");var ae=n("fc29"),oe=n("e92d"),re=n("38a4"),se=n("4ae5");const le=oe["a"].getLogger("esri.views.2d.engine.flow.FlowDisplayData");class ce{constructor(e,t,n,i){this.state={name:"created"},this.flowStyle=e,this.extent=t,this.size=n,this.pixelRatio=i}async load(){const e=new AbortController;this.state={name:"loading",abortController:e};const t={extent:this.extent,size:this.size,pixelRatio:this.pixelRatio},n=await this.flowStyle.load(t,e.signal);this.state={name:"loaded",resources:n}}attach(e){if("loaded"!==this.state.name)return void le.error("Only loaded resources can be attached.");const t=this.state.resources;t.attach(e),this.state={name:"attached",resources:t}}detach(){if("loading"===this.state.name)return this.state.abortController.abort(),void(this.state={name:"detached"});"attached"===this.state.name&&(this.state.resources.detach(),this.state={name:"detached"})}update(e){return!!this.flowStyle.isCompatible(e.flowStyle)&&(!(!this.extent.equals(e.extent)||this.size[0]!==e.size[0]||this.size[1]!==e.size[1]||this.pixelRatio!==e.pixelRatio)&&(this.flowStyle=e.flowStyle,!0))}}var ue=n("1c92"),fe=n("8c71"),de=n("7c4b");class me extends de["a"]{constructor(){super(...arguments),this._displayData=null}get displayData(){return this._displayData}set displayData(e){this._displayData=e,this.requestRender()}clear(){Object(c["k"])(this._displayData)&&(this._displayData.detach(),this._displayData=null,this.requestRender())}setTransform(e){const{displayData:t}=this;if(Object(c["j"])(t))return;const n=t.extent.xmin,i=t.extent.ymax,a=[0,0];e.toScreen(a,[n,i]);const o=(t.extent.xmax-t.extent.xmin)/t.size[0]/e.resolution,r=Object(re["g"])(e.rotation),{dvs:s}=this.transforms;Object(ue["g"])(s,[-1,1,0]),Object(ue["d"])(s,s,[2/(e.size[0]*e.pixelRatio),-2/(e.size[1]*e.pixelRatio),1]),Object(ue["c"])(s,s,[a[0],a[1],0]),Object(ue["l"])(s,s,r),Object(ue["d"])(s,s,[o*e.pixelRatio,o*e.pixelRatio,1])}_createTransforms(){return{dvs:Object(fe["b"])()}}}var he=n("3af1");const _e=1.15,pe=oe["a"].getLogger("esri.views.2d.engine.flow.FlowStrategy");let ve=class extends ae["a"]{constructor(e){super(e),this._flowDisplayObject=new me,this._loading=null}initialize(){this.flowContainer.addChild(this._flowDisplayObject)}destroy(){this._clear(),this.flowContainer.removeAllChildren()}get updating(){return null!=this._loading}update(e){const{flowStyle:t}=this.flowContainer;if(Object(c["j"])(t))return void this._clear();const{extent:n,rotation:i,resolution:a,pixelRatio:o}=e.state,r=xe(n,i);r.expand(_e);const s=[Math.round((r.xmax-r.xmin)/a),Math.round((r.ymax-r.ymin)/a)],l=new ce(t,r,s,o);if(Object(c["k"])(this._loading)){if(this._loading.update(l))return;this._loading.detach(),this._loading=null}!Object(c["j"])(this._flowDisplayObject.displayData)&&this._flowDisplayObject.displayData.update(l)||(l.load().then(()=>{this._flowDisplayObject.clear(),this._flowDisplayObject.displayData=this._loading,this._loading=null},e=>{Object(S["j"])(e)||(pe.error("A resource failed to load.",e),this._loading=null)}),this._loading=l)}_clear(){this._flowDisplayObject.clear(),Object(c["k"])(this._loading)&&(this._loading.detach(),this._loading=null)}};Object(i["a"])([Object(s["b"])()],ve.prototype,"_loading",void 0),Object(i["a"])([Object(s["b"])()],ve.prototype,"flowContainer",void 0),Object(i["a"])([Object(s["b"])()],ve.prototype,"updating",null),ve=Object(i["a"])([Object(l["a"])("esri.views.2d.engine.flow.FlowStrategy")],ve);const ge=ve;function xe(e,t){const n=new se["a"]({x:(e.xmax+e.xmin)/2,y:(e.ymax+e.ymin)/2,spatialReference:e.spatialReference}),i=e.xmax-e.xmin,a=e.ymax-e.ymin,o=Math.abs(Math.cos(Object(re["g"])(t))),r=Math.abs(Math.sin(Object(re["g"])(t))),s=o*i+r*a,l=r*i+o*a,c=new he["a"]({xmin:n.x-s/2,ymin:n.y-l/2,xmax:n.x+s/2,ymax:n.y+l/2,spatialReference:e.spatialReference});return c.centerAt(n),c}let ye=class extends o["a"]{constructor(){super(...arguments),this._loadImagery=(e,t,n,i,a)=>Object(J["b"])(this.layer,e,t,n,i,a),this._createFlowMesh=(e,t,n,i)=>this.layer.createFlowMesh({meshType:e,flowData:n,simulationSettings:t},{signal:i}),this.attached=!1,this.container=null,this.layer=null,this.type="flow",this.timeExtent=null,this.redrawOrRefetch=async()=>{this._updateVisualization()}}get updating(){return!this._strategy||this._strategy.updating}attach(){const{layer:e}=this,t=()=>{this._loadImagery=(t,n,i,a,o)=>Object(J["b"])(e,t,n,i,a,o),this._updateVisualization()};"multidimensionalDefinition"in e?this.handles.add(Object(r["f"])(()=>e.multidimensionalDefinition,t)):this.handles.add([Object(r["f"])(()=>e.mosaicRule,t),Object(r["f"])(()=>e.renderingRule,t),Object(r["f"])(()=>e.definitionExpression,t)]),this.container=new ie,this._strategy=new ge({flowContainer:this.container}),this._updateVisualization()}detach(){this._strategy.destroy(),this.container.removeAllChildren(),this.container=null,this.handles.removeAll()}update(e){e.stationary?this._strategy.update(e):this.layerView.requestUpdate()}hitTest(e){return new a["a"]({attributes:{},geometry:e.clone(),layer:this.layer})}moveEnd(){}async doRefresh(){}_updateVisualization(){const{renderer:e}=this.layer;if("flow"!==e.type)return;const t=$(e,{loadImagery:this._loadImagery,createFlowMesh:this._createFlowMesh,timeExtent:this.timeExtent});this.container.flowStyle=t,this.layerView.requestUpdate()}};Object(i["a"])([Object(s["b"])()],ye.prototype,"_strategy",void 0),Object(i["a"])([Object(s["b"])()],ye.prototype,"attached",void 0),Object(i["a"])([Object(s["b"])()],ye.prototype,"container",void 0),Object(i["a"])([Object(s["b"])()],ye.prototype,"layer",void 0),Object(i["a"])([Object(s["b"])()],ye.prototype,"layerView",void 0),Object(i["a"])([Object(s["b"])()],ye.prototype,"type",void 0),Object(i["a"])([Object(s["b"])()],ye.prototype,"updating",null),Object(i["a"])([Object(s["b"])()],ye.prototype,"timeExtent",void 0),ye=Object(i["a"])([Object(l["a"])("esri.views.2d.engine.flow.FlowView2D")],ye);const be=ye},"8e37":function(e,t,n){"use strict";n.d(t,"a",(function(){return K}));var i=n("b50f"),a=(n("c120"),n("b2b2")),o=n("1956"),r=n("cc15"),s=n("d17d");const l=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"],c={enableCache:!1};var u,f={exports:{}};void 0!==(u=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"])&&(f.exports=u);const d=f.exports;var m,h={exports:{}};m=h,function(e){var t=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"];void 0!==t&&(m.exports=t)}();const _=h.exports;var p={exports:{}};!function(e){!function(t){var n=function(){return["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT"]}();void 0!==n&&(e.exports=n)}()}(p);const v=p.exports;var g=999,x=9999,y=0,b=1,T=2,S=3,O=4,w=5,I=6,E=7,C=8,P=9,A=10,M=11,R=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function D(){var e,t,n,i=0,a=0,o=g,r=[],s=[],l=1,c=0,u=0,f=!1,m=!1,h="";return function(e){return s=[],null!==e?D(e.replace?e.replace(/\r\n/g,"\n"):e):L()};function p(e){e.length&&s.push({type:R[o],data:e,position:u,line:l,column:c})}function D(t){var r;for(i=0,n=(h+=t).length;e=h[i],i<n;){switch(r=i,o){case y:i=V();break;case b:i=U();break;case T:i=F();break;case S:i=k();break;case O:i=G();break;case M:i=B();break;case w:i=H();break;case x:i=Y();break;case P:i=N();break;case g:i=z()}r!==i&&("\n"===h[r]?(c=0,++l):++c)}return a+=i,h=h.slice(i),s}function L(e){return r.length&&p(r.join("")),o=A,p("(eof)"),s}function z(){return r=r.length?[]:r,"/"===t&&"*"===e?(u=a+i-1,o=y,t=e,i+1):"/"===t&&"/"===e?(u=a+i-1,o=b,t=e,i+1):"#"===e?(o=T,u=a+i,i):/\s/.test(e)?(o=P,u=a+i,i):(f=/\d/.test(e),m=/[^\w_]/.test(e),u=a+i,o=f?O:m?S:x,i)}function N(){return/[^\s]/g.test(e)?(p(r.join("")),o=g,i):(r.push(e),t=e,i+1)}function F(){return"\r"!==e&&"\n"!==e||"\\"===t?(r.push(e),t=e,i+1):(p(r.join("")),o=g,i)}function U(){return F()}function V(){return"/"===e&&"*"===t?(r.push(e),p(r.join("")),o=g,i+1):(r.push(e),t=e,i+1)}function k(){if("."===t&&/\d/.test(e))return o=w,i;if("/"===t&&"*"===e)return o=y,i;if("/"===t&&"/"===e)return o=b,i;if("."===e&&r.length){for(;j(r););return o=w,i}if(";"===e||")"===e||"("===e){if(r.length)for(;j(r););return p(e),o=g,i+1}var n=2===r.length&&"="!==e;if(/[\w_\d\s]/.test(e)||n){for(;j(r););return o=g,i}return r.push(e),t=e,i+1}function j(e){for(var t,n,i=0;;){if(t=_.indexOf(e.slice(0,e.length+i).join("")),n=_[t],-1===t){if(i--+e.length>0)continue;n=e.slice(0,1).join("")}return p(n),u+=n.length,(r=r.slice(n.length)).length}}function B(){return/[^a-fA-F0-9]/.test(e)?(p(r.join("")),o=g,i):(r.push(e),t=e,i+1)}function G(){return"."===e||/[eE]/.test(e)?(r.push(e),o=w,t=e,i+1):"x"===e&&1===r.length&&"0"===r[0]?(o=M,r.push(e),t=e,i+1):/[^\d]/.test(e)?(p(r.join("")),o=g,i):(r.push(e),t=e,i+1)}function H(){return"f"===e&&(r.push(e),t=e,i+=1),/[eE]/.test(e)||"-"===e&&/[eE]/.test(t)?(r.push(e),t=e,i+1):/[^\d]/.test(e)?(p(r.join("")),o=g,i):(r.push(e),t=e,i+1)}function Y(){if(/[^\d\w_]/.test(e)){var n=r.join("");return o=d.indexOf(n)>-1?C:v.indexOf(n)>-1?E:I,p(r.join("")),o=g,i}return r.push(e),t=e,i+1}}function L(e){var t=D(),n=[];return(n=n.concat(t(e))).concat(t(null))}function z(e){return L(e)}function N(e){return e.map(e=>"eof"!==e.type?e.data:"").join("")}const F=["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"];function U(e,t="100",n="300 es"){const i=/^\s*\#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const a of e)if("preprocessor"===a.type){const e=i.exec(a.data);if(e){const i=e[1].replace(/\s\s+/g," ");if(i===n)return i;if(i===t)return a.data="#version "+n,t;throw new Error("unknown glsl version: "+i)}}return e.splice(0,0,{type:"preprocessor",data:"#version "+n},{type:"whitespace",data:"\n"}),null}function V(e,t){for(let n=t-1;n>=0;n--){const t=e[n];if("whitespace"!==t.type&&"block-comment"!==t.type){if("keyword"!==t.type)break;if("attribute"===t.data||"in"===t.data)return!0}}return!1}function k(e,t,n,i){i=i||n;for(const a of e)if("ident"===a.type&&a.data===n)return i in t?t[i]++:t[i]=0,k(e,t,i+"_"+t[i],i);return n}function j(e,t,n="afterVersion"){function i(e,t){for(let n=t;n<e.length;n++){const t=e[n];if("operator"===t.type&&";"===t.data)return n}return null}function a(e){let t=-1,a=0,o=-1;for(let r=0;r<e.length;r++){const s=e[r];if("preprocessor"===s.type&&(s.data.match(/\#(if|ifdef|ifndef)\s+.+/)?++a:s.data.match(/\#endif\s*.*/)&&--a),"afterVersion"!==n&&"afterPrecision"!==n||"preprocessor"===s.type&&/^#version/.test(s.data)&&(o=Math.max(o,r)),"afterPrecision"===n&&"keyword"===s.type&&"precision"===s.data){const t=i(e,r);if(null===t)throw new Error("precision statement not followed by any semicolons!");o=Math.max(o,t)}t<o&&0===a&&(t=r)}return t+1}const o={data:"\n",type:"whitespace"},r=t=>t<e.length&&/[^\r\n]$/.test(e[t].data);let s=a(e);r(s-1)&&e.splice(s++,0,o);for(const l of t)e.splice(s++,0,l);r(s-1)&&r(s)&&e.splice(s,0,o)}function B(e,t,n,i="lowp"){j(e,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function G(e,t,n,i,a="lowp"){j(e,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:i.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:a},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function H(e,t){let n,i,a=-1;for(let o=t;o<e.length;o++){const t=e[o];if("operator"===t.type&&("["===t.data&&(n=o),"]"===t.data)){i=o;break}"integer"===t.type&&(a=parseInt(t.data,10))}return n&&i&&e.splice(n,i-n+1),a}function Y(e,t){const n=q(e);if(Object(a["k"])(n))return n;const i=z(e);if("300 es"===U(i,"100","300 es"))return e;let o=null,r=null;const c={},u={};for(let a=0;a<i.length;++a){const e=i[a];switch(e.type){case"keyword":t===s["u"].VERTEX_SHADER&&"attribute"===e.data?e.data="in":"varying"===e.data&&(e.data=t===s["u"].VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(e.data.trim())&&(e.data=e.data.replace(/(2D|Cube|EXT)/g,"")),t===s["u"].FRAGMENT_SHADER&&"gl_FragColor"===e.data&&(o||(o=k(i,c,"fragColor"),B(i,o,"vec4")),e.data=o),t===s["u"].FRAGMENT_SHADER&&"gl_FragData"===e.data){const t=H(i,a+1),n=k(i,c,"fragData");G(i,n,"vec4",t,"mediump"),e.data=n}else t===s["u"].FRAGMENT_SHADER&&"gl_FragDepthEXT"===e.data&&(r||(r=k(i,c,"gl_FragDepth")),e.data=r);break;case"ident":if(l.includes(e.data)){if(t===s["u"].VERTEX_SHADER&&V(i,a))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");e.data in u||(u[e.data]=k(i,c,e.data)),e.data=u[e.data]}}}for(let a=i.length-1;a>=0;--a){const e=i[a];if("preprocessor"===e.type){const t=e.data.match(/\#extension\s+(.*)\:/);if(t&&t[1]&&F.includes(t[1].trim())){const e=i[a+1];i.splice(a,e&&"whitespace"===e.type?2:1)}const n=e.data.match(/\#ifdef\s+(.*)/);n&&n[1]&&F.includes(n[1].trim())&&(e.data="#if 1");const o=e.data.match(/\#ifndef\s+(.*)/);o&&o[1]&&F.includes(o[1].trim())&&(e.data="#if 0")}}return Z(e,N(i))}const W=new Map;function q(e){return c.enableCache?W.get(e):null}function Z(e,t){return c.enableCache&&W.set(e,t),t}const X=4294967295;class K{constructor(e,t,n,i,a=new Map){this._context=e,this._locations=i,this._uniformBlockBindings=a,this._refCount=1,this._compiled=!1,this._nameToUniformLocation={},this._nameToUniform1={},this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,e||console.error("RenderingContext isn't initialized!"),0===t.length&&console.error("Shaders source should not be empty!"),this._context.type===r["a"].WEBGL2&&(t=Y(t,s["u"].VERTEX_SHADER),n=Y(n,s["u"].FRAGMENT_SHADER)),this._vShader=Q(this._context,s["u"].VERTEX_SHADER,t),this._fShader=Q(this._context,s["u"].FRAGMENT_SHADER,n),this._vShader&&this._fShader||console.error("Error loading shaders!"),this._context.instanceCounter.increment(s["t"].Shader,this),Object(o["c"])()&&(this.vertexShader=t,this.fragmentShader=n)}get glName(){if(Object(a["k"])(this._glName))return this._glName;if(Object(a["j"])(this._vShader))return null;const e=this._context.gl,t=e.createProgram();if(e.attachShader(t,this._vShader),e.attachShader(t,this._fShader),this._locations.forEach((n,i)=>e.bindAttribLocation(t,n,i)),e.linkProgram(t),Object(o["c"])()&&!e.getProgramParameter(t,e.LINK_STATUS)&&console.error(`Could not link shader\nvalidated: ${e.getProgramParameter(t,e.VALIDATE_STATUS)}, gl error ${e.getError()}, vertex: ${e.getShaderParameter(this._vShader,e.COMPILE_STATUS)}, fragment: ${e.getShaderParameter(this._fShader,e.COMPILE_STATUS)}, info log: ${e.getProgramInfoLog(t)}, vertex source: ${this.vertexShader}, fragment source: ${this.fragmentShader}`),this._context.type===r["a"].WEBGL2){const n=e;for(const[e,i]of this._uniformBlockBindings){const a=n.getUniformBlockIndex(t,e);a<X&&n.uniformBlockBinding(t,a,i)}}return this._glName=t,this._context.instanceCounter.increment(s["t"].Program,this),t}get hasGLName(){return Object(a["k"])(this._glName)}get isCompiled(){if(this._compiled)return!0;const e=this._context.gl.getExtension("KHR_parallel_shader_compile");return null==e?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,e.COMPLETION_STATUS_KHR),this._compiled)}dispose(){if(--this._refCount>0)return;const e=this._context.gl;this._vShader&&(e.deleteShader(this._vShader),this._vShader=null,this._context.instanceCounter.decrement(s["t"].Shader,this)),this._fShader&&(e.deleteShader(this._fShader),this._fShader=null),this._glName&&(e.deleteProgram(this._glName),this._glName=null,this._context.instanceCounter.decrement(s["t"].Program,this))}ref(){++this._refCount}_getUniformLocation(e){return void 0===this._nameToUniformLocation[e]&&(++te.numUniforms,this._nameToUniformLocation[e]=this._context.gl.getUniformLocation(this.glName,e)),this._nameToUniformLocation[e]}hasUniform(e){return null!==this._getUniformLocation(e)}setUniform1i(e,t){const n=this._nameToUniform1[e];void 0!==n&&t===n||(this._context.gl.uniform1i(this._getUniformLocation(e),t),this._nameToUniform1[e]=t)}setUniform1iv(e,t){ee(this._nameToUniform1v,e,t)&&this._context.gl.uniform1iv(this._getUniformLocation(e),t)}setUniform2iv(e,t){ee(this._nameToUniform2,e,t)&&this._context.gl.uniform2iv(this._getUniformLocation(e),t)}setUniform3iv(e,t){ee(this._nameToUniform3,e,t)&&this._context.gl.uniform3iv(this._getUniformLocation(e),t)}setUniform4iv(e,t){ee(this._nameToUniform4,e,t)&&this._context.gl.uniform4iv(this._getUniformLocation(e),t)}setUniform1f(e,t){const n=this._nameToUniform1[e];void 0!==n&&t===n||(this._context.gl.uniform1f(this._getUniformLocation(e),t),this._nameToUniform1[e]=t)}setUniform1fv(e,t){ee(this._nameToUniform1v,e,t)&&this._context.gl.uniform1fv(this._getUniformLocation(e),t)}setUniform2f(e,t,n){const i=this._nameToUniform2.get(e);void 0===i?(this._context.gl.uniform2f(this._getUniformLocation(e),t,n),this._nameToUniform2.set(e,[t,n])):t===i[0]&&n===i[1]||(this._context.gl.uniform2f(this._getUniformLocation(e),t,n),i[0]=t,i[1]=n)}setUniform2fv(e,t){ee(this._nameToUniform2,e,t)&&this._context.gl.uniform2fv(this._getUniformLocation(e),t)}setUniform3f(e,t,n,i){const a=this._nameToUniform3.get(e);void 0===a?(this._context.gl.uniform3f(this._getUniformLocation(e),t,n,i),this._nameToUniform3[e]=[t,n,i]):t===a[0]&&n===a[1]&&i===a[2]||(this._context.gl.uniform3f(this._getUniformLocation(e),t,n,i),a[0]=t,a[1]=n,a[2]=i)}setUniform3fv(e,t){ee(this._nameToUniform3,e,t)&&this._context.gl.uniform3fv(this._getUniformLocation(e),t)}setUniform4f(e,t,n,i,a){const o=this._nameToUniform4.get(e);void 0===o?(this._context.gl.uniform4f(this._getUniformLocation(e),t,n,i,a),this._nameToUniform4.set(e,[t,n,i,a])):void 0!==o&&t===o[0]&&n===o[1]&&i===o[2]&&a===o[3]||(this._context.gl.uniform4f(this._getUniformLocation(e),t,n,i,a),o[0]=t,o[1]=n,o[2]=i,o[3]=a)}setUniform4fv(e,t){ee(this._nameToUniform4,e,t)&&this._context.gl.uniform4fv(this._getUniformLocation(e),t)}setUniformMatrix3fv(e,t,n=!1){ee(this._nameToUniformMatrix3,e,t)&&this._context.gl.uniformMatrix3fv(this._getUniformLocation(e),n,t)}setUniformMatrix4fv(e,t,n=!1){ee(this._nameToUniformMatrix4,e,t)&&this._context.gl.uniformMatrix4fv(this._getUniformLocation(e),n,t)}stop(){}}function Q(e,t,n){const i=e.gl,a=i.createShader(t);return i.shaderSource(a,n),i.compileShader(a),Object(o["c"])()&&!i.getShaderParameter(a,i.COMPILE_STATUS)&&(console.error("Compile error in ".concat(t===s["u"].VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(i.getShaderInfoLog(a)),console.error($(n))),te.enabled&&(te.compiledLOC+=n.match(/\n/g).length+1),a}function $(e){let t=2;return e.replace(/\n/g,()=>"\n"+J(t++)+":")}function J(e){return e>=1e3?e.toString():("  "+e).slice(-3)}function ee(e,t,n){const a=e.get(t);return a?Object(i["l"])(a,n):(e.set(t,Array.from(n)),!0)}const te={compiledLOC:0,numUniforms:0,enabled:!1}},9812:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var i,a,o,r={exports:{}};i=r,a=function(){function e(e,n,a){a=a||2;var o,r,s,c,u,f,d,m=n&&n.length,h=m?n[0]*a:e.length,_=t(e,0,h,a,!0),p=[];if(!_||_.next===_.prev)return p;if(m&&(_=l(e,n,_,a)),e.length>80*a){o=s=e[0],r=c=e[1];for(var v=a;v<h;v+=a)(u=e[v])<o&&(o=u),(f=e[v+1])<r&&(r=f),u>s&&(s=u),f>c&&(c=f);d=0!==(d=Math.max(s-o,c-r))?1/d:0}return i(_,p,a,o,r,d),p}function t(e,t,n,i,a){var o,r;if(a===R(e,t,n,i)>0)for(o=t;o<n;o+=i)r=P(o,e[o],e[o+1],r);else for(o=n-i;o>=t;o-=i)r=P(o,e[o],e[o+1],r);if(r&&b(r,r.next)){var s=r.next;A(r),r=s}return r}function n(e,t){if(!e)return e;t||(t=e);var n,i=e;do{if(n=!1,i.steiner||!b(i,i.next)&&0!==y(i.prev,i,i.next))i=i.next;else{var a=i.prev;if(A(i),(i=t=a)===i.next)break;n=!0}}while(n||i!==t);return t}function i(e,t,l,c,u,f,d){if(e){!d&&f&&h(e,c,u,f);for(var m,_,p=e;e.prev!==e.next;)if(m=e.prev,_=e.next,f?o(e,c,u,f):a(e))t.push(m.i/l),t.push(e.i/l),t.push(_.i/l),A(e),e=_.next,p=_.next;else if((e=_)===p){d?1===d?i(e=r(n(e),t,l),t,l,c,u,f,2):2===d&&s(e,t,l,c,u,f):i(n(e),t,l,c,u,f,1);break}}}function a(e){var t=e.prev,n=e,i=e.next;if(y(t,n,i)>=0)return!1;for(var a=e.next.next;a!==e.prev;){if(g(t.x,t.y,n.x,n.y,i.x,i.y,a.x,a.y)&&y(a.prev,a,a.next)>=0)return!1;a=a.next}return!0}function o(e,t,n,i){var a=e.prev,o=e,r=e.next;if(y(a,o,r)>=0)return!1;for(var s=a.x<o.x?a.x<r.x?a.x:r.x:o.x<r.x?o.x:r.x,l=a.y<o.y?a.y<r.y?a.y:r.y:o.y<r.y?o.y:r.y,c=a.x>o.x?a.x>r.x?a.x:r.x:o.x>r.x?o.x:r.x,u=a.y>o.y?a.y>r.y?a.y:r.y:o.y>r.y?o.y:r.y,f=p(s,l,t,n,i),d=p(c,u,t,n,i),m=e.prevZ,h=e.nextZ;m&&m.z>=f&&h&&h.z<=d;){if(m!==e.prev&&m!==e.next&&g(a.x,a.y,o.x,o.y,r.x,r.y,m.x,m.y)&&y(m.prev,m,m.next)>=0)return!1;if(m=m.prevZ,h!==e.prev&&h!==e.next&&g(a.x,a.y,o.x,o.y,r.x,r.y,h.x,h.y)&&y(h.prev,h,h.next)>=0)return!1;h=h.nextZ}for(;m&&m.z>=f;){if(m!==e.prev&&m!==e.next&&g(a.x,a.y,o.x,o.y,r.x,r.y,m.x,m.y)&&y(m.prev,m,m.next)>=0)return!1;m=m.prevZ}for(;h&&h.z<=d;){if(h!==e.prev&&h!==e.next&&g(a.x,a.y,o.x,o.y,r.x,r.y,h.x,h.y)&&y(h.prev,h,h.next)>=0)return!1;h=h.nextZ}return!0}function r(e,t,i){var a=e;do{var o=a.prev,r=a.next.next;!b(o,r)&&T(o,a,a.next,r)&&I(o,r)&&I(r,o)&&(t.push(o.i/i),t.push(a.i/i),t.push(r.i/i),A(a),A(a.next),a=e=r),a=a.next}while(a!==e);return n(a)}function s(e,t,a,o,r,s){var l=e;do{for(var c=l.next.next;c!==l.prev;){if(l.i!==c.i&&x(l,c)){var u=C(l,c);return l=n(l,l.next),u=n(u,u.next),i(l,t,a,o,r,s),void i(u,t,a,o,r,s)}c=c.next}l=l.next}while(l!==e)}function l(e,i,a,o){var r,s,l,u=[];for(r=0,s=i.length;r<s;r++)(l=t(e,i[r]*o,r<s-1?i[r+1]*o:e.length,o,!1))===l.next&&(l.steiner=!0),u.push(v(l));for(u.sort(c),r=0;r<u.length;r++)a=n(a=f(u[r],a),a.next);return a}function c(e,t){return e.x-t.x}function u(e){if(e.next.prev===e)return e;let t=e;for(;;){const n=t.next;if(n.prev===t||n===t||n===e)break;t=n}return t}function f(e,t){var i=d(e,t);if(!i)return t;var a=C(i,e),o=n(i,i.next);let r=u(a);return n(r,r.next),o=u(o),u(t===i?o:t)}function d(e,t){var n,i=t,a=e.x,o=e.y,r=-1/0;do{if(o<=i.y&&o>=i.next.y&&i.next.y!==i.y){var s=i.x+(o-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(s<=a&&s>r){if(r=s,s===a){if(o===i.y)return i;if(o===i.next.y)return i.next}n=i.x<i.next.x?i:i.next}}i=i.next}while(i!==t);if(!n)return null;if(a===r)return n;var l,c=n,u=n.x,f=n.y,d=1/0;i=n;do{a>=i.x&&i.x>=u&&a!==i.x&&g(o<f?a:r,o,u,f,o<f?r:a,o,i.x,i.y)&&(l=Math.abs(o-i.y)/(a-i.x),I(i,e)&&(l<d||l===d&&(i.x>n.x||i.x===n.x&&m(n,i)))&&(n=i,d=l)),i=i.next}while(i!==c);return n}function m(e,t){return y(e.prev,e,t.prev)<0&&y(t.next,e,e.next)<0}function h(e,t,n,i){var a=e;do{null===a.z&&(a.z=p(a.x,a.y,t,n,i)),a.prevZ=a.prev,a.nextZ=a.next,a=a.next}while(a!==e);a.prevZ.nextZ=null,a.prevZ=null,_(a)}function _(e){var t,n,i,a,o,r,s,l,c=1;do{for(n=e,e=null,o=null,r=0;n;){for(r++,i=n,s=0,t=0;t<c&&(s++,i=i.nextZ);t++);for(l=c;s>0||l>0&&i;)0!==s&&(0===l||!i||n.z<=i.z)?(a=n,n=n.nextZ,s--):(a=i,i=i.nextZ,l--),o?o.nextZ=a:e=a,a.prevZ=o,o=a;n=i}o.nextZ=null,c*=2}while(r>1);return e}function p(e,t,n,i,a){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*a)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*a)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function v(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function g(e,t,n,i,a,o,r,s){return(a-r)*(t-s)-(e-r)*(o-s)>=0&&(e-r)*(i-s)-(n-r)*(t-s)>=0&&(n-r)*(o-s)-(a-r)*(i-s)>=0}function x(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!w(e,t)&&(I(e,t)&&I(t,e)&&E(e,t)&&(y(e.prev,e,t.prev)||y(e,t.prev,t))||b(e,t)&&y(e.prev,e,e.next)>0&&y(t.prev,t,t.next)>0)}function y(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function b(e,t){return e.x===t.x&&e.y===t.y}function T(e,t,n,i){var a=O(y(e,t,n)),o=O(y(e,t,i)),r=O(y(n,i,e)),s=O(y(n,i,t));return a!==o&&r!==s||!(0!==a||!S(e,n,t))||!(0!==o||!S(e,i,t))||!(0!==r||!S(n,e,i))||!(0!==s||!S(n,t,i))}function S(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function O(e){return e>0?1:e<0?-1:0}function w(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&T(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}function I(e,t){return y(e.prev,e,e.next)<0?y(e,t,e.next)>=0&&y(e,e.prev,t)>=0:y(e,t,e.prev)<0||y(e,e.next,t)<0}function E(e,t){var n=e,i=!1,a=(e.x+t.x)/2,o=(e.y+t.y)/2;do{n.y>o!=n.next.y>o&&n.next.y!==n.y&&a<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==e);return i}function C(e,t){var n=new M(e.i,e.x,e.y),i=new M(t.i,t.x,t.y),a=e.next,o=t.prev;return e.next=t,t.prev=e,n.next=a,a.prev=n,i.next=n,n.prev=i,o.next=i,i.prev=o,i}function P(e,t,n,i){var a=new M(e,t,n);return i?(a.next=i.next,a.prev=i,i.next.prev=a,i.next=a):(a.prev=a,a.next=a),a}function A(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function M(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function R(e,t,n,i){for(var a=0,o=t,r=n-i;o<n;o+=i)a+=(e[r]-e[o])*(e[o+1]+e[r+1]),r=o;return a}return e.deviation=function(e,t,n,i){var a=t&&t.length,o=a?t[0]*n:e.length,r=Math.abs(R(e,0,o,n));if(a)for(var s=0,l=t.length;s<l;s++){var c=t[s]*n,u=s<l-1?t[s+1]*n:e.length;r-=Math.abs(R(e,c,u,n))}var f=0;for(s=0;s<i.length;s+=3){var d=i[s]*n,m=i[s+1]*n,h=i[s+2]*n;f+=Math.abs((e[d]-e[h])*(e[m+1]-e[d+1])-(e[d]-e[m])*(e[h+1]-e[d+1]))}return 0===r&&0===f?0:Math.abs((f-r)/r)},e.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},i=0,a=0;a<e.length;a++){for(var o=0;o<e[a].length;o++)for(var r=0;r<t;r++)n.vertices.push(e[a][o][r]);a>0&&(i+=e[a-1].length,n.holes.push(i))}return n},e},void 0!==(o=a())&&(i.exports=o);const s=r.exports},"9a02":function(e,t,n){"use strict";n.d(t,"a",(function(){return P}));n("c120");var i=n("b2b2"),a=n("8c71"),o=n("3b1a"),r=n("00c0"),s=n("ce50"),l=n("e92d"),c=n("477c"),u=n("7c4b"),f=n("9812"),d=n("3349"),m=n("02f1"),h=n("6655"),_=n("8152"),p=n("d114"),v=n("7ce4"),g=n("d17d");const x=l["a"].getLogger("esri.views.2d.engine.webgl.Mesh2D"),y=e=>{switch(e.BYTES_PER_ELEMENT){case 1:return g["k"].UNSIGNED_BYTE;case 2:return g["k"].UNSIGNED_SHORT;case 4:return g["k"].UNSIGNED_INT;default:throw new s["a"]("Cannot get DataType of array")}},b=(e,t,n,i)=>{let a=0;for(let o=1;o<n;o++){const n=e[2*(t+o-1)],i=e[2*(t+o-1)+1];a+=(e[2*(t+o)]-n)*(e[2*(t+o)+1]+i)}return i?a>0:a<0},T=({coords:e,lengths:t},n)=>{const i=[];for(let a=0,o=0;a<t.length;o+=t[a],a+=1){const r=o,s=[];for(;a<t.length-1&&b(e,o+t[a],t[a+1],n);a+=1,o+=t[a])s.push(o+t[a]-r);const l=e.slice(2*r,2*(o+t[a])),c=Object(f["a"])(l,s,2);for(const e of c)i.push(e+r)}return i};class S{constructor(e,t,n,i=!1){this._cache={},this.vertices=e,this.indices=t,this.primitiveType=n,this.isMapSpace=i}static fromRect({x:e,y:t,width:n,height:i}){const a=e,o=t,r=a+n,s=o+i;return S.fromScreenExtent({xmin:a,ymin:o,xmax:r,ymax:s})}static fromPath(e){const t=Object(h["f"])(new _["a"],e.path,!1,!1),n=t.coords,i=new Uint32Array(T(t,!0)),a=new Uint32Array(n.length/2);for(let o=0;o<a.length;o++)a[o]=Object(p["a"])(Math.floor(n[2*o]),Math.floor(n[2*o+1]));return new S({geometry:a},i,g["r"].TRIANGLES)}static fromGeometry(e,t){const n=t.geometry.type;switch(n){case"polygon":return S.fromPolygon(e,t.geometry);case"extent":return S.fromMapExtent(e,t.geometry);default:return x.error(new s["a"]("mapview-bad-type","Unable to create a mesh from type "+n,t)),S.fromRect({x:0,y:0,width:1,height:1})}}static fromPolygon(e,t){const n=Object(h["g"])(new _["a"],t,!1,!1),i=n.coords,a=new Uint32Array(T(n,!1)),o=new Uint32Array(i.length/2),r=Object(m["c"])(),s=Object(m["c"])();for(let l=0;l<o.length;l++)Object(d["a"])(r,i[2*l],i[2*l+1]),e.toScreen(s,r),o[l]=Object(p["a"])(Math.floor(s[0]),Math.floor(s[1]));return new S({geometry:o},a,g["r"].TRIANGLES,!0)}static fromScreenExtent({xmin:e,xmax:t,ymin:n,ymax:i}){const a={geometry:new Uint32Array([Object(p["a"])(e,n),Object(p["a"])(t,n),Object(p["a"])(e,i),Object(p["a"])(e,i),Object(p["a"])(t,n),Object(p["a"])(t,i)])},o=new Uint32Array([0,1,2,3,4,5]);return new S(a,o,g["r"].TRIANGLES)}static fromMapExtent(e,t){const[n,i]=e.toScreen([0,0],[t.xmin,t.ymin]),[a,o]=e.toScreen([0,0],[t.xmax,t.ymax]),r={geometry:new Uint32Array([Object(p["a"])(n,i),Object(p["a"])(a,i),Object(p["a"])(n,o),Object(p["a"])(n,o),Object(p["a"])(a,i),Object(p["a"])(a,o)])},s=new Uint32Array([0,1,2,3,4,5]);return new S(r,s,g["r"].TRIANGLES)}destroy(){Object(i["k"])(this._cache.indexBuffer)&&this._cache.indexBuffer.dispose();for(const e in this._cache.vertexBuffers)Object(i["k"])(this._cache.vertexBuffers[e])&&this._cache.vertexBuffers[e].dispose()}get elementType(){return y(this.indices)}getIndexBuffer(e,t=g["D"].STATIC_DRAW){return this._cache.indexBuffer||(this._cache.indexBuffer=v["a"].createIndex(e,t,this.indices)),this._cache.indexBuffer}getVertexBuffers(e,t=g["D"].STATIC_DRAW){return this._cache.vertexBuffers||(this._cache.vertexBuffers=Object.keys(this.vertices).reduce((n,i)=>({...n,[i]:v["a"].createVertex(e,t,this.vertices[i])}),{})),this._cache.vertexBuffers}}var O=n("0fa6");const w=l["a"].getLogger("esri.views.2d.engine.webgl.ClippingInfo"),I=e=>parseFloat(e)/100;class E extends u["a"]{constructor(e,t){super(),this._clip=t,this._cache={},this.stage=e,this._handle=Object(c["f"])(()=>t.version,()=>this._invalidate()),this.ready()}static fromClipArea(e,t){return new E(e,t)}_destroyGL(){Object(i["k"])(this._cache.mesh)&&(this._cache.mesh.destroy(),this._cache.mesh=null),Object(i["k"])(this._cache.vao)&&(this._cache.vao.dispose(),this._cache.vao=null)}destroy(){this._destroyGL(),this._handle.remove()}getVAO(e,t,n,a){const[o,r]=t.size;if("geometry"!==this._clip.type&&this._lastWidth===o&&this._lastHeight===r||(this._lastWidth=o,this._lastHeight=r,this._destroyGL()),Object(i["j"])(this._cache.vao)){const i=this._createMesh(t,this._clip),o=i.getIndexBuffer(e),r=i.getVertexBuffers(e);this._cache.mesh=i,this._cache.vao=new O["a"](e,n,a,r,o)}return this._cache.vao}_createTransforms(){return{dvs:Object(a["b"])()}}_invalidate(){this._destroyGL(),this.requestRender()}_createScreenRect(e,t){const[n,i]=e.size,a="string"==typeof t.left?I(t.left)*n:t.left,o="string"==typeof t.right?I(t.right)*n:t.right,r="string"==typeof t.top?I(t.top)*i:t.top,s="string"==typeof t.bottom?I(t.bottom)*i:t.bottom,l=a,c=r;return{x:l,y:c,width:Math.max(n-o-l,0),height:Math.max(i-s-c,0)}}_createMesh(e,t){switch(t.type){case"rect":return S.fromRect(this._createScreenRect(e,t));case"path":return S.fromPath(t);case"geometry":return S.fromGeometry(e,t);default:return w.error(new s["a"]("mapview-bad-type","Unable to create ClippingInfo mesh from clip of type: ${clip.type}")),S.fromRect({x:0,y:0,width:1,height:1})}}}var C=n("c84e");class P extends r["a"]{constructor(){super(...arguments),this.name=this.constructor.name}set clips(e){this._clips=e,this.children.forEach(t=>t.clips=e),this._updateClippingInfo()}_createTransforms(){return{dvs:Object(a["b"])()}}doRender(e){const t=this.createRenderParams(e),{painter:n,globalOpacity:i,profiler:a,drawPhase:o}=t,r=o===C["c"].LABEL||o===C["c"].HIGHLIGHT?1:i*this.computedOpacity;a.recordContainerStart(this.name),n.beforeRenderLayer(t,this._clippingInfos?255:0,r),this.updateTransforms(e.state),this.renderChildren(t),n.compositeLayer(t,r),a.recordContainerEnd()}renderChildren(e){Object(i["j"])(this._renderPasses)&&(this._renderPasses=this.prepareRenderPasses(e.painter));for(const n of this.children)n.beforeRender(e);for(const n of this._renderPasses)try{n.render(e)}catch(t){}for(const n of this.children)n.afterRender(e)}createRenderParams(e){return e.requireFBO=this.requiresDedicatedFBO,e}prepareRenderPasses(e){return[e.registerRenderPass({name:"clip",brushes:[o["a"].clip],target:()=>this._clippingInfos,drawPhase:C["c"].MAP|C["c"].LABEL|C["c"].LABEL_ALPHA|C["c"].DEBUG|C["c"].HIGHLIGHT})]}updateTransforms(e){for(const t of this.children)t.setTransform(e)}onAttach(){super.onAttach(),this._updateClippingInfo()}onDetach(){super.onDetach(),this._updateClippingInfo()}_updateClippingInfo(){if(Object(i["k"])(this._clippingInfos)&&(this._clippingInfos.forEach(e=>e.destroy()),this._clippingInfos=null),!this.stage)return;const e=this._clips;Object(i["k"])(e)&&e.length&&(this._clippingInfos=e.items.map(e=>E.fromClipArea(this.stage,e))),this.requestRender()}}},"9dee":function(e,t,n){"use strict";n.d(t,"a",(function(){return I})),n.d(t,"b",(function(){return l})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return r})),n.d(t,"e",(function(){return w})),n.d(t,"f",(function(){return o})),n.d(t,"g",(function(){return c})),n.d(t,"h",(function(){return h})),n.d(t,"i",(function(){return d})),n.d(t,"j",(function(){return u})),n.d(t,"k",(function(){return p})),n.d(t,"l",(function(){return S}));var i=n("b2b2"),a=n("3e27");function o(e){return Object(i["k"])(e)&&"esri.layers.support.PixelBlock"===e.declaredClass&&e.pixels&&e.pixels.length>0}function r(e,t){if(null==t||!t.length||!o(e))return e;const n=e.pixels.length;return t&&t.some(e=>e>=n)||1===n&&1===t.length&&0===t[0]?e:n!==t.length||t.some((e,t)=>e!==t)?new a["a"]({pixelType:e.pixelType,width:e.width,height:e.height,mask:e.mask,validPixelCount:e.validPixelCount,maskIsAlpha:e.maskIsAlpha,pixels:t.map(t=>e.pixels[t]),statistics:e.statistics&&t.map(t=>e.statistics[t])}):e}function s(e){if(!e)return;const t=e.colormap;if(!t||0===t.length)return;const n=t.sort((e,t)=>e[0]-t[0]);let i=0;n[0][0]<0&&(i=n[0][0]);const a=Math.max(256,n[n.length-1][0]-i+1),o=new Uint8Array(4*a),r=[];let s,l=0,c=0;const u=5===n[0].length;if(a>65536)return n.forEach(e=>{r[e[0]-i]=u?e.slice(1):e.slice(1).concat([255])}),{indexed2DColormap:r,offset:i,alphaSpecified:u};if(e.fillUnspecified)for(s=n[c],l=s[0]-i;l<a;l++)o[4*l]=s[1],o[4*l+1]=s[2],o[4*l+2]=s[3],o[4*l+3]=u?s[4]:255,l===s[0]-i&&(s=c===n.length-1?s:n[++c]);else for(l=0;l<n.length;l++)s=n[l],c=4*(s[0]-i),o[c]=s[1],o[c+1]=s[2],o[c+2]=s[3],o[c+3]=u?s[4]:255;return{indexedColormap:o,offset:i,alphaSpecified:u}}function l(e,t){if(!o(e))return e;if(!t&&(t.indexedColormap||t.indexed2DColormap))return e;const n=e.clone(),i=n.pixels;let a=n.mask;const r=n.width*n.height;if(1!==i.length)return e;const{indexedColormap:s,indexed2DColormap:l,offset:c,alphaSpecified:u}=t,f=s.length-1;let d=0;const m=i[0],h=new Uint8Array(m.length),_=new Uint8Array(m.length),p=new Uint8Array(m.length);let v,g=0;if(s)if(a)for(d=0;d<r;d++)a[d]&&(g=4*(m[d]-c),g<c||g>f?a[d]=0:(h[d]=s[g],_[d]=s[g+1],p[d]=s[g+2],a[d]=s[g+3]));else{for(a=new Uint8Array(r),d=0;d<r;d++)g=4*(m[d]-c),g<c||g>f?a[d]=0:(h[d]=s[g],_[d]=s[g+1],p[d]=s[g+2],a[d]=s[g+3]);n.mask=a}else if(a)for(d=0;d<r;d++)a[d]&&(v=l[m[d]],h[d]=v[0],_[d]=v[1],p[d]=v[2],a[d]=v[3]);else{for(a=new Uint8Array(r),d=0;d<r;d++)v=l[m[d]],h[d]=v[0],_[d]=v[1],p[d]=v[2],a[d]=v[3];n.mask=a}return n.pixels=[h,_,p],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=u,n}function c(e,t){if(!o(e))return null;const{pixels:n,mask:i}=e,r=e.width*e.height,s=n.length;let l=t.lut;const{offset:c}=t;let u,f;l&&1===l[0].length&&(l=n.map(()=>l));const d=[];let m,h,_;if(c)if(null==i)for(u=0;u<s;u++){for(m=n[u],h=l[u],_=new Uint8Array(r),f=0;f<r;f++)_[f]=h[m[f]-c];d.push(_)}else for(u=0;u<s;u++){for(m=n[u],h=l[u],_=new Uint8Array(r),f=0;f<r;f++)i[f]&&(_[f]=h[m[f]-c]);d.push(_)}else if(null==i)for(u=0;u<s;u++){for(m=n[u],h=l[u],_=new Uint8Array(r),f=0;f<r;f++)_[f]=h[m[f]];d.push(_)}else for(u=0;u<s;u++){for(m=n[u],h=l[u],_=new Uint8Array(r),f=0;f<r;f++)i[f]&&(_[f]=h[m[f]]);d.push(_)}const p=new a["a"]({width:e.width,height:e.height,pixels:d,mask:i,pixelType:"u8"});return p.updateStatistics(),p}function u(e,t){if(!o(e))return null;const n=e.clone(),{pixels:i}=n,a=n.width*n.height,r=t.length,s=Math.floor(r/2),l=t[Math.floor(s)],c=i[0];let u,f,d,m,h,_,p=!1;const v=new Uint8Array(a),g=new Uint8Array(a),x=new Uint8Array(a);let y=n.mask;const b=4===t[0].mappedColor.length;for(y||(y=new Uint8Array(a),y.fill(b?255:1),n.mask=y),h=0;h<a;h++)if(y[h]){for(u=c[h],p=!1,_=s,f=l,d=0,m=r-1;m-d>1;){if(u===f.value){p=!0;break}u>f.value?d=_:m=_,_=Math.floor((d+m)/2),f=t[Math.floor(_)]}p||(u===t[d].value?(f=t[d],p=!0):u===t[m].value?(f=t[m],p=!0):u<t[d].value?(p=!1,f=null):u>t[d].value&&(u<t[m].value?(f=t[d],p=!0):m===r-1?(p=!1,f=null):(f=t[m],p=!0))),p?(v[h]=f.mappedColor[0],g[h]=f.mappedColor[1],x[h]=f.mappedColor[2],y[h]=f.mappedColor[3]):v[h]=g[h]=x[h]=y[h]=0}return n.pixels=[v,g,x],n.mask=y,n.pixelType="u8",n.maskIsAlpha=b,n}function f(e,t,n,i,a,o,r,s){return{xmin:a<=n*e?0:a<n*e+e?a-n*e:e,ymin:o<=i*t?0:o<i*t+t?o-i*t:t,xmax:a+r<=n*e?0:a+r<n*e+e?a+r-n*e:e,ymax:o+s<=i*t?0:o+s<i*t+t?o+s-i*t:t}}function d(e,t){if(!e||0===e.length)return null;const n=e.find(e=>e.pixelBlock);if(!n||Object(i["j"])(n.pixelBlock))return null;const a=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,o=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,r=.01*Math.min(a,o),s=e.sort((e,t)=>Math.abs(e.extent.ymax-t.extent.ymax)>r?t.extent.ymax-e.extent.ymax:Math.abs(e.extent.xmin-t.extent.xmin)>r?e.extent.xmin-t.extent.xmin:0),l=Math.min.apply(null,s.map(e=>e.extent.xmin)),c=Math.min.apply(null,s.map(e=>e.extent.ymin)),u=Math.max.apply(null,s.map(e=>e.extent.xmax)),f=Math.max.apply(null,s.map(e=>e.extent.ymax)),d={x:Math.round((t.xmin-l)/a),y:Math.round((f-t.ymax)/o)},m={width:Math.round((u-l)/a),height:Math.round((f-c)/o)},_={width:Math.round((t.xmax-t.xmin)/a),height:Math.round((t.ymax-t.ymin)/o)};return Math.round(m.width/n.pixelBlock.width)*Math.round(m.height/n.pixelBlock.height)!==s.length||d.x<0||d.y<0||m.width<_.width||m.height<_.height?null:{extent:t,pixelBlock:h(s.map(e=>e.pixelBlock),m,{clipOffset:d,clipSize:_})}}function m(e,t,n,i,a,o){const{width:r,height:s}=n.block,{x:l,y:c}=n.offset,{width:u,height:d}=n.mosaic,m=f(r,s,i,a,l,c,u,d);let h=0,_=0;if(o){const e=o.hasGCSSShiftTransform?360:o.halfWorldWidth,t=r*o.resolutionX,n=o.startX+i*t,a=n+t;n<e&&a>e?_=o.rightPadding:n>=e&&(h=o.leftMargin-o.rightPadding,_=0)}if(m.xmax-=_,"number"!=typeof t)for(let f=m.ymin;f<m.ymax;f++){const n=(a*s+f-c)*u+(i*r-l)+h,o=f*r;for(let i=m.xmin;i<m.xmax;i++)e[n+i]=t[o+i]}else for(let f=m.ymin;f<m.ymax;f++){const n=(a*s+f-c)*u+(i*r-l)+h;for(let i=m.xmin;i<m.xmax;i++)e[n+i]=t}}function h(e,t,n={}){const{clipOffset:r,clipSize:s,alignmentInfo:l,blockWidths:c}=n;if(c)return _(e,t,{blockWidths:c});const u=e.find(e=>o(e));if(Object(i["j"])(u))return null;const f=s?s.width:t.width,d=s?s.height:t.height,h=u.width,p=u.height,v=t.width/h,g=t.height/p,x={offset:r||{x:0,y:0},mosaic:s||t,block:{width:h,height:p}},y=u.pixelType,b=a["a"].getPixelArrayConstructor(y),T=u.pixels.length,S=[];let O,w,I;for(let i=0;i<T;i++){w=new b(f*d);for(let t=0;t<g;t++)for(let n=0;n<v;n++){const a=e[t*v+n];o(a)&&(O=a.pixels[i],m(w,O,x,n,t,l))}S.push(w)}if(e.some(e=>Object(i["j"])(e)||e.mask&&e.mask.length>0)){I=new Uint8Array(f*d);for(let t=0;t<g;t++)for(let n=0;n<v;n++){const a=e[t*v+n],o=Object(i["k"])(a)?a.mask:null;m(I,o||(a?1:0),x,n,t,l)}}const E=new a["a"]({width:f,height:d,pixels:S,pixelType:y,mask:I});return E.updateStatistics(),E}function _(e,t,n){const r=e.find(e=>Object(i["k"])(e));if(Object(i["j"])(r))return null;const s=e.some(e=>!Object(i["k"])(e)||!!e.mask),{width:l,height:c}=t,u=s?new Uint8Array(l*c):null,{blockWidths:f}=n,d=[],m=r.getPlaneCount(),h=a["a"].getPixelArrayConstructor(r.pixelType);if(s)for(let i=0,a=0;i<e.length;a+=f[i],i++){const t=e[i];if(!o(t))continue;const n=t.mask;for(let e=0;e<c;e++)for(let o=0;o<f[i];o++)u[e*l+o+a]=null==n?255:n[e*t.width+o]}for(let i=0;i<m;i++){const t=new h(l*c);for(let n=0,a=0;n<e.length;a+=f[n],n++){const r=e[n];if(!o(r))continue;const s=r.pixels[i];if(null!=s)for(let e=0;e<c;e++)for(let i=0;i<f[n];i++)t[e*l+i+a]=s[e*r.width+i]}d.push(t)}const _=new a["a"]({width:l,height:c,mask:u,pixels:d,pixelType:r.pixelType});return _.updateStatistics(),_}function p(e,t,n){if(!o(e))return null;const{width:i,height:a}=e,r=t.x,s=t.y,l=n.width+r,c=n.height+s;if(r<0||s<0||l>i||c>a)return e;if(0===r&&0===s&&l===i&&c===a)return e;e.mask||(e.mask=new Uint8Array(i*a));const u=e.mask;for(let o=0;o<a;o++){const e=o*i;for(let t=0;t<i;t++)u[e+t]=o<s||o>=c||t<r||t>=l?0:1}return e.updateStatistics(),e}function v(e){if(!o(e))return null;const t=e.clone(),{width:n,height:i,pixels:a,mask:r}=e,s=a[0],l=t.pixels[0];for(let o=2;o<i-1;o++){const e=new Map;for(let i=o-2;i<o+2;i++)for(let t=0;t<4;t++){const a=i*n+t;y(e,s[a],r?r[a]:1)}l[o*n]=g(e),l[o*n+1]=l[o*n+2]=l[o*n];let t=3;for(;t<n-1;t++){let i=(o-2)*n+t+1;y(e,s[i],r?r[i]:1),i=(o-1)*n+t+1,y(e,s[i],r?r[i]:1),i=o*n+t+1,y(e,s[i],r?r[i]:1),i=(o+1)*n+t+1,y(e,s[i],r?r[i]:1),i=(o-2)*n+t-3,x(e,s[i],r?r[i]:1),i=(o-1)*n+t-3,x(e,s[i],r?r[i]:1),i=o*n+t-3,x(e,s[i],r?r[i]:1),i=(o+1)*n+t-3,x(e,s[i],r?r[i]:1),l[o*n+t]=g(e)}l[o*n+t+1]=l[o*n+t]}for(let o=0;o<n;o++)l[o]=l[n+o]=l[2*n+o],l[(i-1)*n+o]=l[(i-2)*n+o];return t.updateStatistics(),t}function g(e){if(0===e.size)return 0;let t=0,n=-1,i=0;const a=e.keys();let o=a.next();for(;!o.done;)i=e.get(o.value),i>t&&(n=o.value,t=i),o=a.next();return n}function x(e,t,n){if(0===n)return;const i=e.get(t);1===i?e.delete(t):e.set(t,i-1)}function y(e,t,n){0!==n&&e.set(t,e.has(t)?e.get(t)+1:1)}function b(e,t,n){let{x:i,y:r}=t;const{width:s,height:l}=n;if(0===i&&0===r&&l===e.height&&s===e.width)return e;const{width:c,height:u}=e,f=Math.max(0,r),d=Math.max(0,i),m=Math.min(i+s,c),h=Math.min(r+l,u);if(m<0||h<0||!o(e))return null;i=Math.max(0,-i),r=Math.max(0,-r);const{pixels:_,mask:p}=e,v=s*l,g=_.length,x=[];for(let o=0;o<g;o++){const t=_[o],n=a["a"].createEmptyBand(e.pixelType,v);for(let e=f;e<h;e++){const a=e*c;let o=(e+r-f)*s+i;for(let e=d;e<m;e++)n[o++]=t[a+e]}x.push(n)}const y=new Uint8Array(v);for(let a=f;a<h;a++){const e=a*c;let t=(a+r-f)*s+i;for(let n=d;n<m;n++)y[t++]=p?p[e+n]:1}const b=new a["a"]({width:n.width,height:n.height,pixelType:e.pixelType,pixels:x,mask:y});return b.updateStatistics(),b}function T(e,t=!0){if(!o(e))return null;const{pixels:n,width:i,height:r,mask:s,pixelType:l}=e,c=[],u=Math.round(i/2),f=Math.round(r/2),d=r-1,m=i-1;for(let o=0;o<n.length;o++){const e=n[o],s=a["a"].createEmptyBand(l,u*f);let h=0;for(let n=0;n<r;n+=2)for(let a=0;a<i;a+=2){const o=e[n*i+a];if(t){const t=a===m?o:e[n*i+a+1],r=n===d?o:e[n*i+a+i],l=a===m?r:n===d?t:e[n*i+a+i+1];s[h++]=(o+t+r+l)/4}else s[h++]=o}c.push(s)}let h=null;if(s){h=new Uint8Array(u*f);let e=0;for(let n=0;n<r;n+=2)for(let a=0;a<i;a+=2){const o=s[n*i+a];if(t){const t=a===m?o:s[n*i+a+1],r=n===d?o:s[n*i+a+i],l=a===m?r:n===d?t:s[n*i+a+i+1];h[e++]=o*t*r*l?1:0}else h[e++]=o}}return new a["a"]({width:u,height:f,pixelType:l,pixels:c,mask:h})}function S(e,t,n){if(!o(e))return null;const{width:i,height:a}=t;let{width:r,height:s}=e;const l=new Map,c={x:0,y:0},u=null==n?1:1+n;let f=e;for(let o=0;o<u;o++){const e=Math.ceil(r/i),n=Math.ceil(s/a);for(let r=0;r<n;r++){c.y=r*a;for(let n=0;n<e;n++){c.x=n*i;const e=b(f,c,t);l.set(`${o}/${r}/${n}`,e)}}o<u-1&&(f=T(f)),r=Math.round(r/2),s=Math.round(s/2)}return l}function O(e,t,n,i,a=.5){const{width:o,height:r}=e,{width:s,height:l}=t,c=i.cols,u=i.rows,f=Math.ceil(s/c-.1/c),d=Math.ceil(l/u-.1/u);let m,h,_,p,v,g,x;const y=f*c,b=y*d*u,T=new Float32Array(b),S=new Float32Array(b),O=new Uint32Array(b),w=new Uint32Array(b);let I,E,C=0;for(let P=0;P<d;P++)for(let e=0;e<f;e++){m=12*(P*f+e),h=n[m],_=n[m+1],p=n[m+2],v=n[m+3],g=n[m+4],x=n[m+5];for(let t=0;t<u;t++){C=(P*u+t)*y+e*c,E=(t+.5)/u;for(let e=0;e<t;e++)I=(e+.5)/c,T[C+e]=(h*I+_*E+p)*o-a,S[C+e]=(v*I+g*E+x)*r-a,O[C+e]=Math.round(T[C+e]),w[C+e]=Math.round(S[C+e])}m+=6,h=n[m],_=n[m+1],p=n[m+2],v=n[m+3],g=n[m+4],x=n[m+5];for(let t=0;t<u;t++){C=(P*u+t)*y+e*c,E=(t+.5)/u;for(let e=t;e<c;e++)I=(e+.5)/c,T[C+e]=(h*I+_*E+p)*o-a,S[C+e]=(v*I+g*E+x)*r-a,O[C+e]=Math.round(T[C+e]),w[C+e]=Math.round(S[C+e])}}return{offsets_x:T,offsets_y:S,offsets_xi:O,offsets_yi:w,gridWidth:y}}function w(e,t){const{coefficients:n,spacing:i}=t,{offsets_x:a,offsets_y:o,gridWidth:r}=O(e,e,n,{rows:i[0],cols:i[1]},.5),{width:s,height:l}=e,c=new Float32Array(s*l),u=180/Math.PI;for(let f=0;f<l;f++)for(let e=0;e<s;e++){const t=f*r+e,n=0===f?t:t-r,i=f===l-1?t:t+r,d=a[n]-a[i],m=o[i]-o[n];if(isNaN(d)||isNaN(m))c[f*s+e]=90;else{let t=Math.atan2(m,d)*u;t=(360+t)%360,c[f*s+e]=t}}return c}function I(e,t,n,i,r="nearest"){if(!o(e))return null;"majority"===r&&(e=v(e));const{pixels:s,mask:l,pixelType:c}=e,u=e.width,f=e.height,d=a["a"].getPixelArrayConstructor(c),m=s.length,{width:h,height:_}=t;let p=!1;for(let a=0;a<n.length;a+=3)-1===n[a]&&-1===n[a+1]&&-1===n[a+2]&&(p=!0);const{offsets_x:g,offsets_y:x,offsets_xi:y,offsets_yi:b,gridWidth:T}=O({width:u,height:f},t,n,i,"majority"===r?0:.5);let S;const w=(e,t,n)=>{const i=e instanceof Float32Array||e instanceof Float64Array?0:.5;for(let a=0;a<_;a++){S=a*T;for(let o=0;o<h;o++){if(g[S]<0||x[S]<0)e[a*h+o]=0;else if(n)e[a*h+o]=t[y[S]+b[S]*u];else{const n=Math.floor(g[S]),r=Math.floor(x[S]),s=Math.ceil(g[S]),c=Math.ceil(x[S]),f=g[S]-n,d=x[S]-r;if(!l||l[n+r*u]&&l[n+r*u]&&l[n+c*u]&&l[s+c*u]){const l=(1-f)*t[n+r*u]+f*t[s+r*u],m=(1-f)*t[n+c*u]+f*t[s+c*u];e[a*h+o]=(1-d)*l+d*m+i}else e[a*h+o]=t[y[S]+b[S]*u]}S++}}},I=[];let E;for(let a=0;a<m;a++)E=new d(h*_),w(E,s[a],"nearest"===r||"majority"===r),I.push(E);const C=new a["a"]({width:h,height:_,pixelType:c,pixels:I});if(l)C.mask=new Uint8Array(h*_),w(C.mask,l,!0);else if(p){C.mask=new Uint8Array(h*_);for(let e=0;e<h*_;e++)C.mask[e]=g[e]<0||x[e]<0?0:1}return C.updateStatistics(),C}},ad73:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return o}));var i=n("b2b2"),a=n("c1da");async function o(e,t=e.popupTemplate){if(Object(i["j"])(t))return[];const n=await t.getRequiredFields(e.fieldsIndex),{lastEditInfoEnabled:o}=t,{objectIdField:r,typeIdField:s,globalIdField:l,relationships:c}=e;if(n.includes("*"))return["*"];const u=o?await Object(a["n"])(e):[],f=Object(a["j"])(e.fieldsIndex,[...n,...u]);return s&&f.push(s),f&&r&&e.fieldsIndex.has(r)&&!f.includes(r)&&f.push(r),f&&l&&e.fieldsIndex.has(l)&&!f.includes(l)&&f.push(l),c&&c.forEach(t=>{const{keyField:n}=t;f&&n&&e.fieldsIndex.has(n)&&!f.includes(n)&&f.push(n)}),f}function r(e,t){return e.popupTemplate?e.popupTemplate:Object(i["k"])(t)&&t.defaultPopupTemplateEnabled&&Object(i["k"])(e.defaultPopupTemplate)?e.defaultPopupTemplate:null}},aebc:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return ie}));var i=n("a4ee"),a=n("8d60"),o=n("e92d"),r=n("f4cc"),s=n("477c"),l=n("59b2"),c=(n("b50f"),n("c120"),n("cea0"),n("d386")),u=n("870c"),f=n("566d"),d=n("b2b2"),m=n("9180"),h=n("a98b"),_=n("3b1a"),p=n("8c71"),v=n("f440"),g=n("e4b1");class x extends g["a"]{constructor(e,t,n,i,a,o=null){super(e,t,n,i,a),this.bitmap=new v["a"](o,null,null),this.bitmap.coordScale=[i,a],this.bitmap.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}setTransform(e,t){super.setTransform(e,t),this.bitmap.transforms.dvs=this.transforms.dvs}_createTransforms(){return{dvs:Object(p["b"])(),tileMat3:Object(p["b"])()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}}var y=n("c84e"),b=n("6722");class T extends b["a"]{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(e){const t=this._getTileBounds(e),[n,i]=this._tileInfoView.tileInfo.size;return new x(e,t[0],t[3],n,i)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (tile)",brushes:[_["a"].raster],target:()=>this.children.map(e=>e.bitmap),drawPhase:y["c"].MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===y["c"].MAP&&super.doRender(e)}_getTileBounds(e){const t=this._tileInfoView.getTileBounds(Object(m["k"])(),e);if(this.isCustomTilingScheme&&e.world){const{tileInfo:n}=this._tileInfoView,i=Object(h["o"])(n.spatialReference);if(i){const{resolution:a}=n.lodAt(e.level),o=i/a%n.size[0],r=o?(n.size[0]-o)*a:0;t[0]-=r*e.world,t[2]-=r*e.world}}return t}}n("e06a");var S=n("9096"),O=n("4ae5"),w=n("3e27"),I=n("dff3"),E=n("218c"),C=n("9dee"),P=n("b4e0"),A=(n("3e7b"),n("018d")),M=(n("ae54"),n("07cd")),R=n("d302"),D=n("b2af"),L=n("3af1");const z=[0,0],N=o["a"].getLogger("esri.views.2d.layers.ImageryTileLayerView2D");let F=class extends S["a"]{constructor(){super(...arguments),this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=null,this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._globalUpdateRequested=!1,this.attached=!1,this.container=null,this.layer=null,this.timeExtent=null,this.redrawOrRefetch=Object(r["f"])((e,t)=>!this.previousLOD||this.layerView.suspended?Promise.resolve():e?this.updatingHandles.addPromise(this.doRefresh()):this.updatingHandles.addPromise(this._redrawImage(t)))}get useWebGLForProcessing(){var e;return null==(e=this._get("useWebGLForProcessing"))||e}set useWebGLForProcessing(e){this._set("useWebGLForProcessing",e)}get useProgressiveUpdate(){return null==this._get("useProgressiveUpdate")||this._get("useProgressiveUpdate")}set useProgressiveUpdate(e){if(this._tileStrategy&&this.useProgressiveUpdate!==e){this._tileStrategy.destroy(),this.container.removeAllChildren();const t=this._getCacheSize(e);this._tileStrategy=new R["a"]({cachePolicy:"purge",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),cacheSize:t,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",e),this.layerView.requestUpdate()}}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume();const{extent:t,resolution:n,scale:i}=e.state,a=this._tileInfoView.getClosestInfoForScale(i);if(this.layer.raster){var o;if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const e=this._srcResolutions[a.level],i=t.toJSON?t:L["a"].fromJSON(t);Object(E["h"])(this._blockCacheRegistryUrl,this._blockCacheRegistryId,i,n,e,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,(null==(o=this.previousLOD)?void 0:o.level)!==a.level&&(this.previousLOD=a,null==this._symbolizerParams||this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,0===this._fetchQueue.length&&this._redrawImage(this._abortController.signal).then(()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()}));const e=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(e),this.layerView.requestUpdate()}get updating(){var e;return(null==(e=this._fetchQueue)?void 0:e.updating)||this._globalUpdateRequested||!(!this.updatingHandles||!this.updatingHandles.updating)}attach(){Object(D["a"])("2d").supportsTextureFloat||(this.useWebGLForProcessing=!1),this._initializeTileInfo(),this._tileInfoView=new A["a"](this.layerView.tileInfo,this.layerView.fullExtent);const e=this._computeFetchConcurrency();this._fetchQueue=new M["a"]({tileInfoView:this._tileInfoView,concurrency:e,process:(e,t)=>this._fetchTile1(e,t)});const t=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new R["a"]({cachePolicy:"purge",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),cacheSize:t,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,Object(E["g"])(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(e){const t=this.container.createTile(e);return this._enqueueTileFetch(t),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,t}releaseTile(e){this._fetchQueue.abort(e.key.id),this.container.removeChild(e),e.once("detach",()=>{e.destroy(),this.layerView.requestUpdate()}),this.layerView.requestUpdate()}createEmptyTilePixelBlock(e=null){const t=null==e||e.join(",")===this._tileInfoView.tileInfo.size.join(",");if(t&&Object(d["k"])(this._emptyTilePixelBlock))return this._emptyTilePixelBlock;e=e||this._tileInfoView.tileInfo.size;const[n,i]=e,a=new w["a"]({width:n,height:i,pixels:[new Uint8Array(n*i)],mask:new Uint8Array(n*i),pixelType:"u8"});return t&&(this._emptyTilePixelBlock=a),a}_fetchTile1(e,t){const n=Object(d["k"])(t)&&t.signal,i=this.canUseWebGLForProcessing(),{layerView:a}=this,o=!a.tileInfo.isWrappable&&Object(d["k"])(Object(P["e"])(a.view.spatialReference)),r={allowPartialFill:!0,datumTransformation:a.datumTransformation,interpolation:i?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:i,signal:Object(d["r"])(n),srcResolution:this._srcResolutions[e.level],timeExtent:a.timeExtent,tileInfo:a.tileInfo,disableWrapAround:o};return this.fetchTile(e,r)}_getCacheSize(e){return e?40:0}_initializeTileInfo(){const e=this.layerView.view.spatialReference,t=new O["a"]({x:this.layerView.fullExtent.xmin,y:this.layerView.fullExtent.ymax,spatialReference:e}),{scales:n,srcResolutions:i,isCustomTilingScheme:a}=Object(P["a"])(this.layer.rasterInfo,e),o=I["a"].create({spatialReference:e,size:512,scales:n});(0===o.origin.x||o.origin.x>t.x)&&(o.origin=t),this._isCustomTilingScheme=a,this.layerView.set("tileInfo",o),this._srcResolutions=null!=i?i:[]}_computeFetchConcurrency(){const{blockBoundary:e}=this.layer.rasterInfo.storageInfo,t=e[e.length-1];return(t.maxCol-t.minCol+1)*(t.maxRow-t.minRow+1)>64?2:10}async _enqueueTileFetch(e,t){this.updatingHandles.addPromise(this._enqueueTileFetch1(e,t))}async _enqueueTileFetch1(e,t){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key),{bandIds:i}=this.layer;let a=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&0===this._fetchQueue.length){a=!1;try{await this._redrawImage(this._abortController&&this._abortController.signal)}catch(n){Object(r["j"])(n)&&N.error(n)}this._globalUpdateRequested=!1}!this.canUseWebGLForProcessing()&&"rasterVF"!==this.type||this.layerView.hasTilingEffects||null!=this._symbolizerParams||this._updateSymbolizerParams();const o=this._tileInfoView.getTileCoords(z,e.key),s=this._tileInfoView.getTileResolution(e.key);await this.updateTileSource(e,{source:t,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:a,bandIds:i,coords:o,resolution:s}),e.once("attach",()=>this.layerView.requestUpdate()),this.container.addChild(e)}catch(n){Object(r["j"])(n)||N.error(n)}this.layerView.requestUpdate()}}async _redrawImage(e){if(0===this.container.children.length)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(e):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const t=this.container.children.map(async e=>this.updateTileSymbolizerParameters(e,{local:this._symbolizerParams,global:this._globalSymbolizerParams}));await Object(r["g"])(t),this.container.requestRender()}async _updateGlobalSymbolizerParams(e){const t={srcResolution:this._srcResolutions[this.previousLOD.level],registryId:this._blockCacheRegistryId,signal:e},n=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,t);if(!n||!n.pixelBlock)return;const i=this.layer.symbolizer.generateWebGLParameters({pixelBlock:Object(C["d"])(n.pixelBlock,this.layer.bandIds),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:this.previousLOD.resolution,y:this.previousLOD.resolution},bandIds:this.layer.bandIds});!this.canUseWebGLForProcessing()&&i&&"stretch"===i.type&&this.layer.renderer&&"raster-stretch"===this.layer.renderer.type&&(i.factor=i.factor.map(e=>255*e),i.outMin=Math.round(255*i.outMin),i.outMax=Math.round(255*i.outMax)),this._globalSymbolizerParams=i}_updateSymbolizerParams(){this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:this.previousLOD.resolution,y:this.previousLOD.resolution},bandIds:this.layer.bandIds})}_updateBlockCacheRegistry(e=!1){const{url:t,rasterInfo:n,raster:i}=this.layer,{multidimensionalDefinition:a}=this.layer.normalizeRasterFetchOptions({multidimensionalDefinition:this.layer.multidimensionalDefinition,timeExtent:this.layerView.timeExtent}),o=null!=n&&n.multidimensionalInfo?i.getSliceIndex(a):null,r=Object(E["d"])(t,o);if(r!==this._blockCacheRegistryUrl){if(null!=this._blockCacheRegistryUrl&&Object(E["g"])(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=Object(E["f"])(r,this.layer.raster.rasterInfo),e){const e=this._tileInfoView.getClosestInfoForScale(this.layerView.view.scale),t=this._srcResolutions[e.level];Object(E["h"])(r,this._blockCacheRegistryId,this.layerView.view.extent,this.layerView.view.resolution,t,this.layer.raster.ioConfig.sampling)}this._blockCacheRegistryUrl=r}}async doRefresh(){await this.layer.updateRenderer(),this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const e=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.tiles.forEach(t=>e.push(this._enqueueTileFetch(t))),await Object(r["g"])(e)}};Object(i["a"])([Object(l["b"])()],F.prototype,"_fetchQueue",void 0),Object(i["a"])([Object(l["b"])()],F.prototype,"_globalUpdateRequested",void 0),Object(i["a"])([Object(l["b"])()],F.prototype,"attached",void 0),Object(i["a"])([Object(l["b"])()],F.prototype,"container",void 0),Object(i["a"])([Object(l["b"])()],F.prototype,"layer",void 0),Object(i["a"])([Object(l["b"])()],F.prototype,"layerView",void 0),Object(i["a"])([Object(l["b"])()],F.prototype,"type",void 0),Object(i["a"])([Object(l["b"])()],F.prototype,"useWebGLForProcessing",null),Object(i["a"])([Object(l["b"])()],F.prototype,"useProgressiveUpdate",null),Object(i["a"])([Object(l["b"])()],F.prototype,"timeExtent",void 0),Object(i["a"])([Object(l["b"])()],F.prototype,"updating",null),F=Object(i["a"])([Object(c["a"])("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],F);var U=n("45a5");let V=class extends F{constructor(){super(...arguments),this.container=null,this.layer=null,this.type="raster"}attach(){super.attach(),this.container=new T(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}canUseWebGLForProcessing(){return this.useWebGLForProcessing&&this.layer.symbolizer.canRenderInWebGL&&!("majority"===this.layer.interpolation&&Object(U["a"])(this.layer))}fetchTile(e,t){return this.layer.fetchTile(e.level,e.row,e.col,t)}async updateTileSource(e,t){const{bandIds:n}=this.layer,i=this._getLayerInterpolation(),a=this.canUseWebGLForProcessing(),{source:o,globalSymbolizerParams:r,suspended:s,coords:l,resolution:c}=t,u=this.layerView.hasTilingEffects?r:t.symbolizerParams,{bitmap:f}=e;if([f.x,f.y]=l,f.resolution=c,o&&Object(d["k"])(o)&&Object(d["k"])(o.pixelBlock)){const e={extent:o.extent,pixelBlock:o.pixelBlock};if(f.rawPixelData=e,a)f.source=o.pixelBlock,f.isRendereredSource=!1;else{const t=await this.layer.applyRenderer(e,"stretch"===(null==r?void 0:r.type)?r:null);f.source=t,f.isRendereredSource=!0}f.symbolizerParameters=a?u:null,a?f.transformGrid||(f.transformGrid=o.transformGrid):f.transformGrid=null}else{const e=this.createEmptyTilePixelBlock();f.source=e,f.symbolizerParameters=a?u:null,f.transformGrid=null}f.bandIds=a?n:null,f.width=this._tileInfoView.tileInfo.size[0],f.height=this._tileInfoView.tileInfo.size[1],f.interpolation=i,f.suspended=s,f.invalidateTexture()}async updateTileSymbolizerParameters(e,t){const{local:n,global:i}=t,{bandIds:a}=this.layer,o=this._getLayerInterpolation(),r=this.canUseWebGLForProcessing(),{bitmap:s}=e,{rawPixelData:l}=s;!r&&Object(d["k"])(l)?(s.source=await this.layer.applyRenderer(l,"stretch"===(null==i?void 0:i.type)?i:null),s.isRendereredSource=!0):(s.isRendereredSource&&Object(d["k"])(l)&&(s.source=l.pixelBlock),s.isRendereredSource=!1),s.symbolizerParameters=r?this.layerView.hasTilingEffects?i:n:null,s.bandIds=r?a:null,s.interpolation=o,s.suspended=!1}_getLayerInterpolation(){const e=this.layer.renderer.type;if("raster-colormap"===e||"unique-value"===e||"class-breaks"===e)return"nearest";const{interpolation:t}=this.layer,{renderer:n}=this.layer;return"raster-stretch"===n.type&&null!=n.colorRamp?"bilinear"===t||"cubic"===t?"bilinear":"nearest":t}};Object(i["a"])([Object(l["b"])()],V.prototype,"container",void 0),Object(i["a"])([Object(l["b"])()],V.prototype,"layer",void 0),Object(i["a"])([Object(l["b"])()],V.prototype,"type",void 0),V=Object(i["a"])([Object(c["a"])("esri.views.2d.layers.imagery.ImageryTileView2D")],V);const k=V;var j=n("19db"),B=n("3bc3"),G=n("1c92"),H=n("0722");class Y extends g["a"]{constructor(e,t,n,i,a,o=null){super(e,t,n,i,a),this.tileData=new H["a"](o),this.tileData.coordScale=[i,a],this.tileData.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(e){this.tileData.stencilRef=e}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{dvs:Object(p["b"])(),tileMat3:Object(p["b"])()}}setTransform(e,t){super.setTransform(e,t);const n=t/(e.resolution*e.pixelRatio),i=this.transforms.tileMat3,[a,o]=this.tileData.offset,r=[this.x+a*t,this.y-o*t],[s,l]=e.toScreenNoRotation([0,0],r),{symbolTileSize:c}=this.tileData.symbolizerParameters,u=Math.round((this.width-this.tileData.offset[0])/c)*c,f=Math.round((this.height-this.tileData.offset[1])/c)*c,d=u/this.rangeX*n,m=f/this.rangeY*n;Object(G["m"])(i,d,0,0,0,m,0,s,l,1),Object(G["j"])(this.transforms.dvs,e.displayViewMat3,i),this.tileData.transforms.dvs=this.transforms.dvs}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class W extends b["a"]{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(e){const t=this._tileInfoView.getTileBounds(Object(m["k"])(),e),[n,i]=this._tileInfoView.tileInfo.size;return new Y(e,t[0],t[3],n,i)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (vf tile)",brushes:[B["a"]],target:()=>this.children.map(e=>e.tileData),drawPhase:y["c"].MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===y["c"].MAP&&this.symbolTypes.forEach(t=>{e.renderPass=t,super.doRender(e)})}}let q=class extends F{constructor(){super(...arguments),this._handle=null,this.container=null,this.layer=null,this.type="rasterVF"}canUseWebGLForProcessing(){return!1}async fetchTile(e,t){t={...t,interpolation:"nearest",requestProjectedLocalDirections:!0};const n=await this.layer.fetchTile(e.level,e.row,e.col,t);return"vector-magdir"===this.layer.rasterInfo.dataType&&null!=n&&n.pixelBlock&&(n.pixelBlock=await this.layer.convertVectorFieldData(n.pixelBlock,t)),n}updateTileSource(e,t){const n=t.symbolizerParams,{tileData:i}=e;i.key=e.key,i.width=this._tileInfoView.tileInfo.size[0],i.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:a}=n,{source:o}=t;if(i.offset=this._getTileSymbolOffset(i.key,a),Object(d["k"])(o)&&Object(d["k"])(o.pixelBlock)){const e={extent:o.extent,pixelBlock:o.pixelBlock};i.rawPixelData=e,i.symbolizerParameters=n,i.source=this._sampleVectorFieldData(o.pixelBlock,n,i.offset)}else{const e=[Math.round((this._tileInfoView.tileInfo[0]-i.offset[0])/a),Math.round((this._tileInfoView.tileInfo[1]-i.offset[1])/a)],t=this.createEmptyTilePixelBlock(e);i.source=t,i.symbolizerParameters=n}return i.invalidateVAO(),Promise.resolve(null)}updateTileSymbolizerParameters(e,t){var n;const i=t.local,{symbolTileSize:a}=i,{tileData:o}=e;o.offset=this._getTileSymbolOffset(o.key,a);const r=o.symbolizerParameters.symbolTileSize;return o.symbolizerParameters=i,Object(d["k"])(null==(n=o.rawPixelData)?void 0:n.pixelBlock)&&r!==a&&(o.source=this._sampleVectorFieldData(o.rawPixelData.pixelBlock,o.symbolizerParameters,o.offset)),Promise.resolve(null)}attach(){super.attach(),this.container=new W(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=Object(s["f"])(()=>this.layer.renderer,e=>this._updateSymbolType(e))}detach(){super.detach(),this.container.removeAllChildren(),this._handle.remove(),this._handle=null}_getTileSymbolOffset(e,t){const n=e.col*this._tileInfoView.tileInfo.size[0]%t,i=e.row*this._tileInfoView.tileInfo.size[1]%t;return[n>t/2?t-n:-n,i>t/2?t-i:-i]}_sampleVectorFieldData(e,t,n){const{symbolTileSize:i}=t;return Object(j["g"])(e,"vector-uv",i,n)}_updateSymbolType(e){"vector-field"===e.type&&(this.container.symbolTypes="wind-barb"===e.style?["scalar","triangle"]:"simple-scalar"===e.style?["scalar"]:["triangle"])}};Object(i["a"])([Object(l["b"])()],q.prototype,"container",void 0),Object(i["a"])([Object(l["b"])()],q.prototype,"layer",void 0),Object(i["a"])([Object(l["b"])()],q.prototype,"type",void 0),q=Object(i["a"])([Object(c["a"])("esri.views.2d.layers.imagery.VectorFieldTileView2D")],q);const Z=q;var X=n("ce50"),K=n("22f4"),Q=n("ad73");const $=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.tileInfo=null}get fullExtent(){return this._getfullExtent()}_getfullExtent(){return this.projectFullExtent(this.view.spatialReference)}get hasTilingEffects(){return this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment}get datumTransformation(){return Object(P["b"])(Object(d["r"])(this.layer.fullExtent),this.view.spatialReference,!0)}supportsSpatialReference(e){return!!this.projectFullExtent(e)}projectFullExtent(e){const t=Object(d["r"])(this.layer.fullExtent),n=Object(P["b"])(t,e,!1);return Object(P["h"])(t,e,n)}async fetchPopupFeatures(e,t){const{layer:n}=this;if(!e)throw new X["a"]("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:n});const{popupEnabled:i}=n,o=Object(Q["a"])(n,t);if(!i||Object(d["j"])(o))throw new X["a"]("imageryTileLayerView:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:i,popupTemplate:o});const r=[],{value:s,magdirValue:l}=await n.identify(e,{timeExtent:this.timeExtent});let c="";if(s&&s.length){var u,f;c="imagery-tile"===n.type&&n.hasStandardTime()&&null!=s[0]?s.map(e=>n.getStandardTimeValue(e)).join(", "):s.join(", ");const e={ObjectId:0},t="Raster.ServicePixelValue";e[t]=this._formatAttributeValue(c,t);const i=null==(u=n.rasterInfo)||null==(f=u.attributeTable)?void 0:f.features;if(i&&i.length>0){const t=i.filter(e=>{const t=e.attributes.value||e.attributes.Value||e.attributes.VALUE;return String(t)===c});if(t.length>0){const n=t[0];if(n)for(const t in n.attributes)if(n.attributes.hasOwnProperty(t)){const i=this._rasterFieldPrefix+t;e[i]=this._formatAttributeValue(n.attributes[t],i)}}}const o=n.rasterInfo.dataType;"vector-magdir"!==o&&"vector-uv"!==o||(e["Raster.Magnitude"]=null==l?void 0:l[0],e["Raster.Direction"]=null==l?void 0:l[1]);const d=new a["a"](this.fullExtent.clone(),null,e);d.layer=n,d.sourceLayer=d.layer,r.push(d)}return r}_formatAttributeValue(e,t){if("string"==typeof e){const n=this.layer.popupTemplate&&this.layer.popupTemplate.fieldInfos,i=this._getFieldInfo(n,t),a=i&&i.format;if(a){let t,n;return e.trim().includes(",")?(t=",",n=t+" ",this._formatDelimitedString(e,t,n,a)):e.trim().includes(" ")?(t=n=" ",this._formatDelimitedString(e,t,n,a)):this._formatNumberFromString(e,a)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const n=t.toLowerCase();let i;return e.some(e=>!(!e.fieldName||e.fieldName.toLowerCase()!==n&&e.fieldName.toLowerCase()!==n.replace(/ /g,"_"))&&(i=e,!0)),i}_formatDelimitedString(e,t,n,i){return e&&t&&n&&i?e.trim().split(t).map(e=>this._formatNumberFromString(e,i)).join(n):e}_formatNumberFromString(e,t){if(!e||!t)return e;const n=Number(e);return isNaN(n)?e:t.format(n)}};return Object(i["a"])([Object(l["b"])()],t.prototype,"layer",void 0),Object(i["a"])([Object(l["b"])(K["a"])],t.prototype,"timeExtent",void 0),Object(i["a"])([Object(l["b"])()],t.prototype,"view",void 0),Object(i["a"])([Object(l["b"])()],t.prototype,"fullExtent",null),Object(i["a"])([Object(l["b"])()],t.prototype,"tileInfo",void 0),Object(i["a"])([Object(l["b"])({readOnly:!0})],t.prototype,"hasTilingEffects",null),t=Object(i["a"])([Object(c["a"])("esri.views.layers.ImageryTileLayerView")],t),t};var J=n("365a"),ee=n("6c7a");const te=o["a"].getLogger("esri.views.2d.layers.ImageryTileLayerView2D");let ne=class extends($(Object(ee["a"])(Object(f["a"])(J["a"])))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(e){this._useWebGLForProcessing=e,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=e)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(e){this._useProgressiveUpdate=e,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=e)}update(e){this.subview.update(e),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.handles.add([Object(s["f"])(()=>{const{layer:e}=this;return{bandIds:e.bandIds,renderer:e.renderer,interpolation:e.interpolation,multidimensionalDefinition:e.multidimensionalDefinition}},(e,t)=>{var n,i;const a=e.interpolation!==t.interpolation&&("majority"===e.interpolation||"majority"===t.interpolation)&&Object(U["a"])(this.layer),o=e.renderer!==t.renderer&&(null==(n=t.renderer)?void 0:n.type)!==(null==(i=e.renderer)?void 0:i.type);o&&this._updateSubview();const s=e.multidimensionalDefinition!==t.multidimensionalDefinition||a||o;this.subview.redrawOrRefetch(s).catch(e=>{Object(r["j"])(e)||te.error(e)}),this.notifyChange("updating")}),Object(s["f"])(()=>{var e;return null!=(e=this.layer.blendMode)?e:"normal"},e=>{this.subview.container.blendMode=e},s["e"]),Object(s["f"])(()=>{var e;return null!=(e=this.layer.effect)?e:null},e=>{this.subview.container.effect=e},s["e"]),Object(s["f"])(()=>this.timeExtent,()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch(!0).catch(e=>{Object(r["j"])(e)||te.error(e)})},s["a"])],"attach")}detach(){var e;this.handles.remove("attach"),this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),null!=(e=this.subview)&&e.destroy(),this.subview=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}async hitTest(e,t){return[{type:"graphic",layer:this.layer,mapPoint:e,graphic:new a["a"]({attributes:{},geometry:e.clone()})}]}doRefresh(){return this.subview.doRefresh()}_updateSubview(){const e="vector-field"===this.layer.renderer.type?"rasterVF":"flow"===this.layer.renderer.type?"flow":"raster";if(this.subview){var t;if(this.subview.type===e)return void this._attachSubview(this.subview);this._detachSubview(this.subview),null!=(t=this.subview)&&t.destroy(),this.subview=null}const{layer:n}=this;let i;i="rasterVF"===e?new Z({layer:n,layerView:this}):"flow"===e?new u["a"]({layer:n,layerView:this}):new k({layer:n,layerView:this}),"useWebGLForProcessing"in i&&(i.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in i&&(i.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in i&&(i.previousLOD=this.subview&&"previousLOD"in this.subview&&this.subview.previousLOD),this._attachSubview(i),this.subview=i,this.requestUpdate()}_attachSubview(e){e&&!e.attached&&(e.attach(),e.attached=!0,this.container.addChildAt(e.container,0),e.container.blendMode=this.layer.blendMode,e.container.effect=this.layer.effect)}_detachSubview(e){(null==e?void 0:e.attached)&&(this.container.removeChild(e.container),e.detach(),e.attached=!1)}};Object(i["a"])([Object(l["b"])()],ne.prototype,"subview",void 0),Object(i["a"])([Object(l["b"])()],ne.prototype,"useWebGLForProcessing",null),Object(i["a"])([Object(l["b"])()],ne.prototype,"useProgressiveUpdate",null),ne=Object(i["a"])([Object(c["a"])("esri.views.2d.layers.ImageryTileLayerView2D")],ne);const ie=ne},b4e0:function(e,t,n){"use strict";n.d(t,"a",(function(){return K})),n.d(t,"b",(function(){return S})),n.d(t,"c",(function(){return Y})),n.d(t,"d",(function(){return G})),n.d(t,"e",(function(){return V})),n.d(t,"f",(function(){return B})),n.d(t,"g",(function(){return T})),n.d(t,"h",(function(){return N})),n.d(t,"i",(function(){return I})),n.d(t,"j",(function(){return O})),n.d(t,"k",(function(){return m})),n.d(t,"l",(function(){return Z})),n.d(t,"m",(function(){return X}));n("e06a");var i,a=n("ce50"),o=n("b2b2"),r=n("8048"),s=n("9415"),l=n("8188"),c=n("3af1"),u=n("4ae5"),f=n("1219"),d=n("5996");function m(e,t,n){return!Object(l["b"])(e,t,n)}function h(e,t,n){const i=m(e,t,n);if(i&&!Object(l["g"])())throw new a["a"]("rasterprojectionhelper-project","projection engine is not loaded");return i}!function(e){e[e.None=0]="None",e[e.North=1]="North",e[e.South=2]="South",e[e.Both=3]="Both"}(i||(i={}));const _=(e,t,n,i=0)=>{if(1===n[0])return[0,0];let a=1,o=-1,r=1,s=-1;for(let p=0;p<e.length;p+=2)isNaN(e[p])||(a=a>e[p]?e[p]:a,o=o>e[p]?o:e[p],r=r>e[p+1]?e[p+1]:r,s=s>e[p+1]?s:e[p+1]);const{cols:l,rows:c}=t,u=(o-a)/l/n[0],f=(s-r)/c/n[1],d=2*i;let m=0,h=!1,_=[0,0];for(let p=0;p<l-3;p++){for(let t=0;t<c-3;t++){const n=p*c*2+2*t,i=(e[n]+e[n+4]+e[n+4*c]+e[n+4*c+4])/4,a=(e[n+1]+e[n+5]+e[n+4*c+1]+e[n+4*c+5])/4,o=Math.abs((i-e[n+2*c+2])/u),r=Math.abs((a-e[n+2*c+3])/f);if(o+r>m&&(m=o+r,_=[o,r]),d&&m>d){h=!0;break}}if(h)break}return _},p={3395:20037508.342789244,3410:17334193.943686873,3857:20037508.342788905,3975:17367530.445161372,4087:20037508.342789244,4088:20015108.787169147,6933:17367530.445161372,32662:20037508.342789244,53001:20015086.79602057,53002:10007543.39801029,53003:20015086.79602057,53004:20015086.79602057,53016:14152803.599503474,53017:17333573.624304302,53034:20015086.79602057,53079:20015114.352186374,53080:20015114.352186374,54001:20037508.342789244,54002:10018754.171394624,54003:20037508.342789244,54004:20037508.342789244,54016:14168658.027268292,54017:17367530.44516137,54034:20037508.342789244,54079:20037508.342789244,54080:20037508.342789244,54100:20037508.342789244,54101:20037508.342789244},v=32,g=4,x=g,y=new Map,b=new Map;async function T(){if(Object(l["g"])())return null;await Object(l["h"])()}function S(e,t,n){return h(e.spatialReference,t)?n?Object(l["e"])(t,e.spatialReference,e):Object(l["e"])(e.spatialReference,t,e):null}function O(e,t,n,i=null){const a=e.spatialReference;if(a.equals(t))return e;h(a,t,i);const s=n.center,u=new c["a"]({xmin:s.x-e.x/2,xmax:s.x+e.x/2,ymin:s.y-e.y/2,ymax:s.y+e.y/2,spatialReference:a}),f=Object(l["j"])(u,t,i),d=V(t);let m;if(Object(o["j"])(f)||Object(o["k"])(d)&&f.width>=d){const n=Object(r["f"])(a)/Object(r["f"])(t);m={x:e.x*n,y:e.y*n}}else m={x:f.width,y:f.height};return m}function w(e,t=.01){return Object(r["f"])(e)?t/Object(r["f"])(e):0}function I(e,t,n=null,i=!0){const a=e.spatialReference;if(a.equals(t))return e;h(a,t,n);const r=Object(l["j"])(e,t,n);if(!i||!r)return r;const s=k(a,!0),c=k(t,!0),u=w(a);return u&&Object(o["k"])(s)&&Object(o["k"])(c)&&(r.x>0&&Math.abs(e.x-s[0])<u?r.x-=c[1]-c[0]:r.x<0&&Math.abs(e.x-s[1])<u&&(r.x+=c[1]-c[0])),r}function E(e){const{inSR:t,outSR:n,datumTransformation:i,preferPE:a}=e;if(t.equals(n)){const{points:t}=D(e,null);return t}if(t.isWebMercator&&n.isWGS84||t.isWGS84&&n.isWebMercator)return A(e);if(h(t,n,i)&&a){if(t.isGeographic)return P(e);const n=M(t);if(Object(o["k"])(n))return P(e)}return C(e)}function C(e){const{points:t}=D(e,null),n=t.map(t=>new u["a"](t[0],t[1],e.inSR));return Object(l["j"])(n,e.outSR,e.datumTransformation).map(e=>e?[e.x,e.y]:[NaN,NaN])}function P(e){const{inSR:t,outSR:n,datumTransformation:i}=e,a=M(t),{points:r,mask:l}=D(e,a);if(!t.isGeographic){const e=t.wkid?s["a"].coordsys(t.wkid):s["a"].fromString(t.isGeographic?s["b"].PE_TYPE_GEOGCS:s["b"].PE_TYPE_PROJCS,t.wkt);s["c"].projToGeog(e,r.length,r)}if(Object(o["k"])(i)&&i.steps.length&&i.steps.forEach(e=>{const t=e.wkid?s["a"].geogtran(e.wkid):s["a"].fromString(s["b"].PE_TYPE_GEOGTRAN,e.wkt);s["d"].geogToGeog(t,r.length,r,null,e.isInverse?s["b"].PE_TRANSFORM_2_TO_1:s["b"].PE_TRANSFORM_1_TO_2)}),!n.isGeographic){const e=M(n,!0),t=Object(o["k"])(e)&&e.isEnvelope?[e.bbox[1],e.bbox[3]]:[-90,90];L(r,t);const i=n.wkid?s["a"].coordsys(n.wkid):s["a"].fromString(n.isGeographic?s["b"].PE_TYPE_GEOGCS:s["b"].PE_TYPE_PROJCS,n.wkt);s["c"].geogToProj(i,r.length,r)}let c=r;if(l&&r.length!==l.length){c=[];for(let e=0,t=0;e<l.length;e++)l[e]?c.push(r[t++]):c.push([NaN,NaN])}return c}function A(e){const{cols:t,rows:n,xres:i,yres:a,usePixelCenter:o,inSR:r,outSR:s}=e;let{xmin:c,ymax:f}=e;o&&(c+=i/2,f-=a/2);const d=[],m=[],h=Math.max(t,n);for(let p=0;p<h;p++){const e=c+i*Math.min(t,p),o=f-a*Math.min(n,p),h=Object(l["j"])(new u["a"]({x:e,y:o,spatialReference:r}),s);p<=t&&d.push(h.x),p<=n&&m.push(h.y)}const _=[];for(let l=0;l<t;l++)for(let e=0;e<n;e++)_.push([d[l],m[e]]);return _}function M(e,t=!1){let n=e.wkid||e.wkt;if(!n||e.isGeographic)return null;if(n=String(n),y.has(n)){const e=y.get(n);return t?null==e?void 0:e.gcs:null==e?void 0:e.pcs}const i=e.wkid?s["a"].coordsys(e.wkid):s["a"].fromString(e.isGeographic?s["b"].PE_TYPE_GEOGCS:s["b"].PE_TYPE_PROJCS,e.wkt),a=R(i,w(e,1e-4)),o=R(i,0,!0);return y.set(n,{pcs:a,gcs:o}),t?o:a}function R(e,t=0,n=!1){const i=s["f"].generate(e),a=n?e.horizonGcsGenerate():e.horizonPcsGenerate();if(null==a||!a.length)return null;let o=!1,r=a.find(e=>1===e.getInclusive()&&1===e.getKind());if(!r){if(r=a.find(e=>1===e.getInclusive()&&0===e.getKind()),!r)return null;o=!0}const l=n?0:(2===i.getNorthPoleLocation()?1:0)|(2===i.getSouthPoleLocation()?2:0),c=i.isPannableRectangle(),u=r.getCoord();if(o)return{isEnvelope:o,isPannable:c,vertices:u,coef:null,bbox:[u[0][0]-t,u[0][1]-t,u[1][0]+t,u[1][1]+t],poleLocation:l};let f=0;const d=[];let[m,h]=u[0],[_,p]=u[0];for(let s=0,v=u.length;s<v;s++){f++,f===v&&(f=0);const[e,t]=u[s],[n,i]=u[f];if(i===t)d.push([e,n,t,i,2]);else{const a=(n-e)/(i-t||1e-4),o=e-a*t;t<i?d.push([a,o,t,i,0]):d.push([a,o,i,t,1])}m=m<e?m:e,h=h<t?h:t,_=_>e?_:e,p=p>t?p:t}return{isEnvelope:!1,isPannable:c,vertices:u,coef:d,bbox:[m,h,_,p],poleLocation:l}}function D(e,t){const n=[],{cols:i,rows:a,xres:r,yres:s,usePixelCenter:l}=e;let{xmin:c,ymax:u}=e;if(l&&(c+=r/2,u-=s/2),Object(o["j"])(t)){for(let e=0;e<i;e++)for(let t=0;t<a;t++)n.push([c+r*e,u-s*t]);return{points:n}}const f=new Uint8Array(i*a);if(t.isEnvelope){const{bbox:[e,o,l,d]}=t;for(let m=0,h=0;m<i;m++){const i=c+r*m,_=t.isPannable||i>=e&&i<=l;for(let e=0;e<a;e++,h++){const t=u-s*e;_&&t>=o&&t<=d&&(n.push([i,t]),f[h]=1)}}return{points:n,mask:f}}const{coef:d}=t,m=[];for(let o=0;o<a;o++){const e=u-s*o,t=[],n=[];for(let a=0;a<d.length;a++){const[i,o,r,s,l]=d[a];if(e===r&&r===s)t.push(i),t.push(o),n.push(2),n.push(2);else if(e>=r&&e<=s){const a=i*e+o;t.push(a),n.push(l)}}let i=t;if(t.length>2){let e=2===n[0]?0:n[0],a=t[0];i=[];for(let o=1;o<n.length;o++)2===n[o]&&o!==n.length-1||(n[o]!==e&&(i.push(0===e?Math.min(a,t[o-1]):Math.max(a,t[o-1])),e=n[o],a=t[o]),o===n.length-1&&i.push(0===n[o]?Math.min(a,t[o]):Math.max(a,t[o])));i.sort((e,t)=>e-t)}else t[0]>t[1]&&(i=[t[1],t[0]]);m.push(i)}for(let o=0,h=0;o<i;o++){const e=c+r*o;for(let t=0;t<a;t++,h++){const i=u-s*t,a=m[t];if(2===a.length)e>=a[0]&&e<=a[1]&&(n.push([e,i]),f[h]=1);else if(a.length>2){let t=!1;for(let n=0;n<a.length;n+=2)if(e>=a[n]&&e<=a[n+1]){t=!0;break}t&&(n.push([e,i]),f[h]=1)}}}return{points:n,mask:f}}function L(e,t){const[n,i]=t;for(let a=0;a<e.length;a++){const t=e[a][1];(t<n||t>i)&&(e[a]=[NaN,NaN])}}function z(e){const t=V(e[0].spatialReference);if(e.length<2||Object(o["j"])(t))return e[0];let{xmin:n,xmax:i,ymin:a,ymax:r}=e[0];for(let o=1;o<e.length;o++){const n=e[o];i=n.xmax+t*o,a=Math.min(a,n.ymin),r=Math.max(r,n.ymax)}return new c["a"]({xmin:n,xmax:i,ymin:a,ymax:r,spatialReference:e[0].spatialReference})}function N(e,t,n=null,a=!0){const r=e.spatialReference;if(r.equals(t))return e;const s=B(e),u=V(r,!0),f=V(t);if(0===s||Object(o["j"])(u)||Object(o["j"])(f)){const s=U(e,t,n,a);if(Object(o["j"])(u)&&Object(o["k"])(f)&&Math.abs(s.width-f)<w(t)&&Object(l["g"])()){const n=M(r);if(Object(o["k"])(n)&&n.poleLocation===i.None&&e.width<(n.bbox[2]-n.bbox[0])/2)return F(e,t)||s}return s}const d=e.clone().normalize();if(1===d.length&&e.xmax<u&&e.xmax-u/2>w(r)){const{xmin:t,xmax:n}=e;for(let i=0;i<=s;i++){const a=0===i?t:-u/2,o=i===s?n-u*i:u/2;d[i]=new c["a"]({xmin:a,xmax:o,ymin:e.ymin,ymax:e.ymax,spatialReference:r})}}return z(d.map(e=>U(e,t,n,a)).filter(e=>!!e))}function F(e,t){const n=V(t);if(Object(o["j"])(n))return null;let{xmin:i,ymin:a,xmax:r,ymax:s}=e;const u=e.spatialReference,d=new f["a"]({spatialReference:u,rings:[[[i,a],[r,a],[r,s],[i,s],[i,a]]]}),m=Object(l["j"])(d,t);if(2!==m.rings.length||!m.rings[0].length||!m.rings[1].length)return null;const{rings:h}=m,_=w(u),p=new c["a"]({spatialReference:t});for(let o=0;o<2;o++){i=r=h[o][0][0],a=s=h[o][0][1];for(let e=0;e<h[o].length;e++)i=i>h[o][e][0]?h[o][e][0]:i,r=r<h[o][e][0]?h[o][e][0]:r,a=a>h[o][e][1]?h[o][e][1]:a,s=s<h[o][e][1]?h[o][e][1]:s;if(0===o)p.ymin=a,p.ymax=s,p.xmin=i,p.xmax=r;else if(p.ymin=Math.min(p.ymin,a),p.ymax=Math.max(p.ymax,s),Math.abs(r-n/2)<_)p.xmin=i,p.xmax=p.xmax+n;else{if(!(Math.abs(i+n/2)<_))return null;p.xmax=r+n}}return p}function U(e,t,n=null,i=!0,a=!0){const r=e.spatialReference;if(r.equals(t))return e;h(r,t,n);const s=Object(l["j"])(e,t,n);if(a&&t.isWebMercator&&s&&(s.ymax=Math.min(20037508.342787,s.ymax),s.ymin=Math.max(-20037508.342787,s.ymin),s.ymin>=s.ymax))return null;if(!i||!s)return s;const c=k(r,!0),f=k(t,!0);if(Object(o["j"])(c)||Object(o["j"])(f))return s;const d=w(r,.001),m=w(r,500),_=w(t,.001);if(Math.abs(s.xmin-f[0])<_&&Math.abs(s.xmax-f[1])<_){const i=Math.abs(e.xmin-c[0]),a=Math.abs(c[1]-e.xmax);if(i<d&&a>m){s.xmin=f[0];const i=[];i.push(new u["a"](e.xmax,e.ymin,r)),i.push(new u["a"](e.xmax,(e.ymin+e.ymax)/2,r)),i.push(new u["a"](e.xmax,e.ymax,r));const a=i.map(e=>I(e,t,n)).filter(e=>!isNaN(null==e?void 0:e.x)).map(e=>e.x);s.xmax=Math.max.apply(null,a)}if(a<d&&i>m){s.xmax=f[1];const i=[];i.push(new u["a"](e.xmin,e.ymin,r)),i.push(new u["a"](e.xmin,(e.ymin+e.ymax)/2,r)),i.push(new u["a"](e.xmin,e.ymax,r));const a=i.map(e=>I(e,t,n)).filter(e=>!isNaN(null==e?void 0:e.x)).map(e=>e.x);s.xmin=Math.min.apply(null,a)}}else{const e=w(t,.001);Math.abs(s.xmin-f[0])<e&&(s.xmin=f[0]),Math.abs(s.xmax-f[1])<e&&(s.xmax=f[1])}return s}function V(e,t=!1){const n=t?20037508.342787:20037508.342788905;return e.isWebMercator?2*n:e.wkid&&e.isGeographic?360:2*p[e.wkid]||null}function k(e,t=!1){if(e.isGeographic)return[-180,180];const n=V(e,t);return Object(o["k"])(n)?[-n/2,n/2]:null}function j(e,t,n,i){let a=(e-t)/n;return a-Math.floor(a)!=0?a=Math.floor(a):i&&(a-=1),a}function B(e,t=!1){const n=V(e.spatialReference);if(Object(o["j"])(n))return 0;const i=t?0:-n/2,a=w(e.spatialReference),r=!t&&Math.abs(e.xmax-n/2)<a?n/2:e.xmax,s=!t&&Math.abs(e.xmin+n/2)<a?-n/2:e.xmin;return j(r,i,n,!0)-j(s,i,n,!1)}function G(e){const t=e.storageInfo.origin.x,n=V(e.spatialReference,!0);if(Object(o["j"])(n))return{originX:t,halfWorldWidth:null,pyramidsInfo:null};const i=n/2,{nativePixelSize:a,storageInfo:r,extent:s}=e,{maximumPyramidLevel:l,blockWidth:c,pyramidScalingFactor:u}=r;let f=a.x;const d=[],m=Object(o["k"])(e.transform)&&"gcs-shift"===e.transform.type,h=t+(m?0:i),_=m?n-t:i-t;for(let o=0;o<=l;o++){const e=(s.xmax-t)/f/c,n=e-Math.floor(e)==0?e:Math.ceil(e),i=_/f/c,a=i-Math.floor(i)==0?i:Math.ceil(i),o=Math.floor(h/f/c),r=Math.round(h/f)%c,l=(c-Math.round(_/f)%c)%c;d.push({resolutionX:f,blockWidth:c,datsetColumnCount:n,worldColumnCountFromOrigin:a,leftMargin:r,rightPadding:l,originColumnOffset:o}),f*=u}return{originX:t,halfWorldWidth:i,pyramidsInfo:d,hasGCSSShiftTransform:m}}function H(e){if(!e||e.isGeographic)return e;const t=String(e.wkid||e.wkt);let n;return b.has(t)?n=b.get(t):(n=(e.wkid?s["a"].coordsys(e.wkid):s["a"].fromString(s["b"].PE_TYPE_PROJCS,e.wkt)).getGeogcs().getCode(),b.set(t,n)),new d["a"]({wkid:n})}function Y(e){const t=e.isAdaptive&&null==e.spacing;let n=e.spacing||[v,v],i=W(e),a={cols:i.size[0]+1,rows:i.size[1]+1};const r=i.outofBoundPointCount>0&&i.outofBoundPointCount<i.offsets.length/2;let s=i.outofBoundPointCount===i.offsets.length/2||t&&r?[0,0]:_(i.offsets,a,n,x);const l=(s[0]+s[1])/2,c=e.projectedExtent.spatialReference,u=e.srcBufferExtent.spatialReference;if(t&&(r||l>x)&&(m(c,u,e.datumTransformation)&&(c.isGeographic||Object(o["k"])(M(c))),n=[g,g],i=W({...e,spacing:n}),a={cols:i.size[0]+1,rows:i.size[1]+1},s=_(i.offsets,a,n,x)),i.error=s,n[0]>1&&(i.coefficients=q(i.offsets,a,r)),e.includeGCSGrid&&!c.isGeographic&&!c.isWebMercator)if(u.isGeographic)i.gcsGrid={offsets:i.offsets,coefficients:i.coefficients,spacing:n};else{const t=M(c);if(Object(o["k"])(t)&&!t.isEnvelope){const t=H(c),o=N(e.projectedExtent,t),{offsets:s}=W({...e,srcBufferExtent:o,spacing:n}),l=q(s,a,r);i.gcsGrid={offsets:s,coefficients:l,spacing:n}}}return i}function W(e){const{projectedExtent:t,srcBufferExtent:n,pixelSize:i,datumTransformation:a,rasterTransform:r}=e,s=t.spatialReference,l=n.spatialReference,c=h(s,l),{xmin:f,ymin:d,xmax:m,ymax:_}=t,p=V(l),x=Object(o["k"])(p)&&(e.hasWrapAround||"gcs-shift"===(null==r?void 0:r.type)),y=e.spacing||[v,v],b=y[0]*i.x,T=y[1]*i.y,S=1===y[0],O=Math.ceil((m-f)/b-.1/y[0])+(S?0:1),I=Math.ceil((_-d)/T-.1/y[1])+(S?0:1),C=E({cols:O,rows:I,xmin:f,ymax:_,xres:b,yres:T,inSR:s,outSR:l,datumTransformation:a,preferPE:y[0]<=g,usePixelCenter:S}),P=[];let A,R=0;const D=S?-1:NaN,{xmin:L,xmax:z,ymax:N,width:F,height:U}=n,k=w(l,500),j=Object(o["k"])(p)&&L>0&&z>p/2;let B=!1;if(c){const e=M(s);B=Object(o["k"])(e)&&e.poleLocation>0}for(let o=0;o<O;o++){const e=[];for(let t=0;t<I;t++){let n=C[o*I+t];if(x&&n[0]>z&&n[0]>p/2-k?n[0]-=p:x&&0===o&&n[0]<0&&j&&!r&&(n[0]+=p),!n||isNaN(n[0])||isNaN(n[1]))P.push(D),P.push(D),e.push(null),R++;else{if(r){const e=r.inverseTransform(new u["a"]({x:n[0],y:n[1],spatialReference:l}));n=[e.x,e.y]}e.push(n),o>0&&x&&A[t]&&n[0]<A[t][0]&&(n[0]+=p,B&&n[0]>z&&n[0]>p&&(n[0]-=p)),P.push((n[0]-L)/F),P.push((N-n[1])/U)}}A=e}return{offsets:P,error:null,coefficients:null,outofBoundPointCount:R,spacing:y,size:S?[O,I]:[O-1,I-1]}}function q(e,t,n){const{cols:i,rows:a}=t,o=new Float32Array((i-1)*(a-1)*2*6),r=new Float32Array([-0,-1,1,-1,1,-0,1,-0,-0]),s=new Float32Array([-1,1,0,0,-1,1,1,0,0]);for(let l=0;l<i-1;l++){for(let t=0;t<a-1;t++){let n=l*a*2+2*t;const c=e[n],u=e[n+1],f=e[n+2],d=e[n+3];n+=2*a;const m=e[n],h=e[n+1],_=e[n+2],p=e[n+3];let v=0,g=12*(t*(i-1)+l);for(let e=0;e<3;e++)o[g++]=r[v++]*c+r[v++]*f+r[v++]*_;v=0;for(let e=0;e<3;e++)o[g++]=r[v++]*u+r[v++]*d+r[v++]*p;v=0;for(let e=0;e<3;e++)o[g++]=s[v++]*c+s[v++]*m+s[v++]*_;v=0;for(let e=0;e<3;e++)o[g++]=s[v++]*u+s[v++]*h+s[v++]*p}if(n)for(let e=0;e<o.length;e++)isNaN(o[e])&&(o[e]=-1)}return o}function Z(e){const t=e.clone().normalize();return 1===t.length?t[0]:z(t)}function X(e,t,n){const{storageInfo:i,pixelSize:a}=t;let s,l=!1;const{pyramidResolutions:c}=i;if(Object(o["k"])(c)&&c.length){const i=(e.x+e.y)/2,o=c[c.length-1],f=(o.x+o.y)/2,d=(a.x+a.y)/2;if(i<=d)s=0;else if(i>=f)s=c.length,l=i/f>8;else{let e,t=d;for(let a=1;a<=c.length;a++){if(e=(c[a-1].x+c[a-1].y)/2,i<=e){i===e?s=a:"down"===n?(s=a-1,l=i/t>8):s="up"===n||i-t>e-i||i/t>2?a:a-1;break}t=e}}const m=0===s?a:c[s-1];return l&&Math.min(m.x,m.y)*Object(r["f"])(t.spatialReference)>19567&&(l=!1),{pyramidLevel:s,pyramidResolution:new u["a"]({x:m.x,y:m.y,spatialReference:t.spatialReference}),excessiveReading:l}}const f=Math.log(e.x/a.x)/Math.LN2,d=Math.log(e.y/a.y)/Math.LN2,m=t.storageInfo.maximumPyramidLevel||0;s="down"===n?Math.floor(Math.min(f,d)):"up"===n?Math.ceil(Math.max(f,d)):Math.round((f+d)/2),s<0?s=0:s>m&&(l=s>m+3,s=m);const h=2**s;return{pyramidLevel:s,pyramidResolution:new u["a"]({x:h*t.nativePixelSize.x,y:h*t.nativePixelSize.y,spatialReference:t.spatialReference}),excessiveReading:l}}function K(e,t,n=512,i=!0){const{extent:a,spatialReference:o,pixelSize:s}=e,l=O(new u["a"]({x:s.x,y:s.y,spatialReference:o}),t,a);if(null==l)return{projectedPixelSize:null,scales:null,srcResolutions:null,isCustomTilingScheme:!1};const c=(l.x+l.y)/2,f=Object(r["f"])(t),d=c*f*96*39.37,m=t.isGeographic?256/n*295828763.7958547:256/n*591657527.591555;let h="vector-magdir"===e.dataType||"vector-uv"===e.dataType;const _=N(a,t);h||i&&(t.isGeographic||t.isWebMercator)&&(h=_.xmin*_.xmax<0);let p,v=d;const g=1.001;if(h){v=m;const e=t.isGeographic?1341104507446289e-21:.29858214164761665,n=e*(96*f*39.37),i=t.isGeographic?4326:3857;p=O(new u["a"]({x:e,y:e,spatialReference:{wkid:i}}),o,_),p.x*=v/n,p.y*=v/n}else{p={x:s.x,y:s.y};const t=Math.ceil(Math.log(Math.min(e.width,e.height)/32)/Math.LN2);let n=0;for(;v<m*(g/2)&&n<t;)n++,v*=2,p.x*=2,p.y*=2;Math.max(v,m)/Math.min(v,m)<=g&&(v=m)}const x=[v],y=[{x:p.x,y:p.y}],b=70.5310735,T=Math.min(b,d)/g;for(;v>=T;)v/=2,p.x/=2,p.y/=2,x.push(v),y.push({x:p.x,y:p.y});return{projectedPixelSize:l,scales:x,srcResolutions:y,isCustomTilingScheme:!h}}},be90:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));const i={background:{"background.frag":"uniform lowp vec4 u_color;\nvoid main() {\ngl_FragColor = u_color;\n}","background.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump vec2 u_coord_range;\nuniform mediump float u_depth;\nvoid main() {\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\n}"},bitBlit:{"bitBlit.frag":"uniform lowp sampler2D u_tex;\nuniform lowp float u_opacity;\nvarying mediump vec2 v_uv;\nvoid main() {\nlowp vec4 color = texture2D(u_tex, v_uv);\ngl_FragColor = color *  u_opacity;\n}","bitBlit.vert":"attribute vec2 a_pos;\nattribute vec2 a_tex;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_pos, 0.0, 1.0);\nv_uv = a_tex;\n}"},blend:{"blend.frag":"precision mediump float;\nuniform sampler2D u_layerTexture;\nuniform lowp float u_opacity;\nuniform lowp float u_inFadeOpacity;\n#ifndef NORMAL\nuniform sampler2D u_backbufferTexture;\n#endif\nvarying mediump vec2 v_uv;\nfloat rgb2v(in vec3 c) {\nreturn max(c.x, max(c.y, c.z));\n}\nvec3 rgb2hsv(in vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(in vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec3 tint(in vec3 Cb, in vec3 Cs) {\nfloat vIn = rgb2v(Cb);\nvec3 hsvTint = rgb2hsv(Cs);\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\nreturn hsv2rgb(hsvOut);\n}\nfloat overlay(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\n}\nfloat colorDodge(in float Cb, in float Cs) {\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\n}\nfloat colorBurn(in float Cb, in float Cs) {\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\n}\nfloat hardLight(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\n}\nfloat reflectBlend(in float Cb, in float Cs) {\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\n}\nfloat softLight(in float Cb, in float Cs) {\nif (Cs <= 0.5) {\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\n}\nif (Cb <= 0.25) {\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\n}\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\n}\nfloat vividLight(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\n}\nfloat minv3(in vec3 c) {\nreturn min(min(c.r, c.g), c.b);\n}\nfloat maxv3(in vec3 c) {\nreturn max(max(c.r, c.g), c.b);\n}\nfloat lumv3(in vec3 c) {\nreturn dot(c, vec3(0.3, 0.59, 0.11));\n}\nfloat satv3(vec3 c) {\nreturn maxv3(c) - minv3(c);\n}\nvec3 clipColor(vec3 color) {\nfloat lum = lumv3(color);\nfloat mincol = minv3(color);\nfloat maxcol = maxv3(color);\nif (mincol < 0.0) {\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\n}\nif (maxcol > 1.0) {\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\n}\nreturn color;\n}\nvec3 setLum(vec3 cbase, vec3 clum) {\nfloat lbase = lumv3(cbase);\nfloat llum = lumv3(clum);\nfloat ldiff = llum - lbase;\nvec3 color = cbase + vec3(ldiff);\nreturn clipColor(color);\n}\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\n{\nfloat minbase = minv3(cbase);\nfloat sbase = satv3(cbase);\nfloat ssat = satv3(csat);\nvec3 color;\nif (sbase > 0.0) {\ncolor = (cbase - minbase) * ssat / sbase;\n} else {\ncolor = vec3(0.0);\n}\nreturn setLum(color, clum);\n}\nvoid main() {\nvec4 src = texture2D(u_layerTexture, v_uv);\n#ifdef NORMAL\ngl_FragColor = src *  u_opacity;\n#else\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\nfloat as = u_opacity * src.a;\nfloat ab = dst.a;\n#ifdef DESTINATION_OVER\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\n#endif\n#ifdef SOURCE_IN\nvec4 color = vec4(as * Cs * ab, as * ab);\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\ngl_FragColor = color + fadeColor;\n#endif\n#ifdef DESTINATION_IN\nvec4 color = vec4(ab * Cb * as, ab * as);\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\ngl_FragColor = color + fadeColor;\n#endif\n#ifdef SOURCE_OUT\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\n#endif\n#ifdef DESTINATION_OUT\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\n#endif\n#ifdef SOURCE_ATOP\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\n#endif\n#ifdef DESTINATION_ATOP\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\n#endif\n#ifdef XOR\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\nas * (1.0 - ab) + ab * (1.0 - as));\n#endif\n#ifdef MULTIPLY\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\nas + ab * (1.0 - as));\n#endif\n#ifdef SCREEN\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef OVERLAY\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef DARKEN\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef LIGHTER\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\n#endif\n#ifdef LIGHTEN\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR_DODGE\nvec3 f = vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR_BURN\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef HARD_LIGHT\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef SOFT_LIGHT\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef DIFFERENCE\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef EXCLUSION\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef INVERT\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\n#endif\n#ifdef VIVID_LIGHT\nvec3 f = vec3(vividLight(Cb.r, Cs.r),\nvividLight(Cb.g, Cs.g),\nvividLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef HUE\nvec3 f = setLumSat(Cs,Cb,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef SATURATION\nvec3 f = setLumSat(Cb,Cs,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR\nvec3 f = setLum(Cs,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef LUMINOSITY\nvec3 f = setLum(Cb,Cs);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef PLUS\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\n#endif\n#ifdef MINUS\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\n#endif\n#ifdef AVERAGE\nvec3 f = (Cb + Cs) / 2.0;\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef REFLECT\nvec3 f = vec3(reflectBlend(Cb.r, Cs.r),\nreflectBlend(Cb.g, Cs.g),\nreflectBlend(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#endif\n}","blend.vert":"attribute vec2 a_position;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_position , 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"},dot:{dot:{"dot.frag":"precision mediump float;\nvarying vec4 v_color;\nvarying float v_dotRatio;\nvarying float v_invEdgeRatio;\nuniform highp float u_tileZoomFactor;\nvoid main()\n{\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\ngl_FragColor = v_color * alpha;\n}","dot.vert":"precision highp float;\nattribute vec2 a_pos;\nuniform sampler2D u_texture;\nuniform highp mat3 u_dvsMat3;\nuniform highp float u_tileZoomFactor;\nuniform highp float u_dotSize;\nuniform highp float u_pixelRatio;\nvarying vec2 v_pos;\nvarying vec4 v_color;\nvarying float v_dotRatio;\nvarying float v_invEdgeRatio;\nconst float EPSILON = 0.000001;\nvoid main()\n{\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\n0., -1., 0.,\n0., 1., 1.  );\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\nv_color = texture2D(u_texture, texCoords.xy);\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\nfloat z = 0.;\nz += 2.0 * step(v_color.a, EPSILON);\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\nv_dotRatio = u_dotSize / gl_PointSize;\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\n}"}},filtering:{"bicubic.glsl":"vec4 computeWeights(float v) {\nfloat b = 1.0 / 6.0;\nfloat v2 = v * v;\nfloat v3 = v2 * v;\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\nfloat w3 = b * v3;\nreturn vec4(w0, w1, w2, w3);\n}\nvec4 bicubicOffsetsAndWeights(float v) {\nvec4 w = computeWeights(v);\nfloat g0 = w.x + w.y;\nfloat g1 = w.z + w.w;\nfloat h0 = 1.0 - (w.y / g0) + v;\nfloat h1 = 1.0 + (w.w / g1) - v;\nreturn vec4(h0, h1, g0, g1);\n}\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\nvec2 texel = coords * texSize - 0.5;\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\nvec2 coords10 = coords + hgX.x * eX;\nvec2 coords00 = coords - hgX.y * eX;\nvec2 coords11 = coords10 + hgY.x * eY;\nvec2 coords01 = coords00 + hgY.x * eY;\ncoords10 = coords10 - hgY.y * eY;\ncoords00 = coords00 - hgY.y * eY;\nvec4 color00 = texture2D(sampler, coords00);\nvec4 color10 = texture2D(sampler, coords10);\nvec4 color01 = texture2D(sampler, coords01);\nvec4 color11 = texture2D(sampler, coords11);\ncolor00 = mix(color00, color01, hgY.z);\ncolor10 = mix(color10, color11, hgY.z);\ncolor00 = mix(color00, color10, hgX.z);\nreturn color00;\n}","bilinear.glsl":"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 texelStart = floor(coords * texSize);\nvec2 coord0 = texelStart / texSize;\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\nvec4 color0 = texture2D(sampler, coord0);\nvec4 color1 = texture2D(sampler, coord1);\nvec4 color2 = texture2D(sampler, coord2);\nvec4 color3 = texture2D(sampler, coord3);\nvec2 blend = fract(coords * texSize);\nvec4 color01 = mix(color0, color1, blend.x);\nvec4 color23 = mix(color2, color3, blend.x);\nvec4 color = mix(color01, color23, blend.y);\n#ifdef NNEDGE\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\n#endif\nreturn color;\n}","epx.glsl":"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\nvec2 invSize = 1.0 / texSize;\nvec2 texel = coords * texSize;\nvec2 texel_i = floor(texel);\nvec2 texel_frac = fract(texel);\nvec4 colorP = texture2D(sampler, texel_i * invSize);\nvec4 colorP1 = vec4(colorP);\nvec4 colorP2 = vec4(colorP);\nvec4 colorP3 = vec4(colorP);\nvec4 colorP4 = vec4(colorP);\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\ncolorP1 = colorA;\n}\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\ncolorP2 = colorB;\n}\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\ncolorP3 = colorC;\n}\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\ncolorP4 = colorD;\n}\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\nreturn mix(colorP12, colorP34, texel_frac.y);\n}"},fx:{integrate:{"integrate.frag":"precision mediump float;\nuniform lowp sampler2D u_sourceTexture;\nuniform lowp sampler2D u_maskTexture;\nuniform mediump float u_zoomLevel;\nuniform highp float u_timeDelta;\nuniform highp float u_animationTime;\nvarying highp vec2 v_texcoord;\n#include <materials/utils.glsl>\nvoid main()\n{\n#ifdef DELTA\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\nfloat flags = data0.r * 255.0;\nfloat groupMinZoom = data0.g * 255.0;\nfloat isVisible = getFilterBit(flags, 0);\nfloat wouldClip = step(groupMinZoom, u_zoomLevel);\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\nvec4 nextState = vec4(texel + direction * dt);\ngl_FragColor =  vec4(nextState);\n#elif defined(UPDATE)\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\ngl_FragColor = texel;\n#endif\n}","integrate.vert":"precision mediump float;\nattribute vec2 a_pos;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n}"}},heatmap:{heatmapResolve:{"heatmapResolve.frag":"precision highp float;\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\n#define COMPRESSION_FACTOR 4.0\n#else\n#define COMPRESSION_FACTOR 1.0\n#endif\nuniform sampler2D u_texture;\nuniform sampler2D u_gradient;\nuniform vec2 u_densityMinAndInvRange;\nuniform float u_densityNormalization;\nvarying vec2 v_uv;\nvoid main() {\nvec4 data = texture2D(u_texture, v_uv);\nfloat density = data.r * COMPRESSION_FACTOR;\ndensity *= u_densityNormalization;\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\ngl_FragColor = vec4(color.rgb * color.a, color.a);\n}","heatmapResolve.vert":"precision highp float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nvarying vec2 v_uv;\nconst float UV_TO_TILE_SPACE = 512.;\nvoid main() {\nv_uv = a_pos;\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos * UV_TO_TILE_SPACE, 1.)).xy, 1., 1.);\n}"}},highlight:{"blur.frag":"varying mediump vec2 v_texcoord;\nuniform mediump vec4 u_direction;\nuniform mediump mat4 u_channelSelector;\nuniform mediump float u_sigma;\nuniform sampler2D u_texture;\nmediump float gauss1(mediump vec2 dir) {\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\n}\nmediump vec4 selectChannel(mediump vec4 sample) {\nreturn u_channelSelector * sample;\n}\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\nmediump float w = gauss1(i * u_direction.xy);\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\nweight += w;\n}\nvoid main(void) {\nmediump float tot = 0.0;\nmediump float weight = 0.0;\naccumGauss1(-5.0, tot, weight);\naccumGauss1(-4.0, tot, weight);\naccumGauss1(-3.0, tot, weight);\naccumGauss1(-2.0, tot, weight);\naccumGauss1(-1.0, tot, weight);\naccumGauss1(0.0, tot, weight);\naccumGauss1(1.0, tot, weight);\naccumGauss1(2.0, tot, weight);\naccumGauss1(3.0, tot, weight);\naccumGauss1(4.0, tot, weight);\naccumGauss1(5.0, tot, weight);\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\n}","highlight.frag":"varying mediump vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform mediump float u_sigma;\nuniform sampler2D u_shade;\nuniform mediump vec2 u_minMaxDistance;\nmediump float estimateDistance() {\nmediump float y = texture2D(u_texture, v_texcoord)[3];\nconst mediump float y0 = 0.5;\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\nmediump float d = (y - y0) / m0;\nreturn d;\n}\nmediump vec4 shade(mediump float d) {\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\n}\nvoid main(void) {\nmediump float d = estimateDistance();\ngl_FragColor = shade(d);\n}","textured.vert":"attribute mediump vec2 a_position;\nattribute mediump vec2 a_texcoord;\nvarying mediump vec2 v_texcoord;\nvoid main(void) {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_texcoord = a_texcoord;\n}"},magnifier:{"magnifier.frag":"uniform lowp vec4 u_background;\nuniform mediump sampler2D u_readbackTexture;\nuniform mediump sampler2D u_maskTexture;\nuniform mediump sampler2D u_overlayTexture;\nuniform bool u_maskEnabled;\nuniform bool u_overlayEnabled;\nvarying mediump vec2 v_texCoord;\nconst lowp float barrelFactor = 1.1;\nlowp vec2 barrel(lowp vec2 uv) {\nlowp vec2 uvn = uv * 2.0 - 1.0;\nif (uvn.x == 0.0 && uvn.y == 0.0) {\nreturn vec2(0.5, 0.5);\n}\nlowp float theta = atan(uvn.y, uvn.x);\nlowp float r = pow(length(uvn), barrelFactor);\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\n}\nvoid main(void)\n{\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\ncolor = (color + (1.0 - color.a) * u_background);\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\ncolor *= mask;\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\n}","magnifier.vert":"precision mediump float;\nattribute mediump vec2 a_pos;\nuniform mediump vec4 u_drawPos;\nvarying mediump vec2 v_texCoord;\nvoid main(void)\n{\nv_texCoord = a_pos;\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\n}"},materials:{"attributeData.glsl":"uniform highp sampler2D u_attributeData0;\nuniform highp sampler2D u_attributeData1;\nuniform highp sampler2D u_attributeData2;\nuniform highp sampler2D u_attributeData3;\nuniform highp sampler2D u_attributeData4;\nuniform highp sampler2D u_attributeData5;\nuniform highp int u_attributeTextureSize;\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\nhighp vec3  texel = unpackDisplayIdTexel(id);\nhighp float size = float(u_attributeTextureSize);\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\nhighp float col = mod(u32, size);\nhighp float row = (u32 - col) / size;\nhighp float u = col / size;\nhighp float v = row / size;\nreturn vec2(u, v);\n}\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(u_attributeTextureSize));\n}\nhighp vec4 getAttributeData0(in highp vec3 id) {\nvec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData0, coords);\n}\nhighp vec4 getAttributeData1(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData1, coords);\n}\nhighp vec4 getAttributeData2(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData2, coords);\n}\nhighp vec4 getAttributeData3(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData3, coords);\n}\nhighp vec4 getAttributeData4(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData4, coords);\n}\nhighp vec4 getAttributeData5(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData5, coords);\n}\nfloat u88VVToFloat(in vec2 v) {\nbool isMagic = v.x == 255.0 && v.y == 255.0;\nif (isMagic) {\nreturn NAN_MAGIC_NUMBER;\n}\nreturn (v.x + v.y * float(0x100)) - 32768.0;\n}","barycentric.glsl":"float inTriangle(vec3 bary) {\nvec3 absBary = abs(bary);\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\n}\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\nmat3 xyToBarycentricMat3 = mat3(\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\n);\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\n}","constants.glsl":"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\nconst float SIGNED_BYTE_TO_UNSIGNED = 128.0;\nconst float POSITION_PRECISION = 1.0 / 8.0;\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\nconst float SOFT_EDGE_RATIO = 1.0;\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\nconst float THIN_LINE_HALF_WIDTH = 1.0;\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\nconst float OFFSET_PRECISION = 1.0 / 8.0;\nconst float OUTLINE_SCALE = 1.0 / 5.0;\nconst float SDF_FONT_SIZE = 24.0;\nconst float MAX_SDF_DISTANCE = 8.0;\nconst float PLACEMENT_PADDING = 8.0;\nconst float EPSILON = 0.00001;\nconst float EPSILON_HITTEST = 0.05;\nconst int MAX_FILTER_COUNT = 2;\nconst int ATTR_VV_SIZE = 0;\nconst int ATTR_VV_COLOR = 1;\nconst int ATTR_VV_OPACITY = 2;\nconst int ATTR_VV_ROTATION = 3;\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\nconst int BITSET_LINE_SCALE_DASH = 2;",fill:{"common.glsl":"#include <materials/symbologyTypeUtils.glsl>\n#ifdef PATTERN\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_sampleAlphaOnly;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nuniform lowp vec4 u_isActive[ 2 ];\nuniform highp float u_dotValue;\nuniform highp float u_tileDotsOverArea;\nuniform highp float u_dotTextureDotCount;\nuniform mediump float u_tileZoomFactor;\n#endif\nvarying highp vec3 v_id;\nvarying lowp vec4 v_color;\nvarying lowp float v_opacity;\nvarying mediump vec4 v_aux1;\n#ifdef PATTERN\nvarying mediump vec2 v_tileTextureCoord;\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nvarying lowp float v_isOutline;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvarying highp vec2 v_dotTextureCoords;\nvarying highp vec4 v_dotThresholds[ 2 ];\n#endif","fill.frag":"precision highp float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/fill/common.glsl>\n#ifdef PATTERN\nuniform lowp sampler2D u_texture;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nuniform mediump mat4 u_dotColors[ 2 ];\nuniform sampler2D u_dotTextures[ 2 ];\nuniform vec4 u_dotBackgroundColor;\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.frag>\nlowp vec4 drawLine() {\nfloat v_lineWidth = v_aux1.x;\nvec2  v_normal    = v_aux1.yz;\nLineData inputs = LineData(\nv_color,\nv_normal,\nv_lineWidth,\nv_opacity,\nv_id\n);\nreturn shadeLine(inputs);\n}\n#endif\nlowp vec4 drawFill() {\nlowp vec4 out_color = vec4(0.);\n#ifdef HITTEST\nout_color = v_color;\n#elif defined(PATTERN)\nmediump vec4 v_tlbr = v_aux1;\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\nlowp vec4 color = texture2D(u_texture, samplePos);\n#ifdef VV_COLOR\nif (v_sampleAlphaOnly > 0.5) {\ncolor.rgb = vec3(color.a);\n}\n#endif\nout_color = v_opacity * v_color * color;\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\n#ifdef DD_DOT_BLENDING\nvec4 isPositive0 = step(0.0, difference0);\nvec4 isPositive1 = step(0.0, difference1);\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\nfloat lessThanEqZero = step(weightSum, 0.0);\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\nfloat divisor = (weightSum + lessThanEqZero);\nvec4 weights0 = difference0 * isPositive0 / divisor;\nvec4 weights1 = difference1 * isPositive1 / divisor;\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\n#else\nfloat diffMax = max(max4(difference0), max4(difference1));\nfloat lessThanZero = step(diffMax, 0.0);\nfloat greaterOrEqZero = 1.0 - lessThanZero;\nvec4 isMax0 = step(diffMax, difference0);\nvec4 isMax1 = step(diffMax, difference1);\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\n#endif\nout_color = preEffectColor;\n#else\nout_color = v_opacity * v_color;\n#endif\n#ifdef HIGHLIGHT\nout_color.a = 1.0;\n#endif\nreturn out_color;\n}\nvoid main() {\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nif (v_isOutline > 0.5) {\ngl_FragColor = drawLine();\n} else {\ngl_FragColor = drawFill();\n}\n#else\ngl_FragColor = drawFill();\n#endif\n}","fill.vert":"#include <materials/symbologyTypeUtils.glsl>\n#define PACKED_LINE\nprecision highp float;\nattribute float a_bitset;\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nattribute float a_inverseArea;\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#else\nattribute vec4 a_color;\nattribute vec4 a_aux2;\nattribute vec4 a_aux3;\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\nattribute vec4 a_aux1;\nattribute vec2 a_zoomRange;\n#else\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#endif\n#endif\nuniform vec2 u_tileOffset;\n#include <util/encoding.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/fill/common.glsl>\n#include <materials/fill/hittest.glsl>\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\n}\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.vert>\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\nLineData outputs = buildLine(\nout_pos,\na_id,\na_pos,\na_color,\n(a_aux3.xy - 128.) / 16.,\n(a_aux3.zw - 128.) / 16.,\n0.,\na_aux2.z / 16.,\na_bitset,\nvec4(0.),\nvec2(0.),\na_aux2.w / 16.\n);\nv_id      = outputs.id;\nv_opacity = outputs.opacity;\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\nout_color = outputs.color;\n}\n#endif\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\nfloat a_bitSet = a_bitset;\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\nv_opacity = getOpacity();\nv_id      = norm(a_id);\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\n0., -2. / 512.,  0.,\n-1.,  1.,  1.  );\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\n#else\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\n#endif\n#ifdef PATTERN\nvec4  a_tlbr   = a_aux1;\nfloat a_width  = a_aux2.x;\nfloat a_height = a_aux2.y;\nvec2  a_offset = a_aux2.zw;\nvec2  a_scale  = a_aux3.xy;\nfloat a_angle  = a_aux3.z;\nvec2 scale = (1.0 / SIGNED_BYTE_TO_UNSIGNED) * a_scale;\nfloat width = u_zoomFactor * a_width * scale.x;\nfloat height = u_zoomFactor * a_height * scale.y;\nfloat angle = C_256_TO_RAD * a_angle;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nfloat dx = 0.0;\nfloat dy = 0.0;\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\nfloat id = rgba2float(vec4(a_id, 0.0));\ndx = rand(vec2(id, 0.0));\ndy = rand(vec2(0.0, id));\n}\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\n-sinA / width, cosA / height, 0,\ndx,            dy,           1);\nvec2 tileOffset = vec2(u_tileOffset.x * cosA - u_tileOffset.y * sinA, u_tileOffset.x * sinA + u_tileOffset.y * cosA);\ntileOffset = mod(tileOffset, vec2(a_aux2.x, a_aux2.y));\nvec2 symbolOffset = (a_offset - tileOffset) / vec2(width, height);\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\n#endif\n}\n#ifdef HITTEST\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\nout_pos = vec3(0., 0., 2.);\nreturn;\n}\n#endif\nhittestFill(out_color, out_pos);\ngl_PointSize = 1.0;\n}\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\nif (v_isOutline > 0.5) {\ndrawLine(out_color, out_pos);\n} else {\ndrawFill(out_color, out_pos);\n}\n}\n#else\n#define draw drawFill\n#endif\nvoid main()\n{\nINIT;\nhighp vec3 pos  = vec3(0.);\nhighp vec4 color  = vec4(0.);\ndraw(color, pos);\nv_color = color;\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}","hittest.glsl":"#ifdef HITTEST\n#include <materials/hittest/common.glsl>\nattribute vec2 a_pos1;\nattribute vec2 a_pos2;\nvoid hittestFill(\nout lowp vec4 out_color,\nout highp vec3 out_pos\n) {\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\nfloat hittestDist = u_hittestDist;\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif (dist < 0. || dist >= hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\n}\n#endif"},hittest:{"common.glsl":"#ifdef HITTEST\nuniform float u_hittestDist;\nuniform highp vec2 u_hittestPos;\nfloat projectScalar(vec2 a, vec2 b) {\nreturn dot(a, normalize(b));\n}\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\nvec2 L = p2 - p1;\nvec2 A = p0 - p1;\nfloat projAL = projectScalar(A, L);\nfloat t = clamp(projAL / length(L), 0., 1.);\nreturn distance(p0, p1 + t * (p2 - p1));\n}\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\nfloat dist = distance(pos, vec3(u_hittestPos, 1.));\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif ((dist - size) > u_hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\n}\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\nreturn inTriangle(xyToBarycentric(p, a, b, c));\n}\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\nvec2 ba = b - a;\nvec2 ca = c - a;\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\nif (isParallel) {\nreturn -1.;\n}\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\nreturn 0.;\n}\nfloat distAB = distPointSegment(p, a, b);\nfloat distBC = distPointSegment(p, b, c);\nfloat distCA = distPointSegment(p, c, a);\nreturn min(min(distAB, distBC), distCA);\n}\n#endif"},icon:{"common.glsl":"#include <util/encoding.glsl>\nuniform lowp vec2 u_mosaicSize;\nvarying lowp vec4 v_color;\nvarying highp vec3 v_id;\nvarying highp vec4 v_sizeTex;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nuniform lowp sampler2D u_texture;\n#ifdef SDF\nvarying lowp vec4 v_outlineColor;\nvarying mediump float v_outlineWidth;\nvarying mediump float v_distRatio;\nvarying mediump float v_overridingOutlineColor;\nvarying mediump float v_isThin;\n#endif\n#ifdef SDF\nvec4 getColor(vec2 v_size, vec2 v_tex) {\nlowp vec4 fillPixelColor = v_color;\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\nfloat size = max(v_size.x, v_size.y);\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\nfloat outlineWidth = v_outlineWidth;\n#ifdef HIGHLIGHT\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\n#endif\nif (outlineWidth > 0.25) {\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\nfloat clampedOutlineSize = min(outlineWidth, size);\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\n}\nreturn v_opacity * fillPixelColor;\n}\n#else\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\nlowp vec4 texColor = texture2D(u_texture, v_tex);\nreturn v_opacity * texColor * v_color;\n}\n#endif",heatmapAccumulate:{"common.glsl":"varying lowp vec4 v_hittestResult;\nvarying mediump vec2 v_offsetFromCenter;\nvarying highp float v_fieldValue;","heatmapAccumulate.frag":"precision mediump float;\n#include <materials/icon/heatmapAccumulate/common.glsl>\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\n#define COMPRESSION_FACTOR 0.25\n#else\n#define COMPRESSION_FACTOR 1.0\n#endif\nuniform lowp sampler2D u_texture;\nvoid main() {\n#ifdef HITTEST\ngl_FragColor = v_hittestResult;\n#else\nfloat radius = length(v_offsetFromCenter);\nfloat shapeWeight = step(radius, 1.0);\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\n#endif\n}","heatmapAccumulate.vert":"precision highp float;\nattribute vec2 a_vertexOffset;\nvec4 a_color = vec4(0.0);\nvec2 a_zoomRange = vec2(0.0, 10000.0);\nuniform float u_radius;\nuniform float u_isFieldActive;\nconst float TILE_TO_CLIP_SPACE = 2.0 / 512.0;\n#include <materials/vcommon.glsl>\n#include <materials/hittest/common.glsl>\n#include <materials/icon/heatmapAccumulate/common.glsl>\nvoid main() {\nfloat filterFlags = getFilterFlags();\n#ifdef HITTEST\nhighp vec4 out_hittestResult = vec4(0.);\nhighp vec3 out_pos = vec3(0.);\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\nv_hittestResult = out_hittestResult;\ngl_PointSize = 1.;\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\nv_offsetFromCenter = sign(a_vertexOffset);\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\nvec3 centerPos = vec3(a_pos * POSITION_PRECISION * TILE_TO_CLIP_SPACE - 1.0, 1.0);\nvec3 vertexPos = centerPos + vec3(v_offsetFromCenter, 0.0) * u_radius * TILE_TO_CLIP_SPACE;\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\n#endif\n}"},"hittest.glsl":"#ifdef HITTEST\n#include <materials/hittest/common.glsl>\nattribute vec2 a_vertexOffset1;\nattribute vec2 a_vertexOffset2;\nattribute vec2 a_texCoords1;\nattribute vec2 a_texCoords2;\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\n}\nvoid hittestIcon(\ninout lowp vec4 out_color,\nout highp vec3 out_pos,\nin vec3 pos,\nin vec3 offset,\nin vec2 size,\nin float scaleFactor,\nin float isMapAligned\n) {\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\nvec2 tex0 = a_texCoords  / u_mosaicSize;\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\nfloat alphaSum = 0.;\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\nout_pos.z += step(alphaSum, .05) * 2.0;\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\n}\n#endif","icon.frag":"precision mediump float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/icon/common.glsl>\nvoid main()\n{\n#ifdef HITTEST\nvec4 color = v_color;\n#else\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\n#endif\n#ifdef HIGHLIGHT\ncolor.a = step(1.0 / 255.0, color.a);\n#endif\ngl_FragColor = color;\n}","icon.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_outlineColor;\nattribute vec4 a_sizeAndOutlineWidth;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nattribute vec2 a_bitSetAndDistRatio;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/icon/common.glsl>\n#include <materials/icon/hittest.glsl>\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\n#ifdef VV_SIZE\nfloat f = getSize(size.y) / size.y;\nfloat sizeFactor = size.y / referenceSize;\nreturn getSize(referenceSize) / referenceSize;\n#else\nreturn 1.;\n#endif\n}\nvoid main()\n{\nINIT;\nfloat a_bitSet = a_bitSetAndDistRatio.x;\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\nsize.xy     *= scaleFactor;\noffset.xy   *= scaleFactor;\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\nvec2 v_tex   = a_texCoords / u_mosaicSize;\nfloat filterFlags = getFilterFlags();\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\nv_opacity  = getOpacity();\nv_id       = norm(a_id);\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\nv_sizeTex  = vec4(size.xy, v_tex.xy);\n#ifdef SDF\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\n#ifdef VV_COLOR\nv_overridingOutlineColor = v_isThin;\n#else\nv_overridingOutlineColor = 0.0;\n#endif\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\nv_outlineColor = a_outlineColor;\nv_distRatio = a_bitSetAndDistRatio.y / 126.0;\n#endif\n#ifdef HITTEST\nhighp vec4 out_color = vec4(0.);\nhighp vec3 out_pos   = vec3(0.);\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\nv_color = out_color;\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\n#endif\n}"},label:{"common.glsl":"uniform mediump float u_zoomLevel;\nuniform mediump float u_mapRotation;\nuniform mediump float u_mapAligned;\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying mediump vec2 v_tex;\nvarying mediump vec4 v_color;\nvarying lowp vec4 v_animation;","label.frag":"#include <materials/text/text.frag>","label.vert":"precision highp float;\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texAndSize;\nattribute vec4 a_refSymbolAndPlacementOffset;\nattribute vec4 a_glyphData;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHalo;\nuniform float u_mapRotation;\nuniform float u_mapAligned;\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\nfloat glyphAngle = angle * 360.0 / 254.0;\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\nfloat z = 0.0;\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\nreturn z;\n}\nvoid main()\n{\nINIT;\nfloat groupMinZoom    = getMinZoom();\nfloat glyphMinZoom    = a_glyphData.x;\nfloat glyphMaxZoom    = a_glyphData.y;\nfloat glyphAngle      = a_glyphData.z;\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\nfloat fontSize           = a_texAndSize.z;\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\nv_color     = animation * ((1.0 - u_isHalo) * a_color + (u_isHalo * a_haloColor));\nv_opacity   = 1.0;\nv_tex       = a_texCoords / u_mosaicSize;\nv_edgeDistanceOffset = u_isHalo * haloSize / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\ngl_Position = vec4(v_pos, 1.0);\n#ifdef DEBUG\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\n#endif\n}"},line:{"common.glsl":"varying lowp vec4 v_color;\nvarying highp vec3 v_id;\nvarying mediump vec2 v_normal;\nvarying mediump float v_lineHalfWidth;\nvarying lowp float v_opacity;\n#ifdef PATTERN\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_patternSize;\n#endif\n#if defined(PATTERN) || defined(SDF)\nvarying highp float v_accumulatedDistance;\n#endif\n#ifdef SDF\nvarying mediump float v_lineWidthRatio;\n#endif","hittest.glsl":"#include <materials/hittest/common.glsl>\n#ifdef HITTEST\nattribute vec2 a_pos1;\nattribute vec2 a_pos2;\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif (dist >= u_hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\n}\n#endif","line.frag":"precision lowp float;\n#include <util/encoding.glsl>\n#include <materials/constants.glsl>\n#include <materials/symbologyTypeUtils.glsl>\n#include <materials/line/common.glsl>\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.frag>\n#ifdef HITTEST\nvoid main() {\ngl_FragColor = v_color;\n}\n#else\nvoid main() {\nLineData inputs = LineData(\nv_color,\nv_normal,\nv_lineHalfWidth,\nv_opacity,\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nv_tlbr,\nv_patternSize,\n#endif\n#ifdef SDF\nv_lineWidthRatio,\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance,\n#endif\n#endif\nv_id\n);\ngl_FragColor = shadeLine(inputs);\n}\n#endif","line.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_offsetAndNormal;\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\nattribute vec4 a_tlbr;\nattribute vec4 a_segmentDirection;\nattribute vec2 a_aux;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/symbologyTypeUtils.glsl>\n#include <materials/line/common.glsl>\n#include <materials/line/hittest.glsl>\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.vert>\n#ifdef HITTEST\nvoid draw() {\nfloat aa        = 0.5 * u_antialiasing;\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\nfloat a_cimHalfWidth = a_aux.x / 16. ;\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\nhighp vec3 pos  = vec3(0.);\nv_color = vec4(0.);\nhittestLine(v_color, pos, halfWidth);\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}\n#else\nvoid draw()\n{\nhighp vec3 pos = vec3(0.);\nLineData outputs = buildLine(\npos,\na_id,\na_pos,\na_color,\na_offsetAndNormal.xy / 16.,\na_offsetAndNormal.zw / 16.,\na_accumulatedDistanceAndHalfWidth.x,\na_accumulatedDistanceAndHalfWidth.y / 16.,\na_segmentDirection.w,\na_tlbr,\na_segmentDirection.xy / 16.,\na_aux.x / 16.\n);\nv_id              = outputs.id;\nv_color           = outputs.color;\nv_normal          = outputs.normal;\nv_lineHalfWidth   = outputs.lineHalfWidth;\nv_opacity         = outputs.opacity;\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nv_tlbr          = outputs.tlbr;\nv_patternSize   = outputs.patternSize;\n#endif\n#ifdef SDF\nv_lineWidthRatio = outputs.lineWidthRatio;\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance = outputs.accumulatedDistance;\n#endif\n#endif\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}\n#endif\nvoid main() {\nINIT;\ndraw();\n}"},pie:{"pie.frag":"precision mediump float;\n#include <util/atan2.glsl>\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/icon/common.glsl>\nvarying float v_size;\nvarying vec2 v_offset;\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\nvarying float v_numOfEntries;\nvarying float v_maxSectorAngle;\nuniform lowp vec4 u_colors[NUMBER_OF_FIELDS];\nuniform lowp vec4 u_defaultColor;\nuniform lowp vec4 u_othersColor;\nuniform lowp vec4 u_outlineColor;\nuniform float u_donutRatio;\nuniform float u_sectorThreshold;\nstruct FilteredChartInfo {\nfloat endSectorAngle;\nint colorId;\n};\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\n#if __VERSION__ == 300\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\nreturn u_colors[colorIndex];\n#else\nmediump int colorIndex;\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nif (i == index) {\ncolorIndex = int(filteredSectorToColorId[i].y);\n}\n}\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nif (i == colorIndex) {\nreturn u_colors[i];\n}\n}\nreturn u_colors[NUMBER_OF_FIELDS - 1];\n#endif\n}\nconst int OTHER_SECTOR_ID = 255;\n#ifdef HITTEST\nvec4 getColor() {\nreturn v_color;\n}\n#else\nvec4 getColor() {\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\nif (angle < 0.0) {\nangle += 360.0;\n} else if (angle > 360.0) {\nangle = mod(angle, 360.0);\n}\nint numOfEntries = int(v_numOfEntries);\nfloat maxSectorAngle = v_maxSectorAngle;\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || u_sectorThreshold > 0.0) ? u_othersColor : u_defaultColor;\nlowp vec4 prevColor = vec4(0.0);\nlowp vec4 nextColor = vec4(0.0);\nfloat startSectorAngle = 0.0;\nfloat endSectorAngle = 0.0;\nif (angle < maxSectorAngle) {\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\nstartSectorAngle = endSectorAngle;\nendSectorAngle = v_filteredSectorToColorId[index].x;\nif (endSectorAngle > angle) {\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\nprevColor = u_sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? u_othersColor :\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\nnextColor = u_sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? u_othersColor :\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\nbreak;\n}\nif (index == numOfEntries - 1) {\nbreak;\n}\n}\n} else {\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\nstartSectorAngle = maxSectorAngle;\nendSectorAngle = 360.0;\n}\nlowp vec4 outlineColor = u_outlineColor;\nfloat offset = length(v_offset);\nfloat distanceSize = offset * v_size;\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\nfloat distanceToStartSector = (angle - startSectorAngle);\nfloat distanceToEndSector = (endSectorAngle - angle);\nfloat sectorThreshold = 0.6;\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\nif (endSectorAlpha > 0.0) {\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\n} else if (beginSectorAlpha > 0.0) {\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\n}\n}\nfloat donutSize = u_donutRatio * (v_size - v_outlineWidth);\nfloat endOfDonut = donutSize - v_outlineWidth;\nfloat aaThreshold = 0.75;\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\nfloat startOfOutline = v_size - v_outlineWidth;\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\n}\nreturn v_opacity * circleAlpha * fillColor;\n}\n#endif\nvoid main()\n{\nvec4 color = getColor();\n#ifdef HIGHLIGHT\ncolor.a = step(1.0 / 255.0, color.a);\n#endif\ngl_FragColor = color;\n}","pie.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_outlineColor;\nattribute vec4 a_sizeAndOutlineWidth;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nattribute vec2 a_bitSetAndDistRatio;\nattribute vec2 a_zoomRange;\nuniform float u_outlineWidth;\nuniform mediump float u_sectorThreshold;\nvarying float v_size;\nvarying vec2 v_offset;\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\nvarying float v_numOfEntries;\nvarying float v_maxSectorAngle;\nstruct FilteredChartInfo {\nfloat endSectorAngle;\nint colorId;\n};\nint filter(in float sectorAngle,\nin int currentIndex,\ninout FilteredChartInfo filteredInfo,\ninout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\nif (sectorAngle > u_sectorThreshold * 360.0) {\nfilteredInfo.endSectorAngle += sectorAngle;\n#if __VERSION__ == 300\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\n#else\nfor (int i = 0; i < NUMBER_OF_FIELDS; i++) {\nif (i == filteredInfo.colorId) {\nfilteredSectorToColorId[i] = vec2(filteredInfo.endSectorAngle, currentIndex);\n}\n}\n#endif\n++filteredInfo.colorId;\n}\nreturn 0;\n}\nint filterValues(inout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS],\ninout FilteredChartInfo filteredInfo,\nin float sectorAngles[NUMBER_OF_FIELDS]) {\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\nfloat sectorValue = sectorAngles[index];\nfilter(sectorValue, index, filteredInfo, filteredSectorToColorId);\n}\nreturn filteredInfo.colorId;\n}\n#include <materials/vcommon.glsl>\n#include <materials/icon/common.glsl>\n#include <materials/hittest/common.glsl>\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\nvec2 outSize = baseSize;\n#ifdef VV_SIZE\nfloat r = 0.5 * getSize(referenceSize) / referenceSize;\noutSize.xy *= r;\noffset.xy *= r;\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\n#endif\nreturn outSize;\n}\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\nvec3  offset       = vec3(in_offset, 0.0);\nreturn getMatrix(isMapAligned) * offset;\n}\nfloat filterNaNValues(in float value) {\nreturn value != NAN_MAGIC_NUMBER ? value : 0.0;\n}\nvoid main()\n{\nINIT;\nvec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\nvec2  a_offset = a_vertexOffset / 16.0;\nfloat outlineSize = u_outlineWidth;\nfloat a_bitSet = a_bitSetAndDistRatio.x;\nvec2 size = getMarkerSize(a_offset, a_size, outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\nfloat filterFlags = getFilterFlags();\nvec3  pos         = vec3(a_pos * POSITION_PRECISION, 1.0);\nv_opacity      = getOpacity();\nv_id           = norm(a_id);\nv_pos          = u_dvsMat3 * pos + getOffset(a_offset, a_bitSet);\nv_offset       = sign(a_texCoords - 0.5);\nv_size         = max(size.x, size.y);\nv_outlineWidth = outlineSize;\nfloat attributeData[10];\nvec4 attributeData0 = getAttributeData3(a_id);\nattributeData[0] = filterNaNValues(attributeData0.x);\nattributeData[1] = filterNaNValues(attributeData0.y);\nattributeData[2] = filterNaNValues(attributeData0.z);\nattributeData[3] = filterNaNValues(attributeData0.w);\n#if (NUMBER_OF_FIELDS > 4)\nvec4 attributeData1 = getAttributeData4(a_id);\nattributeData[4] = filterNaNValues(attributeData1.x);\nattributeData[5] = filterNaNValues(attributeData1.y);\nattributeData[6] = filterNaNValues(attributeData1.z);\nattributeData[7] = filterNaNValues(attributeData1.w);\n#endif\n#if (NUMBER_OF_FIELDS > 8)\nvec4 attributeData2 = getAttributeData5(a_id);\nattributeData[8] = filterNaNValues(attributeData2.x);\nattributeData[9] = filterNaNValues(attributeData2.y);\n#endif\nfloat sum = 0.0;\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nsum += attributeData[i];\n}\nfloat sectorAngles[NUMBER_OF_FIELDS];\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\n}\nvec2 filteredSectorToColorId[NUMBER_OF_FIELDS];\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\nv_numOfEntries = float(numOfEntries);\nv_maxSectorAngle = filteredInfo.endSectorAngle;\n#if __VERSION__ == 300\nv_filteredSectorToColorId = filteredSectorToColorId;\n#else\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nif (i == numOfEntries) {\nbreak;\n}\nv_filteredSectorToColorId[i] = filteredSectorToColorId[i];\n}\n#endif\n#ifdef HITTEST\nhighp vec3 out_pos = vec3(0.0);\nv_color            = vec4(0.0);\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  pos, v_size);\ngl_PointSize = 1.0;\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\n#endif\n}"},shared:{line:{"common.glsl":"#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_sampleAlphaOnly;\n#endif\nstruct LineData {\nlowp vec4 color;\nmediump vec2 normal;\nmediump float lineHalfWidth;\nlowp float opacity;\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nmediump vec4 tlbr;\nmediump vec2 patternSize;\n#endif\n#ifdef SDF\nmediump float lineWidthRatio;\n#endif\n#if defined(PATTERN) || defined(SDF)\nhighp float accumulatedDistance;\n#endif\n#endif\nhighp vec3 id;\n};","line.frag":"uniform lowp float u_blur;\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\n#if defined(PATTERN) || defined(SDF)\nuniform sampler2D u_texture;\nuniform highp float u_pixelRatio;\n#endif\n#endif\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nlowp vec4 getLineColor(LineData line) {\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\nfloat dist = d * line.lineHalfWidth;\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\n}\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nlowp vec4 getLineColor(LineData line) {\nmediump float lineHalfWidth = line.lineHalfWidth;\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * lineHalfWidth / line.patternSize.y;\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\nmediump float relativeTexY = 0.5 + 0.5 * line.normal.y;\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexY, relativeTexX));\nlowp vec4 color = texture2D(u_texture, texCoord);\n#ifdef VV_COLOR\nif (v_sampleAlphaOnly > 0.5) {\ncolor.rgb = vec3(color.a);\n}\n#endif\nreturn line.opacity * line.color * color;\n}\n#else\nlowp vec4 getLineColor(LineData line) {\nreturn line.opacity * line.color;\n}\n#endif\nvec4 shadeLine(LineData line)\n{\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\nlowp vec4 out_color = getLineColor(line) * alpha;\n#ifdef HIGHLIGHT\nout_color.a = step(1.0 / 255.0, out_color.a);\n#endif\n#ifdef ID\nif (out_color.a < 1.0 / 255.0) {\ndiscard;\n}\nout_color = vec4(line.id, 0.0);\n#endif\nreturn out_color;\n}","line.vert":"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\n#ifdef VV_SIZE\nfloat refLineWidth = 2.0 * referenceHalfWidth;\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\n#else\nreturn lineHalfWidth;\n#endif\n}\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\n#ifdef HIGHLIGHT\nhalfWidth = max(halfWidth, 2.0);\n#endif\nreturn halfWidth;\n}\nvec2 getDist(in vec2 offset, in float halfWidth) {\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nreturn thinLineFactor * halfWidth * offset;\n}\nLineData buildLine(\nout vec3 out_pos,\nin vec3 in_id,\nin vec2 in_pos,\nin vec4 in_color,\nin vec2 in_offset,\nin vec2 in_normal,\nin float in_accumulatedDist,\nin float in_lineHalfWidth,\nin float in_bitSet,\nin vec4 in_tlbr,\nin vec2 in_segmentDirection,\nin float in_referenceHalfWidth\n)\n{\nfloat aa        = 0.5 * u_antialiasing;\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\nfloat z         = 2.0 * step(baseWidth, 0.0);\nvec2  dist      = getDist(in_offset, halfWidth);\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nvec4  color     = in_color;\nfloat opacity   = 1.0;\n#else\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\nfloat opacity   = getOpacity();\n#ifdef SDF\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\n#endif\n#endif\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\n#endif\nout_pos = vec3(pos.xy, z);\nreturn LineData(\ncolor,\nin_normal,\nhalfWidth,\nopacity,\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nin_tlbr / u_mosaicSize.xyxy,\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\n#endif\n#ifdef SDF\nlineWidthRatio,\n#endif\n#if defined(PATTERN) || defined(SDF)\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\n#endif\n#endif\nnorm(in_id)\n);\n}"}},"symbologyTypeUtils.glsl":"#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\n#endif",text:{"common.glsl":"uniform highp vec2 u_mosaicSize;\nvarying highp vec3 v_id;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nvarying lowp vec4 v_color;\nvarying highp vec2 v_tex;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying lowp float v_transparency;","hittest.glsl":"#include <materials/hittest/common.glsl>","text.frag":"precision mediump float;\n#include <materials/text/common.glsl>\nuniform lowp sampler2D u_texture;\n#ifdef HITTEST\nvec4 getColor() {\nreturn v_color;\n}\n#else\nvec4 getColor()\n{\nfloat SDF_CUTOFF = (2.0 / 8.0);\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\nlowp float dist = texture2D(u_texture, v_tex).a;\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\n#ifdef HIGHLIGHT\nedge /= 2.0;\n#endif\nlowp float aa = v_antialiasingWidth;\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\nreturn alpha * v_color * v_opacity;\n}\n#endif\nvoid main()\n{\ngl_FragColor = getColor();\n}","text.vert":"precision highp float;\n#include <materials/utils.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\n#include <materials/text/hittest.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texFontSize;\nattribute vec4 a_aux;\nattribute vec2 a_zoomRange;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHalo;\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\n#ifdef VV_SIZE\nfloat r = getSize(referenceSize) / referenceSize;\nbaseSize *= r;\noffset.xy *= r;\nreturn baseSize;\n#endif\nreturn baseSize;\n}\nvoid main()\n{\nINIT;\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\nfloat a_bitSet        = a_aux.w;\nfloat a_fontSize      = a_texFontSize.z;\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\nv_color   = u_isHalo * a_haloColor + (1.0 - u_isHalo) * getColor(a_color, a_bitSet, 1);\nv_opacity = getOpacity();\nv_id      = norm(a_id);\nv_tex     = a_texCoords / u_mosaicSize;\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\nv_edgeDistanceOffset = u_isHalo * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\n#ifdef HITTEST\nhighp vec3 out_pos  = vec3(0.);\nv_color = vec4(0.);\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\n+ u_tileMat3 * offset, fontSize / 2.);\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\n#else\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\n#endif\n}"},"utils.glsl":"float rshift(in float u32, in int amount) {\nreturn floor(u32 / pow(2.0, float(amount)));\n}\nfloat getBit(in float bitset, in int bitIndex) {\nfloat offset = pow(2.0, float(bitIndex));\nreturn mod(floor(bitset / offset), 2.0);\n}\nfloat getFilterBit(in float bitset, in int bitIndex) {\nreturn getBit(bitset, bitIndex + 1);\n}\nfloat getHighlightBit(in float bitset) {\nreturn getBit(bitset, 0);\n}\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\nfloat isAggregate = getBit(bitset.b, 7);\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\n}\nvec4 unpack(in float u32) {\nfloat r = mod(rshift(u32, 0), 255.0);\nfloat g = mod(rshift(u32, 8), 255.0);\nfloat b = mod(rshift(u32, 16), 255.0);\nfloat a = mod(rshift(u32, 24), 255.0);\nreturn vec4(r, g, b, a);\n}\nvec3 norm(in vec3 v) {\nreturn v /= 255.0;\n}\nvec4 norm(in vec4 v) {\nreturn v /= 255.0;\n}\nfloat max4(vec4 target) {\nreturn max(max(max(target.x, target.y), target.z), target.w);\n}\nvec2 unpack_u8_nf32(vec2 bytes) {\nreturn (bytes - 127.0) / 127.0;\n}\nhighp float rand(in vec2 co) {\nhighp float a = 12.9898;\nhighp float b = 78.233;\nhighp float c = 43758.5453;\nhighp float dt = dot(co, vec2(a,b));\nhighp float sn = mod(dt, 3.14);\nreturn fract(sin(sn) * c);\n}","vcommon.glsl":"#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/attributeData.glsl>\n#include <materials/vv.glsl>\n#include <materials/barycentric.glsl>\nattribute vec2 a_pos;\nattribute highp vec3 a_id;\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform highp mat3 u_displayViewMat3;\nuniform highp mat3 u_tileMat3;\nuniform highp mat3 u_viewMat3;\nuniform highp float u_pixelRatio;\nuniform mediump float u_zoomFactor;\nuniform mediump float u_antialiasing;\nuniform mediump float u_currentZoom;\nvec4 VV_ADATA = vec4(0.0);\nvoid loadVisualVariableData(inout vec4 target) {\n#ifdef SUPPORTS_TEXTURE_FLOAT\ntarget.rgba = getAttributeData2(a_id);\n#else\nvec4 data0 = getAttributeData2(a_id);\nvec4 data1 = getAttributeData3(a_id);\ntarget.r = u88VVToFloat(data0.rg * 255.0);\ntarget.g = u88VVToFloat(data0.ba * 255.0);\ntarget.b = u88VVToFloat(data1.rg * 255.0);\ntarget.a = u88VVToFloat(data1.ba * 255.0);\n#endif\n}\n#ifdef VV\n#define INIT loadVisualVariableData(VV_ADATA)\n#else\n#define INIT\n#endif\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\n#ifdef VV_COLOR\nfloat isColorLocked   = getBit(a_bitSet, index);\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\n#else\nreturn a_color;\n#endif\n}\nfloat getOpacity() {\n#ifdef VV_OPACITY\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\n#else\nreturn 1.0;\n#endif\n}\nfloat getSize(in float in_size) {\n#ifdef VV_SIZE\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\n#else\nreturn in_size;\n#endif\n}\nmat3 getRotation() {\n#ifdef VV_ROTATION\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\n#else\nreturn mat3(1.0);\n#endif\n}\nfloat getFilterFlags() {\n#ifdef IGNORES_SAMPLER_PRECISION\nreturn ceil(getAttributeData0(a_id).x * 255.0);\n#else\nreturn getAttributeData0(a_id).x * 255.0;\n#endif\n}\nvec4 getAnimationState() {\nreturn getAttributeData1(a_id);\n}\nfloat getMinZoom() {\nvec4 data0 = getAttributeData0(a_id) * 255.0;\nreturn data0.g;\n}\nmat3 getMatrixNoDisplay(float isMapAligned) {\nreturn isMapAligned * u_viewMat3 * u_tileMat3 + (1.0 - isMapAligned) * u_tileMat3;\n}\nmat3 getMatrix(float isMapAligned) {\nreturn isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\n}\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\n#ifdef INSIDE\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\n#elif defined(OUTSIDE)\npos.z += 2.0 * getFilterBit(filterFlags, 1);\n#elif defined(HIGHLIGHT)\n#if !defined(HIGHLIGHT_ALL)\npos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\n#endif\n#endif\npos.z += 2.0 * (step(minMaxZoom.y, u_currentZoom) + (1.0 - step(minMaxZoom.x, u_currentZoom)));\nreturn pos;\n}","vv.glsl":"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\n#define VV_SIZE\n#endif\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\n#define VV\n#endif\n#ifdef VV_COLOR\nuniform highp float u_vvColorValues[8];\nuniform vec4 u_vvColors[8];\n#endif\n#ifdef VV_SIZE_MIN_MAX_VALUE\nuniform highp vec4 u_vvSizeMinMaxValue;\n#endif\n#ifdef VV_SIZE_SCALE_STOPS\nuniform highp float u_vvSizeScaleStopsValue;\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nuniform highp float u_vvSizeFieldStopsValues[6];\nuniform float u_vvSizeFieldStopsSizes[6];\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\n#endif\n#ifdef VV_OPACITY\nuniform highp float u_vvOpacityValues[8];\nuniform float u_vvOpacities[8];\n#endif\n#ifdef VV_ROTATION\nuniform lowp float u_vvRotationType;\n#endif\nbool isNan(float val) {\nreturn (val == NAN_MAGIC_NUMBER);\n}\n#ifdef VV_SIZE_MIN_MAX_VALUE\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nfloat interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\nreturn u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\n}\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nconst int VV_SIZE_N = 6;\nfloat getVVStopsSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nif (sizeValue <= u_vvSizeFieldStopsValues[0]) {\nreturn u_vvSizeFieldStopsSizes[0];\n}\nfor (int i = 1; i < VV_SIZE_N; ++i) {\nif (u_vvSizeFieldStopsValues[i] >= sizeValue) {\nfloat f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\nreturn mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\n}\n}\nreturn u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\n}\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nfloat getVVUnitValue(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nreturn u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\n}\n#endif\n#ifdef VV_OPACITY\nconst int VV_OPACITY_N = 8;\nfloat getVVOpacity(float opacityValue) {\nif (isNan(opacityValue)) {\nreturn 1.0;\n}\nif (opacityValue <= u_vvOpacityValues[0]) {\nreturn u_vvOpacities[0];\n}\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\nif (u_vvOpacityValues[i] >= opacityValue) {\nfloat f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\nreturn mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\n}\n}\nreturn u_vvOpacities[VV_OPACITY_N - 1];\n}\n#endif\n#ifdef VV_ROTATION\nmat4 getVVRotation(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat4(1, 0, 0, 0,\n0, 1, 0, 0,\n0, 0, 1, 0,\n0, 0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (u_vvRotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat4(cosA, sinA, 0, 0,\n-sinA,  cosA, 0, 0,\n0,     0, 1, 0,\n0,     0, 0, 1);\n}\nmat3 getVVRotationMat3(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat3(1, 0, 0,\n0, 1, 0,\n0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (u_vvRotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * -rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat3(cosA, -sinA, 0,\nsinA, cosA, 0,\n0,    0,    1);\n}\n#endif\n#ifdef VV_COLOR\nconst int VV_COLOR_N = 8;\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\nif (isNan(colorValue) || isColorLocked == 1.0) {\nreturn fallback;\n}\nif (colorValue <= u_vvColorValues[0]) {\nreturn u_vvColors[0];\n}\nfor (int i = 1; i < VV_COLOR_N; ++i) {\nif (u_vvColorValues[i] >= colorValue) {\nfloat f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\nreturn mix(u_vvColors[i-1], u_vvColors[i], f);\n}\n}\nreturn u_vvColors[VV_COLOR_N - 1];\n}\n#endif\nfloat getVVSize(in float size, in float vvSize)  {\n#ifdef VV_SIZE_MIN_MAX_VALUE\nreturn getVVMinMaxSize(vvSize, size);\n#elif defined(VV_SIZE_SCALE_STOPS)\nreturn u_vvSizeScaleStopsValue;\n#elif defined(VV_SIZE_FIELD_STOPS)\nfloat outSize = getVVStopsSize(vvSize, size);\nreturn isNan(outSize) ? size : outSize;\n#elif defined(VV_SIZE_UNIT_VALUE)\nreturn getVVUnitValue(vvSize, size);\n#else\nreturn size;\n#endif\n}"},overlay:{overlay:{"overlay.frag":"precision lowp float;\nuniform lowp sampler2D u_texture;\nuniform lowp float u_opacity;\nvarying mediump vec2 v_uv;\nvoid main() {\nvec4 color = texture2D(u_texture, v_uv);\ngl_FragColor = color *  u_opacity;\n}","overlay.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_uv;\nuniform highp mat3 u_dvsMat3;\nvarying mediump vec2 v_uv;\nvoid main(void) {\nv_uv = a_uv;\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0);\ngl_Position = vec4(pos.xy, 0.0, 1.0);\n}"}},"post-processing":{blit:{"blit.frag":"precision mediump float;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\ngl_FragColor = texture2D(u_texture, v_uv);\n}"},bloom:{composite:{"composite.frag":"precision mediump float;\nvarying vec2 v_uv;\nuniform sampler2D u_blurTexture1;\nuniform sampler2D u_blurTexture2;\nuniform sampler2D u_blurTexture3;\nuniform sampler2D u_blurTexture4;\nuniform sampler2D u_blurTexture5;\nuniform float u_bloomStrength;\nuniform float u_bloomRadius;\nuniform float u_bloomFactors[NUMMIPS];\nuniform vec3 u_bloomTintColors[NUMMIPS];\nfloat lerpBloomFactor(const in float factor) {\nfloat mirrorFactor = 1.2 - factor;\nreturn mix(factor, mirrorFactor, u_bloomRadius);\n}\nvoid main() {\ngl_FragColor = u_bloomStrength * (\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\n);\n}"},gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\n#define SIGMA RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = float(SIGMA);\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}"},luminosityHighPass:{"luminosityHighPass.frag":"precision mediump float;\nuniform sampler2D u_texture;\nuniform vec3 u_defaultColor;\nuniform float u_defaultOpacity;\nuniform float u_luminosityThreshold;\nuniform float u_smoothWidth;\nvarying vec2 v_uv;\nvoid main() {\nvec4 texel = texture2D(u_texture, v_uv);\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat v = dot(texel.xyz, luma);\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\ngl_FragColor = mix(outputColor, texel, alpha);\n}"}},blur:{gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nuniform float u_sigma;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = u_sigma;\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}"},"radial-blur":{"radial-blur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nconst float sampleDist = 1.0;\nconst float sampleStrength = 2.2;\nvoid main(void) {\nfloat samples[10];\nsamples[0] = -0.08;\nsamples[1] = -0.05;\nsamples[2] = -0.03;\nsamples[3] = -0.02;\nsamples[4] = -0.01;\nsamples[5] =  0.01;\nsamples[6] =  0.02;\nsamples[7] =  0.03;\nsamples[8] =  0.05;\nsamples[9] =  0.08;\nvec2 dir = 0.5 - v_uv;\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\ndir = dir / dist;\nvec4 color = texture2D(u_colorTexture,v_uv);\nvec4 sum = color;\nfor (int i = 0; i < 10; i++) {\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\n}\nsum *= 1.0 / 11.0;\nfloat t = dist * sampleStrength;\nt = clamp(t, 0.0, 1.0);\ngl_FragColor = mix(color, sum, t);\n}"}},dra:{"dra.frag":"precision mediump float;\nuniform sampler2D u_minColor;\nuniform sampler2D u_maxColor;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\nvec4 color = texture2D(u_texture, v_uv);\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\nvec3 colorUnpremultiply = color.rgb / color.a;\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\n}","min-max":{"min-max.frag":"#extension GL_EXT_draw_buffers : require\nprecision mediump float;\n#define CELL_SIZE 2\nuniform sampler2D u_minTexture;\nuniform sampler2D u_maxTexture;\nuniform vec2 u_srcResolution;\nuniform vec2 u_dstResolution;\nvarying vec2 v_uv;\nvoid main() {\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\nvec2 onePixel = vec2(1.0) / u_srcResolution;\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\nvec4 minColor = vec4(1.0);\nvec4 maxColor = vec4(0.0);\nfor (int y = 0; y < CELL_SIZE; ++y) {\nfor (int x = 0; x < CELL_SIZE; ++x) {\nvec2 offset = uv + vec2(x, y) * onePixel;\nminColor = min(minColor, texture2D(u_minTexture, offset));\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\n}\n}\ngl_FragData[0] = minColor;\ngl_FragData[1] = maxColor;\n}"}},"drop-shadow":{composite:{"composite.frag":"precision mediump float;\nuniform sampler2D u_layerFBOTexture;\nuniform sampler2D u_blurTexture;\nuniform vec4 u_shadowColor;\nuniform vec2 u_shadowOffset;\nuniform highp mat3 u_displayViewMat3;\nvarying vec2 v_uv;\nvoid main() {\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\n}"}},"edge-detect":{"frei-chen":{"frei-chen.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nvarying vec2 v_uv;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[9];\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\nvoid main() {\nG[0] = g0,\nG[1] = g1,\nG[2] = g2,\nG[3] = g3,\nG[4] = g4,\nG[5] = g5,\nG[6] = g6,\nG[7] = g7,\nG[8] = g8;\nmat3 I;\nfloat cnv[9];\nvec3 sample;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 9; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\n}"},sobel:{"sobel.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\n}"}},"edge-enhance":{"edge-enhance.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nvec4 color = texture2D(u_colorTexture, v_uv);\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\n}"},filterEffect:{"filterEffect.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform mat4 u_coefficients;\nvarying vec2 v_uv;\nvoid main() {\nvec4 color = texture2D(u_colorTexture, v_uv);\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\nfloat a = color.a;\ngl_FragColor = vec4(a * rgbw.rgb, a);\n}"},pp:{"pp.vert":"precision mediump float;\nattribute vec2 a_position;\nvarying vec2 v_uv;\nvoid main() {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"}},raster:{bitmap:{"bitmap.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform highp vec2 u_coordScale;\nuniform lowp float u_opacity;\n#include <filtering/bicubic.glsl>\nvoid main() {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\n#else\nvec4 color = texture2D(u_texture, v_texcoord);\n#endif\nfloat alpha = u_opacity * color.a;\ngl_FragColor = vec4(alpha * color.rgb, alpha);\n}","bitmap.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},common:{"common.glsl":"uniform sampler2D u_image;\nuniform int u_bandCount;\nuniform bool u_flipY;\nuniform float u_opacity;\nuniform int u_resampling;\nuniform vec2 u_srcImageSize;\n#ifdef APPLY_PROJECTION\n#include <raster/common/projection.glsl>\n#endif\n#ifdef BICUBIC\n#include <filtering/bicubic.glsl>\n#endif\n#ifdef BILINEAR\n#include <filtering/bilinear.glsl>\n#endif\nvec2 getPixelLocation(vec2 coords) {\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\n#ifdef APPLY_PROJECTION\ntargetLocation = projectPixelLocation(targetLocation);\n#endif\nreturn targetLocation;\n}\nbool isOutside(vec2 coords){\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\nreturn true;\n} else {\nreturn false;\n}\n}\nvec4 getPixel(vec2 pixelLocation) {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\n#elif defined(BILINEAR)\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\n#else\nvec4 color = texture2D(u_image, pixelLocation);\n#endif\nreturn color;\n}","contrastBrightness.glsl":"uniform float u_contrastOffset;\nuniform float u_brightnessOffset;\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\nfloat maxI = 255.0;\nfloat mid = 128.0;\nfloat c = u_contrastOffset;\nfloat b = u_brightnessOffset;\nvec4 v;\nif (c > 0.0 && c < 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\n} else if (c <= 0.0 && c > -100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\n} else if (c == 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\nv = (sign(v) + 1.0) / 2.0;\n} else if (c == -100.0) {\nv = vec4(mid, mid, mid, currentPixel.a);\n}\nreturn vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\n}","projection.glsl":"uniform sampler2D u_transformGrid;\nuniform vec2 u_transformSpacing;\nuniform vec2 u_transformGridSize;\nuniform vec2 u_targetImageSize;\nvec2 projectPixelLocation(vec2 coords) {\n#ifdef LOOKUP_PROJECTION\nvec4 pv = texture2D(u_transformGrid, coords);\nreturn vec2(pv.r, pv.g);\n#endif\nvec2 index_image = floor(coords * u_targetImageSize);\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\nvec2 srcLocation;\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\nif (pos.s <= pos.t) {\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\n} else {\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\n}\nreturn srcLocation;\n}"},flow:{"getFadeOpacity.glsl":"uniform float u_decayRate;\nuniform float u_fadeToZero;\nfloat getFadeOpacity(float x) {\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\n}","getFragmentColor.glsl":"vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\nif (dist > featheringStart) {\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\n}\nreturn color;\n}",imagery:{"imagery.frag":"precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform float u_Min;\nuniform float u_Max;\nuniform float u_featheringSize;\n#include <raster/flow/vv.glsl>\nfloat getIntensity(float v) {\nreturn u_Min + v * (u_Max - u_Min);\n}\nvoid main(void) {\nvec4 sampled = texture2D(u_texture, v_texcoord);\nfloat intensity = getIntensity(sampled.r);\ngl_FragColor = getColor(intensity);\ngl_FragColor.a *= getOpacity(sampled.r);\ngl_FragColor.a *= sampled.a;\ngl_FragColor.rgb *= gl_FragColor.a;\n}","imagery.vert":"attribute vec2 a_position;\nattribute vec2 a_texcoord;\nuniform mat3 u_dvsMat3;\nvarying vec2 v_texcoord;\nvoid main(void) {\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_texcoord = a_texcoord;\n}"},particles:{"particles.frag":"precision highp float;\nvarying vec4 v_color;\nvarying vec2 v_texcoord;\nvarying float v_size;\nuniform float u_featheringSize;\n#include <raster/flow/getFragmentColor.glsl>\nvoid main(void) {\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\n}","particles.vert":"attribute vec4 a_xyts0;\nattribute vec4 a_xyts1;\nattribute vec4 a_typeIdDurationSeed;\nattribute vec4 a_extrudeInfo;\nuniform mat3 u_dvsMat3;\nuniform mat3 u_displayViewMat3;\nuniform float u_time;\nuniform float u_trailLength;\nuniform float u_flowSpeed;\nvarying vec4 v_color;\nvarying vec2 v_texcoord;\nvarying float v_size;\nuniform float u_featheringSize;\nuniform float u_introFade;\n#include <raster/flow/vv.glsl>\n#include <raster/flow/getFadeOpacity.glsl>\nvoid main(void) {\nvec2 position0 = a_xyts0.xy;\nfloat t0 = a_xyts0.z;\nfloat speed0 = a_xyts0.w;\nvec2 position1 = a_xyts1.xy;\nfloat t1 = a_xyts1.z;\nfloat speed1 = a_xyts1.w;\nfloat type = a_typeIdDurationSeed.x;\nfloat id = a_typeIdDurationSeed.y;\nfloat duration = a_typeIdDurationSeed.z;\nfloat seed = a_typeIdDurationSeed.w;\nvec2 e0 = a_extrudeInfo.xy;\nvec2 e1 = a_extrudeInfo.zw;\nfloat animationPeriod = duration + u_trailLength;\nfloat scaledTime = u_time * u_flowSpeed;\nfloat randomizedTime = scaledTime + seed * animationPeriod;\nfloat t = mod(randomizedTime, animationPeriod);\nfloat fUnclamped = (t - t0) / (t1 - t0);\nfloat f = clamp(fUnclamped, 0.0, 1.0);\nfloat clampedTime = mix(t0, t1, f);\nfloat speed = mix(speed0, speed1, f);\nvec2 extrude;\nvec2 position;\nfloat fadeOpacity;\nfloat introOpacity;\nif (type == 2.0) {\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\nreturn;\n}\nvec2 ortho = mix(e0, e1, f);\nvec2 parallel;\nparallel = normalize(position1 - position0) * 0.5;\nif (id == 1.0) {\nextrude = ortho;\nv_texcoord = vec2(0.5, 0.0);\n} else if (id == 2.0) {\nextrude = -ortho;\nv_texcoord = vec2(0.5, 1.0);\n} else if (id == 3.0) {\nextrude = ortho + parallel;\nv_texcoord = vec2(1.0, 0.0);\n} else if (id == 4.0) {\nextrude = -ortho + parallel;\nv_texcoord = vec2(1.0, 1.0);\n}\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n} else {\nif (fUnclamped < 0.0) {\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\nreturn;\n}\nif (id == 1.0) {\nextrude = e0;\nv_texcoord = vec2(0.5, 0.0);\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\nintroOpacity = 1.0 - exp(-t0);\nv_size = getSize(speed0);\nv_color = getColor(speed0);\nv_color.a *= getOpacity(speed0);\nposition = position0;\n} else if (id == 2.0) {\nextrude = -e0;\nv_texcoord = vec2(0.5, 1.0);\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\nintroOpacity = 1.0 - exp(-t0);\nv_size = getSize(speed0);\nv_color = getColor(speed0);\nv_color.a *= getOpacity(speed0);\nposition = position0;\n} else if (id == 3.0) {\nextrude = mix(e0, e1, f);\nv_texcoord = vec2(0.5, 0.0);\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n} else if (id == 4.0) {\nextrude = -mix(e0, e1, f);\nv_texcoord = vec2(0.5, 1.0);\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n}\n}\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_color.a *= fadeOpacity;\nv_color.a *= mix(1.0, introOpacity, u_introFade);\nv_color.rgb *= v_color.a;\n}"},streamlines:{"streamlines.frag":"precision highp float;\nvarying float v_side;\nvarying float v_time;\nvarying float v_totalTime;\nvarying float v_timeSeed;\nvarying vec4 v_color;\nvarying float v_size;\nuniform float u_time;\nuniform float u_trailLength;\nuniform float u_flowSpeed;\nuniform float u_featheringSize;\nuniform float u_introFade;\n#include <raster/flow/getFragmentColor.glsl>\n#include <raster/flow/getFadeOpacity.glsl>\nvoid main(void) {\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\n}","streamlines.vert":"attribute vec3 a_positionAndSide;\nattribute vec3 a_timeInfo;\nattribute vec2 a_extrude;\nattribute float a_speed;\nuniform mat3 u_dvsMat3;\nuniform mat3 u_displayViewMat3;\nvarying float v_time;\nvarying float v_totalTime;\nvarying float v_timeSeed;\nvarying vec4 v_color;\nvarying float v_side;\nvarying float v_size;\nuniform float u_featheringSize;\n#include <raster/flow/vv.glsl>\nvoid main(void) {\nvec4 lineColor = getColor(a_speed);\nfloat lineOpacity = getOpacity(a_speed);\nfloat lineSize = getSize(a_speed);\nvec2 position = a_positionAndSide.xy;\nv_side = a_positionAndSide.z;\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_time = a_timeInfo.x;\nv_totalTime = a_timeInfo.y;\nv_timeSeed = a_timeInfo.z;\nv_color = lineColor;\nv_color.a *= lineOpacity;\nv_color.rgb *= v_color.a;\nv_size = lineSize;\n}"},"vv.glsl":"#define MAX_STOPS 8\n#ifdef VV_COLOR\nuniform float u_color_stops[MAX_STOPS];\nuniform vec4 u_color_values[MAX_STOPS];\nuniform int u_color_count;\n#else\nuniform vec4 u_color;\n#endif\n#ifdef VV_OPACITY\nuniform float u_opacity_stops[MAX_STOPS];\nuniform float u_opacity_values[MAX_STOPS];\nuniform int u_opacity_count;\n#else\nuniform float u_opacity;\n#endif\n#ifdef VV_SIZE\nuniform float u_size_stops[MAX_STOPS];\nuniform float u_size_values[MAX_STOPS];\nuniform int u_size_count;\n#else\nuniform float u_size;\n#endif\nuniform float u_featheringOffset;\nvec4 getColor(float x) {\n#ifdef VV_COLOR\nvec4 color = u_color_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_color_count) {\nbreak;\n}\nfloat x1 = u_color_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_color_stops[i];\nvec4 y2 = u_color_values[i];\nif (x < x2) {\nvec4 y1 = u_color_values[i - 1];\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\ncolor = y2;\n}\n}\n}\n#else\nvec4 color = u_color;\n#endif\nreturn color;\n}\nfloat getOpacity(float x) {\n#ifdef VV_OPACITY\nfloat opacity = u_opacity_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_opacity_count) {\nbreak;\n}\nfloat x1 = u_opacity_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_opacity_stops[i];\nfloat y2 = u_opacity_values[i];\nif (x < x2) {\nfloat y1 = u_opacity_values[i - 1];\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\nopacity = y2;\n}\n}\n}\n#else\nfloat opacity = u_opacity;\n#endif\nreturn opacity;\n}\nfloat getSize(float x) {\n#ifdef VV_SIZE\nfloat size = u_size_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_size_count) {\nbreak;\n}\nfloat x1 = u_size_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_size_stops[i];\nfloat y2 = u_size_values[i];\nif (x < x2) {\nfloat y1 = u_size_values[i - 1];\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\nsize = y2;\n}\n}\n}\n#else\nfloat size = u_size;\n#endif\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\n}"},hillshade:{"hillshade.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform int u_hillshadeType;\nuniform float u_sinZcosAs[6];\nuniform float u_sinZsinAs[6];\nuniform float u_cosZs[6];\nuniform float u_weights[6];\nuniform vec2 u_factor;\nuniform float u_minValue;\nuniform float u_maxValue;\n#include <raster/lut/colorize.glsl>\nfloat getNeighborHoodAlpha(float a, float b, float c, float d, float e, float f, float g, float h, float i){\nif (a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0) {\nreturn 0.0;\n}\nelse {\nreturn e;\n}\n}\nvec3 rgb2hsv(vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\nvec3 hsv = rgb2hsv(rgb.xyz);\nhsv.z = hillshade;\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nif (currentPixel.a == 0.0) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec2 axy = vec2(-1.0, -1.0);\nvec2 bxy = vec2(0.0, -1.0);\nvec2 cxy = vec2(1.0, -1.0);\nvec2 dxy = vec2(-1.0, 0.0);\nvec2 fxy = vec2(1.0, 0.0);\nvec2 gxy = vec2(-1.0, 1.0);\nvec2 hxy = vec2(0.0, 1.0);\nvec2 ixy = vec2(1.0, 1.0);\nvec2 onePixel = 1.0 / u_srcImageSize;\nif (pixelLocation.s < onePixel.s) {\naxy[0] = 1.0;\ndxy[0] = 1.0;\ngxy[0] = 1.0;\n}\nif (pixelLocation.t < onePixel.t) {\naxy[1] = 1.0;\nbxy[1] = 1.0;\ncxy[1] = 1.0;\n}\nif (pixelLocation.s > 1.0 - onePixel.s) {\ncxy[0] = -1.0;\nfxy[0] = -1.0;\nixy[0] = -1.0;\n}\nif (pixelLocation.t > 1.0 - onePixel.t) {\ngxy[1] = -1.0;\nhxy[1] = -1.0;\nixy[1] = -1.0;\n}\nvec4 va = texture2D(u_image, pixelLocation + onePixel * axy);\nvec4 vb = texture2D(u_image, pixelLocation + onePixel * bxy);\nvec4 vc = texture2D(u_image, pixelLocation + onePixel * cxy);\nvec4 vd = texture2D(u_image, pixelLocation + onePixel * dxy);\nvec4 ve = texture2D(u_image, pixelLocation);\nvec4 vf = texture2D(u_image, pixelLocation + onePixel * fxy);\nvec4 vg = texture2D(u_image, pixelLocation + onePixel * gxy);\nvec4 vh = texture2D(u_image, pixelLocation + onePixel * hxy);\nvec4 vi = texture2D(u_image, pixelLocation + onePixel * ixy);\nfloat dzx = (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r * u_factor.s;\nfloat dzy = (vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r * u_factor.t;\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\nfloat hillshade = 0.0;\nif (u_hillshadeType == 0){\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\nif (z < 0.0)  z = 0.0;\nhillshade = z;\n} else {\nfor (int k = 0; k < 6; k++) {\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\nif (z < 0.0) z = 0.0;\nhillshade = hillshade + z * u_weights[k];\nif (k == 5) break;\n}\n}\nfloat alpha = getNeighborHoodAlpha(va.a, vb.a, vc.a, vd.a, ve.a, vf.a, vg.a, vh.a, vi.a);\n#ifdef APPLY_COLORMAP\ngl_FragColor = overlay(ve.r, u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\n#else\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\n#endif\n}","hillshade.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},lut:{"colorize.glsl":"uniform sampler2D u_colormap;\nuniform float u_colormapOffset;\nuniform float u_colormapMaxIndex;\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\nvec4 color = texture2D(u_colormap, clrPosition);\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\nreturn result;\n}","lut.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\n#include <raster/lut/colorize.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nvec4 result = colorize(currentPixel, 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\n}","lut.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos * u_scale + u_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},magdir:{"magdir.frag":"precision mediump float;\nvarying vec4 v_color;\nuniform lowp float u_opacity;\nvoid main() {\ngl_FragColor = v_color * u_opacity;\n}","magdir.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nuniform float u_rotation;\nuniform vec4 u_colors[12];\nvarying vec4 v_color;\nvoid main()\n{\nfloat angle = a_offset.y + u_rotation;\n#ifndef ROTATION_GEOGRAPHIC\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\n#endif\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\nv_color = u_colors[int(a_vv.x)];\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}"},reproject:{"reproject.frag":"precision mediump float;\nvarying vec2 v_texcoord;\n#include <raster/common/common.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\n}","reproject.vert":"precision mediump float;\nattribute vec2 a_position;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_position;\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\n}"},scalar:{"scalar.frag":"precision mediump float;\nuniform lowp float u_opacity;\nvarying vec2 v_pos;\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\nconst float outlineSize = 0.02;\nconst float innerRadius = 0.25;\nconst float outerRadius = 0.42;\nconst float innerSquareLength = 0.15;\nvoid main() {\nmediump float dist = length(v_pos);\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\n#ifdef INNER_CIRCLE\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\n#else\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\n#endif\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\n}","scalar.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nvarying vec2 v_pos;\nvoid main()\n{\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 size = u_symbolSize * sizePercentage;\nvec2 pos = a_pos + a_offset * size;\nv_pos = a_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}"},stretch:{"stretch.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform float u_minCutOff[3];\nuniform float u_maxCutOff[3];\nuniform float u_minOutput;\nuniform float u_maxOutput;\nuniform float u_factor[3];\nuniform bool u_useGamma;\nuniform float u_gamma[3];\nuniform float u_gammaCorrection[3];\n#include <raster/lut/colorize.glsl>\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\nif (val >= maxCutOff) {\nreturn maxOutput;\n} else if (val <= minCutOff) {\nreturn minOutput;\n}\nfloat stretchedVal;\nif (useGamma) {\nfloat tempf = 1.0;\nfloat outRange = maxOutput - minOutput;\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\nif (gamma > 1.0) {\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\n}\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\n} else {\nstretchedVal = minOutput + (val - minCutOff) * factor;\n}\nreturn stretchedVal;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\n#ifdef NOOP\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\nreturn;\n#endif\nif (u_bandCount == 1) {\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\n#ifdef APPLY_COLORMAP\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\n#else\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\n#endif\n} else {\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\n}\n}","stretch.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos * u_scale + u_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"}},stencil:{"stencil.frag":"void main() {\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n}","stencil.vert":"attribute vec2 a_pos;\nuniform mat3 u_worldExtent;\nvoid main() {\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\n}"},tileInfo:{"tileInfo.frag":"uniform mediump sampler2D u_texture;\nvarying mediump vec2 v_tex;\nvoid main(void) {\nlowp vec4 color = texture2D(u_texture, v_tex);\ngl_FragColor = 0.75 * color;\n}","tileInfo.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump float u_depth;\nuniform mediump vec2 u_coord_ratio;\nuniform mediump vec2 u_delta;\nuniform mediump vec2 u_dimensions;\nvarying mediump vec2 v_tex;\nvoid main() {\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\nv_tex = a_pos;\n}"},util:{"atan2.glsl":"float atan2(in float y, in float x) {\nfloat t0, t1, t2, t3, t4;\nt3 = abs(x);\nt1 = abs(y);\nt0 = max(t3, t1);\nt1 = min(t3, t1);\nt3 = 1.0 / t0;\nt3 = t1 * t3;\nt4 = t3 * t3;\nt0 =         - 0.013480470;\nt0 = t0 * t4 + 0.057477314;\nt0 = t0 * t4 - 0.121239071;\nt0 = t0 * t4 + 0.195635925;\nt0 = t0 * t4 - 0.332994597;\nt0 = t0 * t4 + 0.999995630;\nt3 = t0 * t3;\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\nt3 = y < 0.0 ? -t3 : t3;\nreturn t3;\n}","encoding.glsl":"const vec4 rgba2float_factors = vec4(\n255.0 / (256.0),\n255.0 / (256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n);\nfloat rgba2float(vec4 rgba) {\nreturn dot(rgba, rgba2float_factors);\n}"}};var a=n("49f0");function o(e){let t=i;return e.split("/").forEach(e=>{t&&(t=t[e])}),t}const r=new a["a"](o);function s(e){return r.resolveIncludes(e)}},beba:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return l})),n.d(t,"d",(function(){return d})),n.d(t,"e",(function(){return f})),n.d(t,"f",(function(){return u})),n.d(t,"g",(function(){return h})),n.d(t,"h",(function(){return m})),n.d(t,"i",(function(){return _})),n.d(t,"j",(function(){return v})),n.d(t,"k",(function(){return p}));var i=n("02f1"),a=n("cc15"),o=n("d17d"),r=(n("d267"),n("a1ff"));function s(e,t,n="nearest",i=!1){var s;const l=!(i&&"u8"===t.pixelType),c=l?o["q"].FLOAT:o["q"].UNSIGNED_BYTE,u=null==t.pixels||0===t.pixels.length?null:l?t.getAsRGBAFloat():t.getAsRGBA(),f=null==(s=e.capabilities.textureFloat)?void 0:s.textureFloatLinear,d={width:t.width,height:t.height,target:o["A"].TEXTURE_2D,pixelFormat:o["p"].RGBA,internalFormat:e.type===a["a"].WEBGL2&&l?o["v"].RGBA32F:o["p"].RGBA,samplingMode:!f||"bilinear"!==n&&"cubic"!==n?o["z"].NEAREST:o["z"].LINEAR,dataType:c,wrapMode:o["B"].CLAMP_TO_EDGE,flipped:!1};return new r["a"](e,d,u)}function l(e,t){const{spacing:n,offsets:i,coefficients:s,size:[l,c]}=t,u=n[0]>1,f={width:u?4*l:l,height:c,target:o["A"].TEXTURE_2D,pixelFormat:o["p"].RGBA,internalFormat:e.type===a["a"].WEBGL2?o["v"].RGBA32F:o["p"].RGBA,dataType:o["q"].FLOAT,samplingMode:o["z"].NEAREST,wrapMode:o["B"].CLAMP_TO_EDGE,flipped:!1},d=new Float32Array(u?l*c*16:2*i.length);if(u)for(let a=0,o=0;a<s.length;a++)d[o++]=s[a],a%3==2&&(d[o++]=1);else for(let a=0;a<c;a++)for(let e=0;e<l;e++){const t=4*(a*l+e),n=2*(e*c+a);d[t]=i[n],d[t+1]=i[n+1],d[t+3]=-1===i[n]?0:1}return new r["a"](e,f,d)}function c(e,t){const n={width:t.length/4,height:1,target:o["A"].TEXTURE_2D,pixelFormat:o["p"].RGBA,internalFormat:o["p"].RGBA,dataType:o["q"].UNSIGNED_BYTE,samplingMode:o["z"].NEAREST,wrapMode:o["B"].CLAMP_TO_EDGE,flipped:!1};return new r["a"](e,n,t)}function u(e,t,n,a=1,o=!0){return{u_flipY:o,u_applyTransform:!!e,u_opacity:a,u_transformSpacing:e?e.spacing:i["b"],u_transformGridSize:e?e.size:i["b"],u_targetImageSize:t,u_srcImageSize:n}}function f(e,t){return{u_colormapOffset:t||0,u_colormapMaxIndex:e?e.length/4-1:0}}function d(e,t){return{u_scale:e,u_offset:t}}function m(e){return{u_bandCount:e.bandCount,u_minOutput:e.outMin,u_maxOutput:e.outMax,u_minCutOff:e.minCutOff,u_maxCutOff:e.maxCutOff,u_factor:e.factor,u_useGamma:e.useGamma,u_gamma:e.gamma,u_gammaCorrection:e.gammaCorrection}}function h(e){return{u_hillshadeType:e.hillshadeType,u_sinZcosAs:e.sinZcosAs,u_sinZsinAs:e.sinZsinAs,u_cosZs:e.cosZs,u_weights:e.weights,u_factor:e.factor,u_minValue:e.minValue,u_maxValue:e.maxValue}}function _(e,t){const n=e.gl,i=t.glName,a=n.getProgramParameter(i,n.ACTIVE_UNIFORMS),o=new Map;let r;for(let s=0;s<a;s++)r=n.getActiveUniform(i,s),r&&o.set(r.name,{location:n.getUniformLocation(i,r.name),info:r});return o}function p(e,t,n){Object.keys(n).forEach(i=>{const a=t.get(i)||t.get(i+"[0]");a&&g(e,i,n[i],a)})}function v(e,t,n,i){n.length===i.length&&(i.some(e=>null==e)||n.some(e=>null==e)||n.forEach((n,a)=>{t.setUniform1i(n,a),e.bindTexture(i[a],a)}))}function g(e,t,n,i){if(null===i||null==n)return!1;const{info:a}=i;switch(a.type){case o["C"].FLOAT:a.size>1?e.setUniform1fv(t,n):e.setUniform1f(t,n);break;case o["C"].FLOAT_VEC2:e.setUniform2fv(t,n);break;case o["C"].FLOAT_VEC3:e.setUniform3fv(t,n);break;case o["C"].FLOAT_VEC4:e.setUniform4fv(t,n);break;case o["C"].FLOAT_MAT3:e.setUniformMatrix3fv(t,n);break;case o["C"].FLOAT_MAT4:e.setUniformMatrix4fv(t,n);break;case o["C"].INT:a.size>1?e.setUniform1iv(t,n):e.setUniform1i(t,n);break;case o["C"].BOOL:e.setUniform1i(t,n?1:0);break;case o["C"].INT_VEC2:case o["C"].BOOL_VEC2:e.setUniform2iv(t,n);break;case o["C"].INT_VEC3:case o["C"].BOOL_VEC3:e.setUniform3iv(t,n);break;case o["C"].INT_VEC4:case o["C"].BOOL_VEC4:e.setUniform4iv(t,n);break;default:return!1}return!0}},c9ee:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var i=n("b2b2"),a=n("8c71"),o=n("f079"),r=n("d17d");class s extends o["a"]{constructor(){super(...arguments),this._visualState={time:0,dvsMat3:Object(a["b"])(),displayViewMat3:Object(a["b"])()}}dispose(){}prepareState(e){const{context:t}=e;t.setColorMask(!0,!0,!0,!0),t.setStencilFunction(r["h"].EQUAL,0,255)}draw(e,t){const{requestRender:n}=e,{displayData:a}=t;if(Object(i["j"])(a))return;if("loaded"===a.state.name&&a.attach(e),"attached"!==a.state.name)return;const o=a.state.resources;o.ready||!Object(i["k"])(n)?(this._visualState.time=e.time/1e3,this._visualState.dvsMat3=t.transforms.dvs,this._visualState.displayViewMat3=e.state.displayViewMat3,a.flowStyle.render(e,this._visualState,o),a.flowStyle.animated&&Object(i["k"])(n)&&n()):n()}}},db21:function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return i})),n.d(t,"d",(function(){return r}));const i=!0,a=32,o=1.5,r=200},e4b1:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var i=n("1c92"),a=n("7c4b"),o=n("ae54");class r extends a["a"]{constructor(e,t,n,i,a,r=i,s=a){super(),this.triangleCountReportedInDebug=0,this.triangleCount=0,this.texture=null,this.key=new o["a"](e),this.x=t,this.y=n,this.width=i,this.height=a,this.rangeX=r,this.rangeY=s}destroy(){this.texture&&(this.texture.dispose(),this.texture=null)}setTransform(e,t){const n=t/(e.resolution*e.pixelRatio),a=this.transforms.tileMat3,[o,r]=e.toScreenNoRotation([0,0],[this.x,this.y]),s=this.width/this.rangeX*n,l=this.height/this.rangeY*n;Object(i["m"])(a,s,0,0,0,l,0,o,r,1),Object(i["j"])(this.transforms.dvs,e.displayViewMat3,a)}}},ec5e:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var i=n("b2b2"),a=n("5ef2"),o=n("2e5c"),r=n("f079"),s=n("21c1"),l=n("7ce4"),c=n("d17d"),u=n("681f"),f=n("0fa6");class d extends r["a"]{constructor(){super(...arguments),this._color=Object(a["c"])(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState({context:e},t){e.setDepthWriteEnabled(!1),e.setDepthTestEnabled(!1),e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(c["w"].KEEP,c["w"].KEEP,c["w"].REPLACE),e.setStencilWriteMask(255),e.setStencilFunctionSeparate(c["n"].FRONT_AND_BACK,c["h"].GREATER,t.stencilRef,255)}draw(e,t){const{context:n,requestRender:a}=e;this._initialized||this._initialize(n),!Object(i["k"])(a)||this._solidProgram.isCompiled?(n.bindVAO(this._solidVertexArrayObject),n.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._solidProgram.setUniform2fv("u_coord_range",[t.rangeX,t.rangeY]),this._solidProgram.setUniform1f("u_depth",0),this._solidProgram.setUniform4fv("u_color",this._color),n.drawArrays(c["r"].TRIANGLE_STRIP,0,4),n.bindVAO()):a()}_initialize(e){if(this._initialized)return!0;const t=Object(u["a"])(e,s["a"]);if(!t)return!1;const n=new Int8Array([0,0,1,0,0,1,1,1]),i=l["a"].createVertex(e,c["D"].STATIC_DRAW,n),a=new f["a"](e,s["a"].attributes,o["a"],{geometry:i});return this._solidProgram=t,this._solidVertexArrayObject=a,this._initialized=!0,!0}}},ef89:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return m})),n.d(t,"c",(function(){return i})),n.d(t,"d",(function(){return l})),n.d(t,"e",(function(){return o})),n.d(t,"f",(function(){return s})),n.d(t,"g",(function(){return c})),n.d(t,"h",(function(){return f})),n.d(t,"i",(function(){return u})),n.d(t,"j",(function(){return a}));var i,a,o,r,s,l,c,u,f,d=n("ab39");!function(e){e[e.BACKGROUND=0]="BACKGROUND",e[e.FILL=1]="FILL",e[e.LINE=2]="LINE",e[e.SYMBOL=3]="SYMBOL",e[e.CIRCLE=4]="CIRCLE"}(i||(i={})),function(e){e[e.VISIBLE=0]="VISIBLE",e[e.NONE=1]="NONE"}(a||(a={})),function(e){e[e.POINT=0]="POINT",e[e.LINE=1]="LINE",e[e.LINE_CENTER=2]="LINE_CENTER"}(o||(o={})),function(e){e[e.MAP=0]="MAP",e[e.VIEWPORT=1]="VIEWPORT",e[e.AUTO=2]="AUTO"}(r||(r={})),function(e){e[e.AUTO=0]="AUTO",e[e.LEFT=1]="LEFT",e[e.CENTER=2]="CENTER",e[e.RIGHT=3]="RIGHT"}(s||(s={})),function(e){e[e.CENTER=0]="CENTER",e[e.LEFT=1]="LEFT",e[e.RIGHT=2]="RIGHT",e[e.TOP=3]="TOP",e[e.BOTTOM=4]="BOTTOM",e[e.TOP_LEFT=5]="TOP_LEFT",e[e.TOP_RIGHT=6]="TOP_RIGHT",e[e.BOTTOM_LEFT=7]="BOTTOM_LEFT",e[e.BOTTOM_RIGHT=8]="BOTTOM_RIGHT"}(l||(l={})),function(e){e[e.NONE=0]="NONE",e[e.UPPERCASE=1]="UPPERCASE",e[e.LOWERCASE=2]="LOWERCASE"}(c||(c={})),function(e){e[e.MAP=0]="MAP",e[e.VIEWPORT=1]="VIEWPORT"}(u||(u={})),function(e){e[e.HORIZONTAL=0]="HORIZONTAL",e[e.VERTICAL=1]="VERTICAL"}(f||(f={}));class m{}m.backgroundLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:a.VISIBLE}},m.fillLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:a.VISIBLE}},m.lineLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:a.VISIBLE},"line-cap":{type:"enum",values:["butt","round","square"],default:d["e"].BUTT},"line-join":{type:"enum",values:["bevel","round","miter"],default:d["p"].MITER},"line-miter-limit":{type:"number",default:2},"line-round-limit":{type:"number",default:1.05}},m.symbolLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:a.VISIBLE},"symbol-avoid-edges":{type:"boolean",default:!1},"symbol-placement":{type:"enum",values:["point","line","line-center"],default:o.POINT},"symbol-sort-key":{type:"number",default:-1},"symbol-spacing":{type:"number",minimum:1,default:250},"icon-allow-overlap":{type:"boolean",default:!1},"icon-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:l.CENTER},"icon-ignore-placement":{type:"boolean",default:!1},"icon-image":{type:"string"},"icon-keep-upright":{type:"boolean",default:!1},"icon-offset":{type:"array",value:"number",length:2,default:[0,0]},"icon-optional":{type:"boolean",default:!1},"icon-padding":{type:"number",minimum:0,default:2},"icon-rotate":{type:"number",default:0},"icon-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:r.AUTO},"icon-size":{type:"number",minimum:0,default:1},"text-allow-overlap":{type:"boolean",default:!1},"text-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:l.CENTER},"text-field":{type:"string"},"text-font":{type:"array",value:"string",default:["Open Sans Regular","Arial Unicode MS Regular"]},"text-ignore-placement":{type:"boolean",default:!1},"text-justify":{type:"enum",values:["auto","left","center","right"],default:s.CENTER},"text-keep-upright":{type:"boolean",default:!0},"text-letter-spacing":{type:"number",default:0},"text-line-height":{type:"number",default:1.2},"text-max-angle":{type:"number",minimum:0,default:45},"text-max-width":{type:"number",minimum:0,default:10},"text-offset":{type:"array",value:"number",length:2,default:[0,0]},"text-optional":{type:"boolean",default:!1},"text-padding":{type:"number",minimum:0,default:2},"text-rotate":{type:"number",default:0},"text-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:r.AUTO},"text-size":{type:"number",minimum:0,default:16},"text-transform":{type:"enum",values:["none","uppercase","lowercase"],default:c.NONE},"text-writing-mode":{type:"array",value:"enum",values:["horizontal","vertical"],default:[f.HORIZONTAL]}},m.circleLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:a.VISIBLE}},m.backgroundPaintDefinition={"background-color":{type:"color",default:[0,0,0,1]},"background-opacity":{type:"number",minimum:0,maximum:1,default:1},"background-pattern":{type:"string"}},m.fillPaintDefinition={"fill-antialias":{type:"boolean",default:!0},"fill-color":{type:"color",default:[0,0,0,1]},"fill-opacity":{type:"number",minimum:0,maximum:1,default:1},"fill-outline-color":{type:"color",default:[0,0,0,0]},"fill-pattern":{type:"string"},"fill-translate":{type:"array",value:"number",length:2,default:[0,0]},"fill-translate-anchor":{type:"enum",values:["map","viewport"],default:u.MAP}},m.linePaintDefinition={"line-blur":{type:"number",minimum:0,default:0},"line-color":{type:"color",default:[0,0,0,1]},"line-dasharray":{type:"array",value:"number",default:[]},"line-gap-width":{type:"number",minimum:0,default:0},"line-offset":{type:"number",default:0},"line-opacity":{type:"number",minimum:0,maximum:1,default:1},"line-pattern":{type:"string"},"line-translate":{type:"array",value:"number",length:2,default:[0,0]},"line-translate-anchor":{type:"enum",values:["map","viewport"],default:u.MAP},"line-width":{type:"number",minimum:0,default:1}},m.symbolPaintDefinition={"icon-color":{type:"color",default:[0,0,0,1]},"icon-halo-blur":{type:"number",minimum:0,default:0},"icon-halo-color":{type:"color",default:[0,0,0,0]},"icon-halo-width":{type:"number",minimum:0,default:0},"icon-opacity":{type:"number",minimum:0,maximum:1,default:1},"icon-translate":{type:"array",value:"number",length:2,default:[0,0]},"icon-translate-anchor":{type:"enum",values:["map","viewport"],default:u.MAP},"text-color":{type:"color",default:[0,0,0,1]},"text-halo-blur":{type:"number",minimum:0,default:0},"text-halo-color":{type:"color",default:[0,0,0,0]},"text-halo-width":{type:"number",minimum:0,default:0},"text-opacity":{type:"number",minimum:0,maximum:1,default:1},"text-translate":{type:"array",value:"number",length:2,default:[0,0]},"text-translate-anchor":{type:"enum",values:["map","viewport"],default:u.MAP}},m.rasterPaintDefinition={"raster-opacity":{type:"number",minimum:0,maximum:1,default:1},"raster-hue-rotate":{type:"number",default:0},"raster-brightness-min":{type:"number",minimum:0,maximum:1,default:0},"raster-brightness-max":{type:"number",minimum:0,maximum:1,default:1},"raster-saturation":{type:"number",minimum:-1,maximum:1,default:0},"raster-contrast":{type:"number",minimum:-1,maximum:1,default:0},"raster-fade-duration":{type:"number",minimum:0,default:300}},m.circlePaintDefinition={"circle-blur":{type:"number",minimum:0,default:0},"circle-color":{type:"color",default:[0,0,0,1]},"circle-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-radius":{type:"number",minimum:0,default:5},"circle-stroke-color":{type:"color",default:[0,0,0,1]},"circle-stroke-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-stroke-width":{type:"number",minimum:0,default:0},"circle-translate":{type:"array",value:"number",length:2,default:[0,0]},"circle-translate-anchor":{type:"enum",values:["map","viewport"],default:u.MAP}}},f079:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));class i{constructor(){this.name=this.constructor.name||"UnnamedBrush"}prepareState(e,t,n){}draw(e,t,n){}drawMany(e,t,n){for(const i of t)this.draw(e,i,n)}}},f440:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var i=n("b2b2"),a=n("1c92"),o=n("8c71"),r=n("738e"),s=n("9dee"),l=n("7c4b"),c=n("d17d"),u=n("beba");const f={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class d extends l["a"]{constructor(e=null,t=null,n=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._supportsBilinearTexture=!0,this.stencilRef=0,this.coordScale=[1,1],this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=e,this.transformGrid=t,this.interpolation=n}destroy(){var e;null!=(e=this.getTextures())&&e.textures.forEach(e=>e.dispose()),this._rasterTexture=null,this._transformGridTexture=null,this._colormapTexture=null}get symbolizerParameters(){return this._symbolizerParameters||f}set symbolizerParameters(e){this._symbolizerParameters!==e&&(this._symbolizerParameters=e,this._colormapTextureInvalidated=!0)}get source(){return this._source}set source(e){this._source!==e&&(this._source=e,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.invalidateTexture())}get suspended(){return this._suspended}set suspended(e){this._suspended&&!e&&this.stage&&(this.ready(),this.requestRender()),this._suspended=e}get bandIds(){return this._bandIds}set bandIds(e){this._bandIds=e,this._isBandIdschanged(e)&&this.invalidateTexture()}get interpolation(){return this._interpolation||"nearest"}set interpolation(e){this._interpolation=e,this._rasterTexture&&this._rasterTexture.setSamplingMode("bilinear"===this._getTextureSamplingMethod(e)?c["z"].LINEAR:c["z"].NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(e){this._transformGrid=e,this._transformGridTexture&&(this._transformGridTexture.dispose(),this._transformGridTexture=null)}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}_createTransforms(){return{dvs:Object(o["b"])()}}setTransform(e){const t=Object(a["b"])(this.transforms.dvs),[n,i]=e.toScreenNoRotation([0,0],[this.x,this.y]),o=this.resolution/this.pixelRatio/e.resolution,s=o*this.width,l=o*this.height,c=Math.PI*this.rotation/180;Object(a["c"])(t,t,Object(r["b"])(n,i)),Object(a["c"])(t,t,Object(r["b"])(s/2,l/2)),Object(a["l"])(t,t,-c),Object(a["c"])(t,t,Object(r["b"])(-s/2,-l/2)),Object(a["i"])(t,t,Object(r["b"])(s,l)),Object(a["j"])(this.transforms.dvs,e.displayViewMat3,t)}getTextures(){if(!this._rasterTexture)return null;const e=[],t=[];return this._transformGridTexture&&(t.push(this._transformGridTexture),e.push("u_transformGrid")),this._rasterTexture&&(t.push(this._rasterTexture),e.push("u_image")),this._colormapTexture&&(t.push(this._colormapTexture),e.push("u_colormap")),{names:e,textures:t}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:e}){var t,n,i;if(!this.stage)return null!=(t=this._rasterTexture)&&t.dispose(),null!=(n=this._transformGridTexture)&&n.dispose(),null!=(i=this._colormapTexture)&&i.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,void(this._colormapTexture=null);const a=this._isValidSource(this.source);a&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(e)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(e),this._rasterTexture&&(a?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=Object(u["c"])(e,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}_createOrDestroyRasterTexture(e){var t,n;const a=Object(i["k"])(this.source)?Object(s["d"])(this.source,this.bandIds):null;if(!this._isValidSource(a))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null));const o=!this._isBandIdschanged(this.bandIds);if(this._rasterTexture){if(o)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null}this._supportsBilinearTexture=null==(t=e.capabilities.textureFloat)?void 0:t.textureFloatLinear;const r=this._getTextureSamplingMethod(this.interpolation),l=this.isRendereredSource||!(null!=(n=e.capabilities.textureFloat)&&n.textureFloat);this._rasterTexture=Object(u["b"])(e,a,r,l),this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdschanged(e){const t=this._rasterTextureBandIds;return!(null==t&&null==e||t&&e&&t.join("")===e.join(""))}_isValidSource(e){var t;return Object(i["k"])(e)&&(null==(t=e.pixels)?void 0:t.length)>0}_getTextureSamplingMethod(e){const{type:t,colormap:n}=this.symbolizerParameters,a="lut"===t||"stretch"===t&&Object(i["k"])(n);return!this._supportsBilinearTexture||a||"bilinear"!==e&&"cubic"!==e?"nearest":"bilinear"}_updateColormapTexture(e){const t=this._colormap,n=this.symbolizerParameters.colormap;return n?t?n.length!==t.length||n.some((e,n)=>e!==t[n])?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=Object(u["a"])(e,n),void(this._colormap=n)):void 0:(this._colormapTexture=Object(u["a"])(e,n),void(this._colormap=n)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}}function m(e){return Object(i["k"])(e.source)}}}]);
//# sourceMappingURL=chunk-5e1a8e82.e8c7fa94.js.map